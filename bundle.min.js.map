{"version":3,"file":"bundle.min.js","mappings":"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","sources":["webpack://retusa/webpack/universalModuleDefinition","webpack://retusa/./index.js","webpack://retusa/./libs/argument.js","webpack://retusa/./libs/distribution.js","webpack://retusa/./libs/extensions.js","webpack://retusa/./libs/locale.js","webpack://retusa/./libs/matrix.js","webpack://retusa/./libs/output.js","webpack://retusa/./libs/vector.js","webpack://retusa/./locales/cs-CZ.js","webpack://retusa/./locales/en-GB.js","webpack://retusa/webpack/bootstrap","webpack://retusa/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","var Vector = require(\"./libs/vector\");\r\nvar Locale = require(\"./libs/locale\");\r\nvar Matrix = require(\"./libs/matrix\");\r\nvar dist = require(\"./libs/distribution\");\r\n\r\nmodule.exports = {\r\n    Matrix: Matrix.Matrix,\r\n    matrix: function(){\r\n        return new Matrix.Matrix(...arguments);\r\n    },\r\n    vector: function(){\r\n        return [...arguments].vectorify();\r\n    },\r\n    NumericVector: Vector.NumericVector,\r\n    StringVector: Vector.StringVector,\r\n    BooleanVector: Vector.BooleanVector,\r\n    VectorAnalysis: Vector.VectorAnalysis,\r\n    MatrixAnalysis: Matrix.MatrixAnalysis,\r\n    Argument: require(\"./libs/argument\").Argument,\r\n    Output: require(\"./libs/output\").Output,\r\n    locale: Locale,\r\n    utils: {\r\n        distribution: dist\r\n    }\r\n}","var $ = require('./locale').call;\r\n\r\nvar lib = {\r\n    any: {\r\n        title: \"oMas\",\r\n        mdType: \"oMas\",\r\n        tag: {\r\n            control: \"input\",\r\n            type: \"any\"\r\n        },\r\n        validate: function(value, parent, model){\r\n            return value;\r\n        }\r\n    },\r\n    number: {\r\n        title: \"pelN\",\r\n        validator: \"NfvF\",\r\n        mdType: \"pelN\",\r\n        tag: {\r\n            control: \"input\",\r\n            type: \"number\"\r\n        },\r\n        validate: function(value, parent, model){\r\n            if(isNaN(value)) throw new Error($(\"Jphg\",{name: model.name, title: $(model.title), value: value}));\r\n            else return Number(value);\r\n        }\r\n    },\r\n    boolean: {\r\n        title: \"kbla\",\r\n        validator: \"GHFj\",\r\n        mdType: \"kbla\",\r\n        tag: {\r\n            control: \"boolean\"\r\n        },\r\n        validate: function(value, parent){\r\n            if(value) return true;\r\n            else return false\r\n        }\r\n    },\r\n    positiveInteger: {\r\n        title: \"IrhN\",\r\n        validator: \"dFiw\",\r\n        mdType: \"pelN\",\r\n        tag: {\r\n            control: \"input\",\r\n            type: \"number\",\r\n            min: 1,\r\n            step: 1            \r\n        },\r\n        validate: function(value, parent, model){\r\n            if(isNaN(value)) throw new Error($(\"Jphg\", {value: value}));\r\n            else if(Math.round(Number(value)) < 1) throw new Error($(\"BaeM\",{name: model.name, title: $(model.title), value: value}));\r\n            else if(Number(value) % 1 != 0) throw new Error($(\"VxSV\",{name: model.name, title: $(model.title), value: value}));\r\n            else return Number(value);\r\n        }\r\n    },\r\n    positiveDecimal: {\r\n        title: \"ffka\",\r\n        validator: \"dFiw\",\r\n        mdType: \"ffka\",\r\n        tag: {\r\n            control: \"input\",\r\n            type: \"number\",\r\n            min: 0.0000000000000001,\r\n            step: 0.0000000000000001    \r\n        },\r\n        validate: function(value, parent, model){\r\n            if(isNaN(value)) throw new Error($(\"Jphg\", {name: model.name, title: $(model.title), value: value}));\r\n            else if(Number(value) <= 0) throw new Error($(\"baSh\", {name: model.name, title: $(model.title), value: value}));\r\n            else return Number(value);\r\n        }\r\n    },\r\n    zeroToOneInc: {\r\n        title: \"OQnL\",\r\n        validator: \"dFiw\",\r\n        mdType: \"OQnL\",\r\n        tag: {\r\n            control: \"input\",\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.0000000000000001    \r\n        },\r\n        validate: function(value, parent, model){\r\n            if(isNaN(value)) throw new Error($(\"Jphg\", {name: model.name, title: $(model.title), value: value}));\r\n            else if(Number(value) < 0 || Number(value) > 1) throw new Error($(\"vKlu\", {name: model.name, title: $(model.title), value: value}));\r\n            else return Number(value);\r\n        }\r\n    },\r\n    anyVector: {\r\n        title: \"yWUM\",\r\n        description: null,\r\n        validator: \"mPC4\",\r\n        mdType: \"WGo9\",\r\n        isVector: true,\r\n        isMultiple: false,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false,\r\n            type: [1,2,3]\r\n        },\r\n        validate: function(value, parent){\r\n            var v = parseVector(value, parent);\r\n            return v;\r\n        }\r\n    },\r\n    numericVector: {\r\n        title: \"gtdH\",\r\n        validator: \"suji\",\r\n        mdType: \"wggy\",\r\n        isVector: true,\r\n        isMultiple: false,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false,\r\n            type: [1]\r\n        },\r\n        validate: function(value, parent){\r\n            var v = parseVector(value, parent);\r\n            if(v.type() !== 1) throw new Error($(\"cNG4\"))\r\n            else return v;\r\n        }\r\n    },\r\n    booleanVector: {\r\n        title: \"boQk\",\r\n        validator: \"JwDb\",\r\n        mdType: \"boQk\",\r\n        isVector: true,\r\n        isMultiple: false,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false,\r\n            type: [3]\r\n        },\r\n        validate: function(value, parent){\r\n            var v = parseVector(value, parent);\r\n            if(v.type() !== 3) throw new Error($(\"KvHv\"))\r\n            else return v;\r\n        }\r\n    },\r\n    numericVectors: {\r\n        title: \"AQoT\",\r\n        validator: \"nohy\",\r\n        mdType: \"8TtV\",\r\n        isVector: true,\r\n        isMultiple: true,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: true,\r\n            type: [1]\r\n        },\r\n        validate: function(value, parent){\r\n            var m = parseMatrix(value, parent);\r\n            for(let v of m) {\r\n                if(v.type() !== 1) throw new Error($(\"cNG4\"))\r\n            }            \r\n            return m;\r\n        }\r\n    },\r\n    regressionModel: {\r\n        title: \"OBml\",\r\n        validator: \"dKFL\",\r\n        mdType: \"u5oV\",\r\n        isEnum: true,\r\n        enums: [\r\n            {\r\n                value: 1, //linear\r\n                key: \"Cpsw\"\r\n            },\r\n            {\r\n                value: 2, // logistic\r\n                key: \"UtZD\"\r\n            },\r\n            {\r\n                value: 3, //hyperbole\r\n                key: \"SCOx\"\r\n            },\r\n            {\r\n                value: 4, //exponential\r\n                key: \"QaJi\"\r\n            },\r\n            {\r\n                value: 5, //quadratic\r\n                key: \"HUMA\"\r\n            }\r\n        ],\r\n        default: 1,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false\r\n        },\r\n        validate: function(value, parent, model){\r\n            return validateEnum(value, parent, model);\r\n        }\r\n    },\r\n    correlationMatrixMethod: {\r\n        title: \"nDx1\",\r\n        validator: \"dKFL\",\r\n        mdType: \"u5oV\",\r\n        isEnum: true,\r\n        enums: [\r\n            {\r\n                value: 1, //Pearson\r\n                key: \"GR2Y\"\r\n            },\r\n            {\r\n                value: 2, // Spearman\r\n                key: \"5BMC\"\r\n            },\r\n            {\r\n                value: 3, //Kendall\r\n                key: \"MqE5\"\r\n            },\r\n            {\r\n                value: 4, //Gamma\r\n                key: \"xKzh\"\r\n            }\r\n        ],\r\n        default: 1,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false\r\n        },\r\n        validate: function(value, parent, model){\r\n            return validateEnum(value, parent, model);\r\n        }\r\n\r\n    },\r\n    frequencyOrder: {\r\n        type: \"enum\",\r\n        title: \"gZCx\",\r\n        validator: \"dKFL\",\r\n        mdType: \"u5oV\",\r\n        isEnum: true,\r\n        enums: [\r\n            {\r\n                value: 1, \r\n                key: \"AUbD\"\r\n            },\r\n            {\r\n                value: 2, \r\n                key: \"WSJH\"\r\n            },\r\n            {\r\n                value: 3, \r\n                key: \"dkxz\"\r\n            },\r\n            {\r\n                value: 4, \r\n                key: \"vJCU\"\r\n            }\r\n        ],\r\n        default: 1,\r\n        tag: {\r\n            control: \"select\",\r\n            multiple: false\r\n        },\r\n        validate: function(value, parent, model){\r\n            return validateEnum(value, parent, model);\r\n        }\r\n    },\r\n}\r\n\r\nclass Argument {\r\n    constructor(name, parent, overloads) {\r\n        var model = lib[name];\r\n        if(!model) throw new Error(\"Unknown argument model name: \" + name);\r\n        this.name = model.name;\r\n        if(typeof overloads == \"object\") {\r\n            Object.keys(overloads).forEach(function(key) {\r\n                model[key] = overloads[key];\r\n            });\r\n        }        \r\n        this.mdType = {\r\n            key: model.mdType,\r\n            value: $(model.mdType)\r\n        }\r\n        this.title = {\r\n            key: model.title || null,\r\n            value: $(model.title)\r\n        };\r\n        this.default = model.default;\r\n        this.required = (model.required || model.isRequired) ? true : false;\r\n        if(model.isEnum) {\r\n            this.isEnum = true;\r\n            this.enums = model.enums.map(function(e){\r\n                e.title = $(e.key);\r\n                return e;\r\n            });\r\n        };\r\n        this.multiple = !!(model.isMultiple || model.multiple);\r\n        this.description = {\r\n            key: model.description || null,\r\n            value: $(model.description) || null\r\n        };\r\n        this.validator = {\r\n            key: model.validator || null,\r\n            value: $(model.validator) || null\r\n        };\r\n        this.isVector = model.isVector || false;\r\n        this.tag = {\r\n            control: model.tag?.control || \"input\",\r\n            type: model.tag?.type || \"text\",\r\n            multiple: model.tag?.multiple !== undefined ? model.tag.multiple : model.isMultiple !== undefined ? !!model.isMultiple : undefined,\r\n            min: !isNaN(model.tag?.min) ? Number(model.tag.min) : undefined,\r\n            max: !isNaN(model.tag?.max) ? Number(model.tag.max) : undefined,\r\n            step: !isNaN(model.tag?.step) ? Number(model.tag.step) : undefined\r\n        }\r\n        this.validate = function(value) {\r\n            if(model.default !==undefined && (value === undefined || value === null)) {\r\n                return model.default;\r\n            }\r\n            else if(!model.required && (value === undefined || value === null)) {\r\n                return undefined;\r\n            }\r\n            else if(model.required && (value === undefined)) {\r\n                throw new Error($(\"HOuY\", {name: model.name, title: $(model.title)}));\r\n            }\r\n            else return model.validate(value, parent, model);\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseVector(v, parent) {\r\n    if(!v && v !== 0) throw new Error(\"Value is empty\");\r\n    if(parent) {\r\n        if(parent.item(v)) return parent.item(v);\r\n    }\r\n    if(!Array.isArray(v)) throw new Error(\"Value must be iterable\");\r\n    else if(v.isVector) return v;\r\n    else {\r\n        try {\r\n            return v.vectorify();\r\n        } catch (e) {\r\n            throw new Error(\"The value cannot be converted to a vector.\")\r\n        }\r\n    }\r\n}\r\n\r\nfunction parseMatrix(arr, parent) {\r\n    if(!Matrix) var {Matrix} = require(\"./matrix\");\r\n    if(parent) {\r\n        if(parent.item(arr)) return new Matrix(parent.item(arr));\r\n    }\r\n    if(!Array.isArray(arr)) throw new Error(\"Value must be iterable.\");\r\n    else if(arr.isMatrix) return arr;\r\n    else if(arr.isVector) return new Matrix(arr)\r\n    else {\r\n        var M = new Matrix();\r\n        arr.forEach(function(a){\r\n            if(a.isVector) M.push(a);\r\n            else if(parent.item(a)) M.push(parent.item(a));\r\n        });\r\n        return M;\r\n    }\r\n}\r\n\r\nfunction validateEnum(value, parent, model) {\r\n    if(model.enums.map(e => e.value).indexOf(Number(value)) < 0) {\r\n        var keys = model.enums.map(e => `${e.value} = ${$(e.key)}`).join(\", \")\r\n        throw new Error($(\"HhLt\", {name: $(model.name), title: $(model.title), value: value, keys: keys}))\r\n    } else return Number(value);\r\n}\r\n\r\nmodule.exports = {Argument}","Math.factorial = function (n) {\r\n    if (n === 0) {\r\n      return 1;\r\n    } else {\r\n      return n * Math.factorial(n - 1);\r\n    }\r\n  }\r\n\r\nmodule.exports = {\r\n    betacf: betacf,\r\n    betinc: betinc,\r\n    binomdist: binomdist,\r\n    binominv: binominv,\r\n    chisqdist: chisqdist,\r\n    chisqinv: chisqinv,\r\n    erf: erf,\r\n    fdist: fdist,\r\n    fdistrt: fdistrt,\r\n    finv: finv,\r\n    gammaln: gammaln,\r\n    gammapinv: gammapinv,\r\n    ibeta: ibeta,\r\n    ibetainv: ibetainv,\r\n    lowRegGamma: lowRegGamma,\r\n    normdist: normdist,\r\n    normsdist: normsdist,\r\n    normsinv: normsinv,\r\n    tdist: tdist,\r\n    tinv: tinv,\r\n    wilcoxondist: wilcoxondist\r\n}\r\n\r\nfunction normsdist(x, cumulative){\r\n    return normdist(x,0,1,cumulative);\r\n}\r\n\r\nfunction normdist(x, mean, std, cumulative = false) {\r\n    if(!cumulative) {\r\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\r\n    }\r\n    else return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {} x \r\n * @returns \r\n */\r\nfunction erf(x) {\r\n    var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\r\n               -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\r\n               4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\r\n               1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\r\n               6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\r\n               -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\r\n               -6.886027e-12, 8.94487e-13, 3.13092e-13,\r\n               -1.12708e-13, 3.81e-16, 7.106e-15,\r\n               -1.523e-15, -9.4e-17, 1.21e-16,\r\n               -2.8e-17];\r\n    var j = cof.length - 1;\r\n    var isneg = false;\r\n    var d = 0;\r\n    var dd = 0;\r\n    var t, ty, tmp, res;\r\n  \r\n    if (x < 0) {\r\n      x = -x;\r\n      isneg = true;\r\n    }\r\n  \r\n    t = 2 / (2 + x);\r\n    ty = 4 * t - 2;\r\n  \r\n    for(; j > 0; j--) {\r\n      tmp = d;\r\n      d = ty * d - dd + cof[j];\r\n      dd = tmp;\r\n    }\r\n  \r\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\r\n    return isneg ? res - 1 : 1 - res;\r\n  };\r\n\r\n/**\r\n * @source https://gist.github.com/u840903/08877a0703764c7ed2ba7b9662fcdecb\r\n * @param {Number} value Probability value. \r\n * @param {Integer} type Type of probability value. Default 0 (0.95 = 1.96).\r\n * @returns {Number} Normal standardized inverse distribution value.\r\n * @example \r\n *  normsinv(0.95, 0) => returns 1.96\r\n *  normsinv(0.975, 1) => returns 1.96\r\n *  normsinv(0.05, 2) => returns 1.96\r\n *  normsinv(0.025, 3) => returns 1.96\r\n */\r\nfunction normsinv(value, type = 0) {\r\n    switch (type) {\r\n        // 0.95 = 1.96\r\n        case 0:\r\n            value = 1 - (1 - value) / 2;\r\n            break;\r\n            // 0.975 = 1.96\r\n            // 0.05 = 1.96\r\n        case 1: \r\n            value = value;\r\n            break;\r\n        case 2:\r\n            value = value / 2;\r\n            break;\r\n            // 0.025 = 1.96\r\n        case 3:\r\n            value = (1 - value) / 2;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    var a1 = -39.6968302866538,\r\n        a2 = 220.946098424521,\r\n        a3 = -275.928510446969;\r\n    var a4 = 138.357751867269,\r\n        a5 = -30.6647980661472,\r\n        a6 = 2.50662827745924;\r\n    var b1 = -54.4760987982241,\r\n        b2 = 161.585836858041,\r\n        b3 = -155.698979859887;\r\n    var b4 = 66.8013118877197,\r\n        b5 = -13.2806815528857,\r\n        c1 = -7.78489400243029E-03;\r\n    var c2 = -0.322396458041136,\r\n        c3 = -2.40075827716184,\r\n        c4 = -2.54973253934373;\r\n    var c5 = 4.37466414146497,\r\n        c6 = 2.93816398269878,\r\n        d1 = 7.78469570904146E-03;\r\n    var d2 = 0.32246712907004,\r\n        d3 = 2.445134137143,\r\n        d4 = 3.75440866190742;\r\n    var p_low = 0.02425,\r\n        p_high = 1 - p_low;\r\n    var q, r;\r\n    var retVal;\r\n    if (value < p_low) {\r\n        q = Math.sqrt(-2 * Math.log(value));\r\n        retVal = (((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    } else if (value <= p_high) {\r\n        q = value - 0.5;\r\n        r = q * q;\r\n        retVal = (((((a1 * r + a2) * r + a3) * r + a4) * r + a5) * r + a6) * q / (((((b1 * r + b2) * r + b3) * r + b4) * r + b5) * r + 1);\r\n    } else {\r\n        q = Math.sqrt(-2 * Math.log(1 - value));\r\n        retVal = -(((((c1 * q + c2) * q + c3) * q + c4) * q + c5) * q + c6) / ((((d1 * q + d2) * q + d3) * q + d4) * q + 1);\r\n    }\r\n\r\n    return retVal;\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {Number} x Quantile of the F distribution (right-tailed). \r\n * @param {Integer} df1 Between-group degrees of freedom.\r\n * @param {Integer} df2 Within-groups degrees of freedom.\r\n * @returns Value of the inversed F distribution.\r\n */\r\nfunction finv(x, df1, df2) {\r\n    return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction ibeta(x, a, b) {\r\n    var bt = (x === 0 || x === 1) ? 0 :\r\n        Math.exp(gammaln(a + b) - gammaln(a) -\r\n            gammaln(b) + a * Math.log(x) + b *\r\n            Math.log(1 - x));\r\n    if (x < 0 || x > 1)\r\n        return false;\r\n    if (x < (a + 1) / (a + b + 2)) return bt * betacf(x, a, b) / a;\r\n    return 1 - bt * betacf(1 - x, b, a) / b;\r\n};\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction ibetainv(p, a, b) {\r\n    var EPS = 1e-8;\r\n    var a1 = a - 1;\r\n    var b1 = b - 1;\r\n    var j = 0;\r\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\r\n    if (p <= 0)\r\n        return 0;\r\n    if (p >= 1)\r\n        return 1;\r\n    if (a >= 1 && b >= 1) {\r\n        pp = (p < 0.5) ? p : 1 - p;\r\n        t = Math.sqrt(-2 * Math.log(pp));\r\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n        if (p < 0.5)\r\n            x = -x;\r\n        al = (x * x - 3) / 6;\r\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\r\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\r\n            (al + 5 / 6 - 2 / (3 * h));\r\n        x = a / (a + b * Math.exp(2 * w));\r\n    } else {\r\n        lna = Math.log(a / (a + b));\r\n        lnb = Math.log(b / (a + b));\r\n        t = Math.exp(a * lna) / a;\r\n        u = Math.exp(b * lnb) / b;\r\n        w = t + u;\r\n        if (p < t / w)\r\n            x = Math.pow(a * w * p, 1 / a);\r\n        else\r\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\r\n    }\r\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\r\n    for (; j < 10; j++) {\r\n        if (x === 0 || x === 1)\r\n            return x;\r\n        err = ibeta(x, a, b) - p;\r\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\r\n        u = err / t;\r\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\r\n        if (x <= 0)\r\n            x = 0.5 * (x + t);\r\n        if (x >= 1)\r\n            x = 0.5 * (x + t + 1);\r\n        if (Math.abs(t) < EPS * x && j > 0)\r\n            break;\r\n    }\r\n    return x;\r\n};\r\n\r\n\r\nfunction fdist(x, df1, df2) {\r\n    return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\r\n}\r\n\r\nfunction fdistrt(x, df1, df2) {\r\n    return 1-fdist(x,df1,df2);\r\n}\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} n \r\n * @param {*} m \r\n * @returns \r\n */\r\nfunction randn(n, m) {\r\n    var u, v, x, y, q;\r\n    if (!m) m = n;\r\n    if (n)\r\n        return _jstat_create(n, m, function() {\r\n            return randn(null, null);\r\n        });\r\n    do {\r\n        u = _random_fn();\r\n        v = 1.7156 * (_random_fn() - 0.5);\r\n        x = u - 0.449871;\r\n        y = Math.abs(v) + 0.386595;\r\n        q = x * x + y * (0.19600 * y - 0.25472 * x);\r\n    } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\r\n    return v / u;\r\n};\r\n\r\nfunction _jstat_create(rows, cols, func) {\r\n    var res = new Array(rows);\r\n    var i, j;\r\n  \r\n    if (typeof cols == \"function\") {\r\n      func = cols;\r\n      cols = rows;\r\n    }\r\n  \r\n    for (i = 0; i < rows; i++) {\r\n      res[i] = new Array(cols);\r\n      for (j = 0; j < cols; j++)\r\n        res[i][j] = func(i, j);\r\n    }\r\n  \r\n    return res;\r\n  }\r\n\r\nvar _random_fn = Math.random\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @returns \r\n */\r\nfunction gammaln(x) {\r\n    var j = 0;\r\n    var cof = [\r\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\r\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\r\n    ];\r\n    var ser = 1.000000000190015;\r\n    var xx, y, tmp;\r\n    tmp = (y = xx = x) + 5.5;\r\n    tmp -= (xx + 0.5) * Math.log(tmp);\r\n    for (; j < 6; j++)\r\n        ser += cof[j] / ++y;\r\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\r\n};\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @returns \r\n */\r\nfunction gammapinv(p, a) {\r\n    var j = 0;\r\n    var a1 = a - 1;\r\n    var EPS = 1e-8;\r\n    var gln = gammaln(a);\r\n    var x, err, t, u, pp, lna1, afac;\r\n    if (p >= 1)\r\n      return Math.max(100, a + 100 * Math.sqrt(a));\r\n    if (p <= 0)\r\n      return 0;\r\n    if (a > 1) {\r\n      lna1 = Math.log(a1);\r\n      afac = Math.exp(a1 * (lna1 - 1) - gln);\r\n      pp = (p < 0.5) ? p : 1 - p;\r\n      t = Math.sqrt(-2 * Math.log(pp));\r\n      x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\r\n      if (p < 0.5)\r\n        x = -x;\r\n      x = Math.max(1e-3,\r\n                   a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\r\n    } else {\r\n      t = 1 - a * (0.253 + a * 0.12);\r\n      if (p < t)\r\n        x = Math.pow(p / t, 1 / a);\r\n      else\r\n        x = 1 - Math.log(1 - (p - t) / (1 - t));\r\n    }\r\n  \r\n    for(; j < 12; j++) {\r\n      if (x <= 0)\r\n        return 0;\r\n      err = lowRegGamma(a, x) - p;\r\n      if (a > 1)\r\n        t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\r\n      else\r\n        t = Math.exp(-x + a1 * Math.log(x) - gln);\r\n      u = err / t;\r\n      x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\r\n      if (x <= 0)\r\n        x = 0.5 * (x + t);\r\n      if (Math.abs(t) < EPS * x)\r\n        break;\r\n    }\r\n  \r\n    return x;\r\n  };\r\n\r\n  /**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} p \r\n * @param {*} a \r\n * @returns \r\n */\r\n  function lowRegGamma(a, x) {\r\n    var aln = gammaln(a);\r\n    var ap = a;\r\n    var sum = 1 / a;\r\n    var del = sum;\r\n    var b = x + 1 - a;\r\n    var c = 1 / 1.0e-30;\r\n    var d = 1 / b;\r\n    var h = d;\r\n    var i = 1;\r\n    // calculate maximum number of itterations required for a\r\n    var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\r\n    var an;\r\n  \r\n    if (x < 0 || a <= 0) {\r\n      return NaN;\r\n    } else if (x < a + 1) {\r\n      for (; i <= ITMAX; i++) {\r\n        sum += del *= x / ++ap;\r\n      }\r\n      return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\r\n    }\r\n  \r\n    for (; i <= ITMAX; i++) {\r\n      an = -i * (i - a);\r\n      b += 2;\r\n      d = an * d + b;\r\n      c = b + an / c;\r\n      d = 1 / d;\r\n      h *= d * c;\r\n    }\r\n  \r\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\r\n  };\r\n\r\n/**\r\n * @source https://github.com/jstat/jstat/\r\n * @param {*} x \r\n * @param {*} a \r\n * @param {*} b \r\n * @returns \r\n */\r\nfunction betacf(x, a, b) {\r\n    var fpmin = 1e-30;\r\n    var m = 1;\r\n    var qab = a + b;\r\n    var qap = a + 1;\r\n    var qam = a - 1;\r\n    var c = 1;\r\n    var d = 1 - qab * x / qap;\r\n    var m2, aa, del, h;\r\n    if (Math.abs(d) < fpmin)\r\n        d = fpmin;\r\n    d = 1 / d;\r\n    h = d;\r\n    for (; m <= 100; m++) {\r\n        m2 = 2 * m;\r\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin)\r\n            d = fpmin;\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin)\r\n            c = fpmin;\r\n        d = 1 / d;\r\n        h *= d * c;\r\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\r\n        d = 1 + aa * d;\r\n        if (Math.abs(d) < fpmin)\r\n            d = fpmin;\r\n        c = 1 + aa / c;\r\n        if (Math.abs(c) < fpmin)\r\n            c = fpmin;\r\n        d = 1 / d;\r\n        del = d * c;\r\n        h *= del;\r\n        if (Math.abs(del - 1.0) < 3e-7)\r\n            break;\r\n    }\r\n    return h;\r\n}\r\n\r\nfunction betinc(X,A,B) {\r\n    var A0=0;\r\n\tvar B0=1;\r\n\tvar A1=1;\r\n\tvar B1=1;\r\n\tvar M9=0;\r\n\tvar A2=0;\r\n\tvar C9;\r\n\twhile (Math.abs((A1-A2)/A1)>.00001) {\r\n\t\tA2=A1;\r\n\t\tC9=-(A+M9)*(A+B+M9)*X/(A+2*M9)/(A+2*M9+1);\r\n\t\tA0=A1+C9*A0;\r\n\t\tB0=B1+C9*B0;\r\n\t\tM9=M9+1;\r\n\t\tC9=M9*(B-M9)*X/(A+2*M9-1)/(A+2*M9);\r\n\t\tA1=A0+C9*A1;\r\n\t\tB1=B0+C9*B1;\r\n\t\tA0=A0/B1;\r\n\t\tB0=B0/B1;\r\n\t\tA1=A1/B1;\r\n\t\tB1=1;\r\n\t}\r\n\treturn A1/A\r\n}\r\n\r\n/**\r\n * Returns Student T distribution value.\r\n * @param {number} x Value\r\n * @param {integer} df Degrees of freedom\r\n * @param {boolean} cumulative Is cumulative function:\r\n * @returns T distribution.\r\n */\r\nfunction tdist(x,df,cumulative) {\r\n    if(!cumulative) {\r\n        df = df > 1e100 ? 1e100 : df;\r\n        return (1/(Math.sqrt(df) * betafn(0.5, df/2))) * Math.pow(1 + ((x * x) / df), -((df + 1) / 2));\r\n    } else {\r\n        var df2 = df / 2;\r\n        return ibeta((x + Math.sqrt(x * x + df)) / (2 * Math.sqrt(x * x + df)), df2, df2);\r\n    }\r\n}\r\n\r\nfunction betafn(x,y) {\r\n    if (x <= 0 || y <= 0)\r\n    return undefined;\r\n  // make sure x + y doesn't exceed the upper limit of usable values\r\n    return (x + y > 170) ? Math.exp(betaln(x, y)) : gammafn(x) * gammafn(y) / gammafn(x + y);\r\n}\r\n\r\nfunction gammafn(x) {\r\n    var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\r\n             629.3311553128184, 866.9662027904133, -31451.272968848367,\r\n             -36144.413418691176, 66456.14382024054\r\n    ];\r\n    var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\r\n             -3107.771671572311, 22538.118420980151, 4755.8462775278811,\r\n             -134659.9598649693, -115132.2596755535];\r\n    var fact = false;\r\n    var n = 0;\r\n    var xden = 0;\r\n    var xnum = 0;\r\n    var y = x;\r\n    var i, z, yi, res;\r\n    if (x > 171.6243769536076) {\r\n      return Infinity;\r\n    }\r\n    if (y <= 0) {\r\n      res = y % 1 + 3.6e-16;\r\n      if (res) {\r\n        fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\r\n        y = 1 - y;\r\n      } else {\r\n        return Infinity;\r\n      }\r\n    }\r\n    yi = y;\r\n    if (y < 1) {\r\n      z = y++;\r\n    } else {\r\n      z = (y -= n = (y | 0) - 1) - 1;\r\n    }\r\n    for (i = 0; i < 8; ++i) {\r\n      xnum = (xnum + p[i]) * z;\r\n      xden = xden * z + q[i];\r\n    }\r\n    res = xnum / xden + 1;\r\n    if (yi < y) {\r\n      res /= yi;\r\n    } else if (yi > y) {\r\n      for (i = 0; i < n; ++i) {\r\n        res *= y;\r\n        y++;\r\n      }\r\n    }\r\n    if (fact) {\r\n      res = fact / res;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  function betaln(x, y) {\r\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\r\n  };\r\n\r\nfunction tinv(p,dof) {\r\n    var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\r\n    x = Math.sqrt(dof * (1 - x) / x);\r\n    return (p > 0.5) ? x : -x;\r\n}\r\n\r\nfunction chisqdist(x, df, cumulative = false) {\r\n    if (x < 0) return 0;\r\n    else if(!cumulative) return (x === 0 && df === 2) ? 0.5 : Math.exp((df / 2 - 1) * Math.log(x) - x / 2 - (df / 2) * Math.log(2) - gammaln(df / 2));\r\n    else return lowRegGamma(df / 2, x / 2);\r\n}\r\n\r\nfunction chisqinv(p, df) {\r\n    return 2 * gammapinv(p, 0.5 * df);\r\n}\r\n\r\n/**\r\n * @source https://www.math.ucla.edu/~tom/distributions/SignedRank.html?\r\n * @param {*} n \r\n * @param {*} w \r\n * @returns \r\n */\r\nfunction wilcoxondist(n,w) {\r\n    var p = new Array(1276);\r\n\tvar Prob,t,k,sum,nsav,t1,t2;\t\r\n\tif (w<0) {\r\n\t\tProb=0\r\n\t} else if (w>=n*(n+1)/2) {\r\n\t\tProb=1\r\n\t} else {\r\n\t\tif (n!=nsav) {\r\n\t\t\tp[0]=.5;\r\n\t\t\tp[1]=.5;\r\n\t\t\tfor(t=2;t<=n*(n+1)/2;t++)\r\n\t\t\t    p[t]=0;\r\n\t\t\tfor(k=2;k<=n;k++) {\r\n\t\t\t\tt2=k*(k+1)/2;\r\n\t\t\t\tt1=(k-1)*k/2;\r\n\t\t\t\tfor(t=t2;t>t1;t--)\r\n\t\t\t\t    p[t]=p[t-k]/2;\r\n\t\t\t\tfor(t=t1;t>=k;t--)\r\n\t\t\t\t    p[t]=(p[t]+p[t-k])/2;\r\n\t\t\t\tfor(t=k-1;t>=0;t--)\r\n\t\t\t\t    p[t]=p[t]/2;\r\n\t\t\t}\r\n\t\t\tnsav=n;\r\n\t\t}\r\n\t\tsum=0;\r\n\t\tfor(k=0;k<=w;k++)\r\n\t\t    sum=sum+p[k];\r\n\t\tProb=sum\r\n\t}\r\n\treturn Prob\r\n}\r\n\r\nfunction binominv(trials, probability, alpha, successes) {\r\n    if (successes === undefined) {\r\n      successes = 0;\r\n    }\r\n    let p = alpha;\r\n    let result = successes;\r\n    while (p > binomdist(result, trials, probability, true)) {\r\n      result++;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction binomdist(successes, trials, probability, cumulative = false) {\r\n    if (cumulative) {\r\n    let result = 0;\r\n    for (let i = 0; i <= successes; i++) {\r\n        result += binomialCoefficient(trials, i) * Math.pow(probability, i) * Math.pow(1 - probability, trials - i);\r\n    }\r\n    return result;\r\n    } else {\r\n    return binomialCoefficient(trials, successes) * Math.pow(probability, successes) * Math.pow(1 - probability, trials - successes);\r\n    }\r\n}\r\n\r\nfunction binomialCoefficient(n, k) {\r\n    let result = 1;\r\n    for (let i = 1; i <= k; i++) {\r\n    result = result * (n - i + 1) / i;\r\n    }\r\n    return result;\r\n}\r\n  \r\n","const dist = require(\"./distribution\");\r\nconst $ = require(\"./locale\").call;\r\n\r\nArray.prototype.toCSV = function(delimiter) {\r\n    var t = \"\";\r\n    this.forEach((e,i,a) => t += (!isNaN(Number(e)) ? delimiter ? String(e).replace(/\\./g,delimiter) : e : e) + \"\\n\");\r\n    return t;\r\n}\r\n\r\nArray.prototype.hasOnlyVectorChildren = function() {\r\n    return this.filter(e => !e?.isVector).length == 0;\r\n}\r\n\r\nArray.prototype.sum = function() {\r\n    if(this.length === 0) return 0;\r\n    return this.reduce((a,b) => a+b);\r\n}\r\n\r\nArray.prototype.count = function() {\r\n    return this.length;\r\n}\r\n\r\nArray.prototype.avg = function() {\r\n    return this.sum()/this.count()\r\n}\r\n\r\nArray.prototype.mci = function(p) {\r\n    return Math.mci(this.avg(),this.stdev(true),this.length, p);\r\n}\r\n\r\nArray.prototype.pci = function(value, alfa) {\r\n    var proportion = this.filter(_ => _ === value).length / this.length;\r\n    return Math.pci(proportion, this.length, alfa);\r\n}\r\n\r\nArray.prototype.distinct = function() {\r\n    return this.filter((obj, index, self) => {\r\n        return self.findIndex(t => JSON.stringify(t) === JSON.stringify(obj)) === index;\r\n      });\r\n    //return [...new Set(this)];\r\n}\r\n\r\nArray.prototype.asc = function(self) {\r\n    if(self) return this.sort((a,b) => a < b ? -1 : 1);\r\n    else return new Array(...this).sort((a,b) => a < b ? -1 : 1);\r\n}\r\n\r\nArray.prototype.desc = function(self) {\r\n    if(self) {\r\n        return this.asc().reverse();\r\n    } else return new Array(...this).asc().reverse();\r\n}\r\n\r\nArray.prototype.min = function(){\r\n    if(this.length == 0) return null;\r\n    else if(this.length == 1) return this[0];\r\n    else return new Array(...this).sort((a,b) => a < b ? -1 : 1)[0];\r\n}\r\n\r\nArray.prototype.max = function(){\r\n    if(this.length == 0) return null;\r\n    else if(this.length == 1) return this[0];\r\n    else return new Array(...this).sort((a,b) => a > b ? -1 : 1)[0];\r\n        \r\n}\r\n\r\nArray.prototype.range = function(){\r\n    return this.max() - this.min();\r\n}\r\n\r\nArray.prototype.stdev = function(sample){\r\n    const m = this.avg();\r\n    const n = this.length - (sample ? 1 : 0);\r\n    return Math.pow(this.map(x => Math.pow(x - m, 2)).reduce((a, b) => a + b) / n, 0.5);\r\n}\r\n\r\nArray.prototype.variance = function(sample) {\r\n    var m = this.avg();\r\n    return this.map(_ => Math.pow(_ - m,2)).sum()/(this.length - (sample ? 1 : 0));\r\n}\r\n\r\nArray.prototype.histogram = function(maxIntervals = null, fixedInterval = null){\r\n    var l = this.count();\r\n    var mn = this.min();\r\n    var mx = this.max();\r\n    var interval = maxIntervals ? (mx-mn)/maxIntervals : fixedInterval > 0 ? fixedInterval : (mx-mn)/Math.pow(l,.5);\r\n    var h = [];\r\n    var _i = 0;\r\n    for(var i = mn; i <= mx; i += interval)\r\n    {\r\n        if(i + interval > mx && maxIntervals) break;\r\n        var n = (this.filter(f => (_i === 0 ? f >=i : f > i) && (f <= (i + interval)))).length;\r\n        var nc = _i > 0 ? n + h[_i-1].nc : n;\r\n        var p = n/l;\r\n        var pc = _i > 0 ? p + h[_i-1].pc : p;\r\n        h.push({from: i, to: i + interval, n:n, nc: nc, p:p, pc:pc})\r\n        _i++;\r\n    }\r\n    return h;\r\n}\r\n\r\nArray.prototype.varc = function(sample){\r\n    return this.stdev(sample) / this.avg();\r\n}\r\n\r\nArray.prototype.frequency = function(order){\r\n    var f = [];\r\n    for(let k of this.distinct()) {\r\n        f.push({v: k, n: this.filter(_v => _v === k).length});\r\n    };\r\n    if(order == 3) return f.sort((a, b) => a.v - b.v);\r\n    else if(order == 4) return f.sort((a, b) => a.v - b.v).reverse();\r\n    else if(order == 2) return f.sort((a, b) => a.n - b.n);\r\n    else if(order == 1) return f.sort((a, b) => a.n - b.n).reverse();\r\n    else return f;\r\n}\r\n\r\nArray.prototype.mode = function() {\r\n    return this.frequency(1)[0].value;\r\n}\r\n\r\nArray.prototype.percentile = function(q){\r\n    let _ = this.asc();\r\n    var pos = ((_.length) - 1) * q;\r\n    var base = Math.floor(pos);\r\n    var rest = pos - base;\r\n    return (_[base+1]!==undefined) ? _[base] + rest * (_[base+1] - _[base]) : _[base];\r\n}\r\n\r\nArray.prototype.median = function() {\r\n    return this.percentile(0.5);\r\n}\r\n\r\nArray.prototype.geomean = function(){\r\n    return Math.pow(this.product(), 1/ this.length)\r\n}\r\n\r\nArray.prototype.product = function(){\r\n    return this.reduce((a, b) => a * b);\r\n}\r\n\r\nArray.prototype.harmean = function(){\r\n    return this.length / Array.prototype.sum.call(this.map(_ => 1/_));\r\n}\r\n\r\nArray.prototype.SEM = function(){\r\n    return this.stdev(true)/Math.sqrt(this.length);\r\n}\r\n\r\nArray.prototype.skewness = function(sample) {\r\n    var n = this.length;\r\n    var m = this.avg();\r\n    var s = this.stdev(sample);\r\n    if(sample) return (n/((n-1)*(n-2)))* this.map(x => Math.pow((x-m)/s,3)).sum();\r\n    else return this.map(x => Math.pow((x-m)/s,3)).sum() / n;\r\n}\r\n\r\nArray.prototype.kurtosis = function(){\r\n    const n = this.count();\r\n    const xm = this.avg();\r\n    const s = this.stdev(true);\r\n    const a = (n*(n+1))/((n-1)*(n-2)*(n-3));\r\n    const b = this.map(x => Math.pow((x-xm),4)).sum() / Math.pow(s,4);\r\n    const c = (3 * Math.pow((n-1),2)) / ((n-2)*(n-3));\r\n    var k = a * b - c;\r\n    return k;\r\n}\r\n\r\nArray.prototype.ttest = function(mean){\r\n    var n = this.length;\r\n    var m = this.avg();\r\n    var t = (m - mean)/this.SEM();\r\n    var p = dist.tdist(t, n-1);\r\n    return {\r\n        t: t,\r\n        p: p,\r\n        n: n,\r\n        //df: n-1,\r\n        //sample_mean: m,\r\n        //population_mean: mean\r\n    }\r\n}\r\n\r\nArray.prototype.getRankIndexes = function(order = 0){\r\n    const sorted = [...new Set(this)].sort((a, b) => order == 1 ? a-b : b-a);\r\n    const rank = new Map(sorted.map((x, i) => [x, i + 1]));\r\n    return this.map((x) => rank.get(x));\r\n}\r\n\r\nArray.prototype.rankAvg = function(value, dir = 1, sub = -1) {\r\n    dir == 0 ? dir = -1 : dir == 1 ? dir = 1 : dir = 1;\r\n    var array = new Array(...this).sort((a,b) => a < b ? -dir : a == b ? 0 : dir);\r\n    var fi = Number(array.indexOf(value)) + sub;\r\n    var li = Number(array.lastIndexOf(value)) + sub;\r\n    return (fi !== li ? (li+fi)/2 : fi);\r\n}\r\n\r\nArray.prototype.toAvgRank = function(dir = 1, sub = -1) {\r\n    return this.map((e,i,a) => a.rankAvg(e, dir, sub));\r\n} \r\n\r\nArray.prototype.toRankAvg = Array.prototype.toAvgRank;\r\n\r\nArray.prototype.intersection = function(arr) {\r\n    if(arr.length == 0) return this;\r\n    return this.filter(v => arr.indexOf(v) > -1)\r\n}\r\n\r\nArray.prototype.covariance = function(arr, sample = false) {\r\n    var xm = this.avg();\r\n    var ym = arr.avg();\r\n    return this.map((x,i) => (x-xm)*(arr[i]*ym)).sum(arr.length - (sample ? 1 : 0));\r\n}\r\n\r\nArray.prototype.shapirowilk = function() {\r\n\r\n\tfunction poly(cc, nord, x) {\r\n\t\tvar p;\r\n\t\tvar ret_val;\r\n\t\tret_val = cc[0];\r\n\t\tif (nord > 1) {\r\n\t\t\tp = x * cc[nord - 1];\r\n\t\t\tfor (j = nord - 2; j > 0; j--)\r\n\t\t\t\tp = (p + cc[j]) * x;\r\n\t\t\tret_val += p;\r\n\t\t}\r\n\t\treturn ret_val;\r\n\t}\r\n\tvar x = this.sort(function(a, b) {\r\n\t\treturn a - b;\r\n\t});\r\n\tvar n = x.length;\r\n\tif (n < 3) throw new Error($(\"AgIP\"));\r\n\tvar nn2 = Math.floor(n / 2);\r\n\tvar a = new Array(Math.floor(nn2) + 1);\r\n\tvar small = 1e-19;\r\n\tvar g = [-2.273, 0.459];\r\n\tvar c1 = [0, 0.221157, -0.147981, -2.07119, 4.434685, -2.706056];\r\n\tvar c2 = [0, 0.042981, -0.293762, -1.752461, 5.682633, -3.582633];\r\n\tvar c3 = [0.544, -0.39978, 0.025054, -6.714e-4];\r\n\tvar c4 = [1.3822, -0.77857, 0.062767, -0.0020322];\r\n\tvar c5 = [-1.5861, -0.31082, -0.083751, 0.0038915];\r\n\tvar c6 = [-0.4803, -0.082676, 0.0030302];\r\n\tvar i, j, i1;\r\n\tvar ssassx, summ2, ssumm2, gamma, range;\r\n\tvar a1, a2, an, m, s, sa, xi, sx, xx, y, w1;\r\n\tvar fac, asa, an25, ssa, sax, rsn, ssx, xsx;\r\n\tvar pw = 1;\r\n\tan = n;\r\n\tif (n == 3)\r\n\t\ta[1] = 0.7071067811865476;\r\n\telse {\r\n\t\tan25 = an + 0.25;\r\n\t\tsumm2 = 0.0;\r\n\t\tfor (i = 1; i <= nn2; i++) {\r\n\t\t\ta[i] = dist.normsinv((i - 0.375) / an25, 1);\r\n\t\t\tvar r__1 = a[i];\r\n\t\t\tsumm2 += r__1 * r__1;\r\n\t\t}\r\n\t\tsumm2 *= 2;\r\n\t\tssumm2 = Math.sqrt(summ2);\r\n\t\trsn = 1 / Math.sqrt(an);\r\n\t\ta1 = poly(c1, 6, rsn) - a[1] / ssumm2;\r\n\t\tif (n > 5) {\r\n\t\t\ti1 = 3;\r\n\t\t\ta2 = -a[2] / ssumm2 + poly(c2, 6, rsn);\r\n\t\t\tfac = Math.sqrt((summ2 - 2 * (a[1] * a[1]) - 2 * (a[2] * a[2])) / (1 - 2 * (a1 * a1) - 2 * (a2 * a2)));\r\n\t\t\ta[2] = a2;\r\n\t\t} else {\r\n\t\t\ti1 = 2;\r\n\t\t\tfac = Math.sqrt((summ2 - 2 * (a[1] * a[1])) / (1 - 2 * (a1 * a1)));\r\n\t\t}\r\n\t\ta[1] = a1;\r\n\t\tfor (i = i1; i <= nn2; i++)\r\n\t\t\ta[i] /= -fac;\r\n\t}\r\n\trange = x[n - 1] - x[0];\r\n\tif (range < small) {\r\n\t\tthrow new Error($(\"zxmM\", {\r\n\t\t\trange: range\r\n\t\t}));\r\n\t}\r\n\txx = x[0] / range;\r\n\tsx = xx;\r\n\tsa = -a[1];\r\n\tfor (i = 1, j = n - 1; i < n; j--) {\r\n\t\txi = x[i] / range;\r\n\t\tif (xx - xi > small) {\r\n\t\t\tthrow new Error($(\"TSCM\", {\r\n\t\t\t\trange: xx - xi\r\n\t\t\t}));\r\n\t\t}\r\n\t\tsx += xi;\r\n\t\ti++;\r\n\t\tif (i != j)\r\n\t\t\tsa += Math.sign(i - j) * a[Math.min(i, j)];\r\n\t\txx = xi;\r\n\t}\r\n\tif (n > 5000) {\r\n\t\tthrow new Error($(\"yhzq\"));\r\n\t}\r\n\tsa /= n;\r\n\tsx /= n;\r\n\tssa = ssx = sax = 0.;\r\n\tfor (i = 0, j = n - 1; i < n; i++, j--) {\r\n\t\tif (i != j)\r\n\t\t\tasa = Math.sign(i - j) * a[1 + Math.min(i, j)] - sa;\r\n\t\telse\r\n\t\t\tasa = -sa;\r\n\t\txsx = x[i] / range - sx;\r\n\t\tssa += asa * asa;\r\n\t\tssx += xsx * xsx;\r\n\t\tsax += asa * xsx;\r\n\t}\r\n\tssassx = Math.sqrt(ssa * ssx);\r\n\tw1 = (ssassx - sax) * (ssassx + sax) / (ssa * ssx);\r\n\tvar w = 1 - w1;\r\n\tif (n == 3) {\r\n\t\tvar pi6 = 6 / Math.PI;\r\n\t\tvar stqr = Math.asin(Math.sqrt(3 / 4));\r\n\t\tpw = pi6 * (Math.asin(Math.sqrt(w)) - stqr);\r\n\t\tif (pw < 0.)\r\n\t\t\tpw = 0;\r\n\t\treturn w;\r\n\t}\r\n\ty = Math.log(w1);\r\n\txx = Math.log(an);\r\n\tif (n <= 11) {\r\n\t\tgamma = poly(g, 2, an);\r\n\t\tif (y >= gamma) {\r\n\t\t\tpw = 1e-99; /* an \"obvious\" value, was 'small' which was 1e-19f */\r\n\t\t\treturn w;\r\n\t\t}\r\n\t\ty = -Math.log(gamma - y);\r\n\t\tm = poly(c3, 4, an);\r\n\t\ts = Math.exp(poly(c4, 4, an));\r\n        debugger;\r\n\t} else {\r\n\t\tm = poly(c5, 4, xx);\r\n\t\ts = Math.exp(poly(c6, 3, xx));\r\n\t}\r\n\tvar z = (Math.log(1-w)-m)/s;\r\n    var p = 1-dist.normsdist(z);\r\n    return {\r\n        W: w, df: n, p: p\r\n    }   \r\n}\r\n\r\nArray.prototype.kolmogorovSmirnovTest = function() {\r\n    var sample = this.sort((a, b) => a - b);\r\n    const sampleCdf = sample.map((x, i) => (i + 1) / sample.length);\r\n    let maxDistance = 0;\r\n    var mean = sample.avg();\r\n    var s = sample.stdev(true);\r\n    for (let i = 0; i < sample.length; i++) {\r\n        maxDistance = Math.max(maxDistance, Math.abs(sampleCdf[i] - dist.normsdist((sample[i] - mean)/s)));\r\n    }\r\n    return {\r\n        T: maxDistance,\r\n        df: sample.length\r\n    };\r\n  }\r\n\r\n/**\r\n * A static method that convert input numeric arrays to their ranks.\r\n * @param  {...Array} arrs Arrays or vectors.\r\n * @returns An array of array of ranks.\r\n */\r\n//Array.toRanks=function(...t){let e=t.length,r=[];for(let n=0;n<e;n++){let a=t[n];for(let t=0;t<a.length;t++)r.push([a[t],0,n])}r.sort(sortByCol);for(let t=0;t<r.length;t++){let e=r[t];e[1]=t+1}for(let t=0;t<r.length-1;t++){let e=r[t],n=e[0],a=e[1],o=1;for(let t=t+1;t<r.length;t++){let e=r[t],s=e[0];n==s&&(a+=e[1],o++)}if(o>1){let t=a/o;for(let e=t;e<t+o;e++){let n=r[e];n[1]=t}}}return r}\r\n\r\nfunction sortByCol(a, b) {\r\n    a = a[0]\r\n    b = b[0]\r\n    return (a === b) ? 0 : (a < b) ? -1 : 1\r\n}\r\n\r\nArray.toRanks = function(...arrs) {\r\n    let k = arrs.length;    \r\n    let ranks = [];\r\n    for (let s = 0; s < k; s++) {\r\n        let v = arrs[s];\r\n        for (let i = 0; i < v.length; i++) {\r\n            ranks.push( [v[i], 0, s] );\r\n        }\r\n    }\r\n    ranks.sort(sortByCol);\r\n    for (let i = 0; i < ranks.length; i++) {\r\n        let re = ranks[i];\r\n        re[1] = i+1;\r\n    }\r\n    for (let s = 0; s < ranks.length - 1; s++) {\r\n        let re1 = ranks[s];\r\n        let val1 = re1[0];\r\n        let r_sum = re1[1];\r\n        let cnt = 1;\r\n        for (let e = s + 1; e < ranks.length; e++) {\r\n            let re2 = ranks[e];\r\n            let val2 = re2[0];\r\n            if (val1 == val2) {\r\n                r_sum += re2[1];\r\n                cnt += 1;\r\n            }\r\n        }\r\n        if (cnt > 1) {\r\n            let r_mean = r_sum / cnt;\r\n            for (let i = s; i < s + cnt; i++) {\r\n                let re = ranks[i];\r\n                re[1] = r_mean;\r\n            }\r\n        }\r\n    }    \r\n    return ranks;\r\n}\r\n\r\n\r\nString.prototype.fill = function(what, repetition) {\r\n    var x = \"\";\r\n    for(var i = 0; i < repetition; i++) {\r\n        x =+ what;\r\n    }\r\n    return x;\r\n}\r\n\r\nMath.combinations = function(n, k) {\r\n    if (k > n) {\r\n      return 0;\r\n    }\r\n    if (k === 0 || k === n) {\r\n      return 1;\r\n    }\r\n    let numerator = 1;\r\n    for (let i = 0; i < k; i++) {\r\n      numerator *= (n - i);\r\n    }\r\n    let denominator = 1;\r\n    for (let i = 1; i <= k; i++) {\r\n      denominator *= i;\r\n    }\r\n    return numerator / denominator;\r\n  }\r\n/*\r\nMath.combinations = function(n, r, repeats) {\r\n    if(n< r) return 0;\r\n    if(n=== r) return 1;\r\n    if(repeats){\r\n        return Math.factorial(n+r-1)/((Math.factorial(r)*Math.factorial(n-1)));\r\n    }\r\n    console.log(Math.factorial(n));\r\n    console.log(((Math.factorial(r)*Math.factorial(n-r))))\r\n    var f = Math.factorial(n)/((Math.factorial(r)*Math.factorial(n-r)));\r\n    debugger;\r\n    return f;\r\n}\r\n*/\r\n\r\nMath.factorial = function(n) {\r\n    var i= n;\r\n    while(--i) n*= i;\r\n    return n;\r\n}\r\n\r\nMath.getRandomIndexes = function(total_of_elements, samplesize) {\r\n    var indexes = [];\r\n    if(total_of_elements < samplesize) samplesize = total_of_elements;\r\n    while (indexes.length < samplesize) {\r\n        var v = Math.round(Math.random()*total_of_elements);\r\n        if(indexes.indexOf(v) < 0) indexes.push(v);\r\n    };\r\n    return indexes;\r\n}\r\n\r\nMath.pci = function(p,n,alfa) {\r\n    alfa = 1-(1-alfa)/2;\r\n    var z = dist.normsinv(alfa, 1 );\r\n    var delta = z * Math.sqrt((p * (1 - p)) / n);\r\n    return {p: p, sig: (1-alfa)*2,delta: delta, lb: p-delta < 0 ? 0 : p-delta, ub: p+delta > 1 ? 1 : p+delta};\r\n}\r\n\r\nMath.mci = function(m,stdev,n,alfa) {\r\n    alfa = 1-(1-alfa)/2;\r\n    var q = n > 30 ? dist.normsinv(alfa, n - 1 ) : dist.tinv(alfa, n -1);\r\n    var delta = q * stdev/Math.sqrt(n);\r\n    return {m: m, sig: (1-alfa)*2,delta: delta, lb: m-delta, ub: m+delta};\r\n}\r\n\r\nMath.rndNumber = function(min,max,decimal = 2) {\r\n    let multiplier = Math.pow(10, decimal || 0);\r\n    return Math.floor(Math.random() * (max - min) * multiplier + min * multiplier) / multiplier;\r\n}\r\n\r\nMath.rndSelect = function(array, total = 1, allowDuplicates = false) {\r\n    if(total >= array.length) return array;\r\n    var _sample = [];\r\n    while (_sample.length < total) {\r\n        var index = Math.floor(Math.random() * array.length);\r\n        if(!allowDuplicates) {\r\n            if(_sample.indexOf(array[index] < 0)) _sample.push(array[index]);   \r\n        } else _sample.push(array[index]);\r\n    }\r\n    return _sample;\r\n}\r\n\r\nMath.rndSelectOne = function(array) {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nMath.sign = function(x) {\r\n    if (x == 0)\r\n        return 0;\r\n    return x > 0 ? 1 : -1;\r\n}\r\n\r\nFunction.prototype.stringify = function(indent = \"\\t\") {\r\n    var raw = this.toString().match(/function[^{]+\\{([\\s\\S]*)\\}$/)[1];\r\n    var formatted = \"\";\r\n    raw.split(/\\n/g).forEach(l => formatted += l.trim() + \"\\n\");\r\n    return formatted.trim();\r\n}\r\n\r\nmodule.exports = {Array, Math, String, Function};","\"use strict\";\r\n\r\nconst __default = \"cs-CZ\";\r\nvar factory = {\r\n    //\"cs\": require(\"../locales/cs\"),\r\n    \"cs-CZ\": require(\"../locales/cs-CZ\"),\r\n    \"en-GB\": require(\"../locales/en-GB\")\r\n};\r\n\r\nvar _default = Intl.DateTimeFormat().resolvedOptions().locale;\r\nif(!factory[_default]) _default = __default;\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Sets the locale data for either existing or non existing locale set and returns the module.\r\n     * @param {string} language Intl language code\r\n     * @param {object} data JSON object with key (random code) an value (text) elements\r\n     * @param {boolean} overwriteExisting If true, keys present in the existing set will be overwriten with new values. Default true.\r\n     * \r\n     */\r\n    setData: function(language, data, overwriteExisting=true) {\r\n        if(typeof data != \"object\") throw new Error(\"Data argument must be an object\");\r\n        if(!factory[language]) factory[language] = {};\r\n        Object.keys(data).forEach(function(key){\r\n            if(!overwriteExisting && !factory[language][key]) factory[language][key] = data[key];\r\n            else factory[language][key] = data[key];\r\n        });\r\n        return module.exports;\r\n    },\r\n    getDefault: function() {return _default},\r\n    /**\r\n     * Set the default language. If empty, the default value is reset to the local language default.\r\n     * @param {string} value Language i18n or another code.\r\n     * @returns {module.exports} Returns the module.\r\n     */\r\n    setDefault: function(value) {\r\n        if(!value) _default = Intl.DateTimeFormat().resolvedOptions().locale;\r\n        else if(!factory[value]) \r\n        {\r\n            console.warn(`Language ${value} not registered, switching to default (${__default}).`);\r\n            _default = __default;\r\n        }\r\n        else _default = value;\r\n        return module.exports;\r\n    },\r\n    config: function (setup = \"cs\") {        \r\n        if(typeof setup == \"string\") {\r\n            _ = factory[setup];\r\n            if(!_) throw new Error(\"Locale \" + setup + \" not found.\");\r\n            else _default = setup;\r\n            \r\n        } else if(typeof setup == \"object\") _ = setup;\r\n        else throw new Error(\"Custom locale must be an object.\")\r\n        return module.exports;\r\n    },\r\n    call: function(code, data = {}) {\r\n        let _ = factory[_default];\r\n        if(!code) return \"\";\r\n        else if(typeof code == \"object\") {\r\n            var _text = _default ? code[_default] : Object.entries(code)[0][1];\r\n            return _replace(_text, data)\r\n        }\r\n        var _text = _[code];        \r\n        if(!_text) return _replace(code,{value: code});\r\n        else {\r\n            _text = _replace(_text, data)\r\n            return _text;\r\n        }\r\n    },\r\n    /**\r\n     * \r\n     * @returns Returns a list of available languages, both built-in and custom.\r\n     */\r\n    listLanguages: function(){\r\n        return Object.keys(factory);\r\n    }\r\n}\r\n\r\nconst _replace = function(text, data) {\r\n    var keys = (text.match(/\\$\\{(.*?)\\}/g) || []).map(i => i.match(/\\$\\{(.*)\\}/)[1]);\r\n    keys.forEach(function(k){\r\n        text = text.replace(\"\\$\\{\" + k + \"\\}\", () => data[k])\r\n    });\r\n    return text;\r\n}","\"use strict\";\r\n\r\nvar {NumericVector, StringVector, BooleanVector, Vector} = require(\"./vector\");\r\nvar $ = require(\"./locale\").call;\r\nlet {Argument} = (require(\"./argument\"));\r\nlet {Output} = require(\"./output\");\r\nconst {Array, Math, String, Function} = require(\"./extensions\");\r\nconst dist = require(\"./distribution\");\r\nconst { normdist } = require(\"./distribution\");\r\nvar matrixName = null\r\n\r\n// #region MATRIX\r\n\r\nArray.prototype.matrify = function() {\r\n    var M = new Matrix();\r\n    for(var i = 0; i < this.length; i++) {\r\n        M.push(!this[i]?.isVector ? this[i].vectorify() : this[i])\r\n    }\r\n    return M;\r\n}\r\n\r\nclass Matrix extends Array {\r\n    /**\r\n     * Initializes a new instance of the Matrix class.\r\n     */\r\n    constructor(){\r\n        super();\r\n        this.push(...arguments);\r\n    }\r\n    /**\r\n     * Gets or sets the name of this matrix. If the argument 'value' is empty, it returns the name of this matrix (if set before). Otherwise the name of the matrix is set and the matrix itself is returned.\r\n     * So far, there can be only one name for all possible matrices as WeakMap seems to not support array keys (matrix is an array in fact).\r\n     * @param {string | empty} value Optional: name of the matrix.\r\n     * @returns Either name or the matrix itself.\r\n     */\r\n    name(value){\r\n        if(value) {\r\n            matrixName = value;\r\n            return this;\r\n        } else return matrixName;\r\n    }\r\n    push() {\r\n        for(let a of [...arguments].filter(v => v)) {\r\n            if(a?.isVector) {\r\n                super.push(a);\r\n            }\r\n            else if(Array.isArray(a)) super.push(a.vectorify());\r\n            else {\r\n                throw new Error(\"Argument is not a vector or array.\");\r\n                \r\n            }\r\n        };\r\n    }\r\n    smap(fn) {\r\n        var _m = [];\r\n        for(let v of this) {\r\n            _m.push(fn(v));\r\n        };\r\n        return _m;\r\n    }\r\n    /**\r\n     * Similar to a pivot table in Excel without aggregation. Converts a matrix of two vectors to a new matrix where the new factors are named after the unique values from the original factor. Nov vectors are filled with values that match the row filter in the original matrix.\r\n     * @param {Vector identifier} target \r\n     * @param {Vector identifier} factor \r\n     * @param {Array} selectedKeys Optional. If you want to pivot only selected values from the factor vector, enlist them in the selectedKeys argument.\r\n     * @returns {Matrix}\r\n     */\r\n    pivot(target, factor, selectedKeys = []) {\r\n        target = this.item(target);\r\n        factor = this.item(factor);\r\n        var selection = this.select(target, factor);\r\n        var pivot = new Matrix();        \r\n        for(let key of factor.distinct().intersection(selectedKeys)) {\r\n            pivot.push(new target.constructor(...selection.filter(factor, (v) => v === key)[0]).name(key));\r\n        }\r\n        return pivot;\r\n    }\r\n    clone(flush = false) {\r\n        return new Matrix(...new Array(...this).map(v => v.clone()));\r\n    }\r\n    /**\r\n     * Returns a vector according to the specified identifier. The identifier argument is extremely flexible, it can be a number (the order of the vector), text (the name of the vector), an instance of the vector, or a filter function with which the vector is searched in the matrix.\r\n     * @param {number | string | Vektor | function} identifier \r\n     * @returns {Vektor} Returns a Vector instance or (if not found) null.\r\n     */\r\n    item(identifier) {\r\n        if(!identifier && identifier !== 0) return null;\r\n        else if(!isNaN(identifier)) return this[Number(identifier)];\r\n        else if(typeof identifier == \"string\") return this.find(v => v.name() == identifier);\r\n        else if(identifier?.isVector) {\r\n            var byObject = this.find(v=> v == identifier);\r\n            if(byObject) return byObject;\r\n            else {\r\n                if(identifier.name()) return this.find(v => v.name() == identifier.name()) || null;\r\n                else return null;\r\n            }\r\n        }\r\n        else if(identifier.constructor?.name == \"Function\") return this.find(identifier);\r\n        else return null;\r\n    }\r\n    select(...identifiers) {\r\n        var clone = new Matrix();\r\n        for(let i of identifiers) {\r\n            var v = this.item(i);\r\n            if(v) clone.push(v);\r\n        }\r\n        return clone;\r\n    }\r\n    slice(from = 0, to = Infinity) {\r\n        var M = new Matrix();\r\n        for(let a = from < 0 ? 0 : from; a < (to >= this.length ? this.length : to); a++)\r\n        {\r\n            M.push(this[a]);\r\n\r\n        };\r\n        return M;\r\n    }\r\n    /** \r\n     * Attention! This method significantly extends the base method of the Array parent class. The method shows different behavior with respect to the number and type of arguments. If only one argument is given, the method behaves according to the following types:\r\n\r\n       1) function: standard filtering as in Array\r\n       2) Array: is taken as an array of row indices to be returned\r\n\r\n    In the event that multiple filters of different vectors are to be considered at the same time, the arguments are given in a row as 1) vector identifier and 2) vector filter function. In this way, it is possible to sort the required number of identifier/function pairs one after the other, e.g. <Matrix>.filter(2, (v,i,arr) => v > 30, \"B\", (v,i,arr) = > in == 5).\r\n     * @return {this | null} A filtered matrix.\r\n    */\r\n    filter() {\r\n        if([...arguments].length === 0) return this;\r\n        else if([...arguments].length === 1) {\r\n            var arg = [...arguments][0];\r\n            if(typeof arg == \"function\") return new Matrix(...new Array(...this).filter(arg));\r\n            /* filters rows by indexes */\r\n            else if(Array.isArray(arg)) {\r\n                var target = this.clone().flush();\r\n                for(var i = 0; i < arg.length; i++) {\r\n                    target.appendRow(...this.row(arg[i]))\r\n                }\r\n                return target;\r\n            }\r\n            else return null;\r\n        }\r\n        else {\r\n            var groups = [];\r\n            if([...arguments].length % 2 !== 0) throw new Error(\"Odd number of arguments!!\")\r\n            for(var i = 0; i < [...arguments].length; i +=2) {\r\n                groups.push({\r\n                    v: this.item([...arguments][i]),\r\n                    f: [...arguments][i + 1]\r\n                });\r\n            };\r\n            var target = this.clone().flush();\r\n            for(var r = 0; r < this.maxRows(); r++) {   \r\n                if(groups.map(g => g.f(g.v[r], r, g.v)).filter(g => g).length === groups.length) {\r\n                    target.appendRow(...this.row(r))\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    filterByIndex(...indexes) {\r\n        var _ = new Matrix();\r\n        for(let v of this) {\r\n            _.push(v.filterByIndex(...indexes));\r\n        }\r\n        return _;\r\n    }\r\n    /** Removes rows with any null value across all values in the row. */\r\n    removeEmpty() {\r\n        /*\r\n        var notnulls = [];\r\n        for(var r = 0 ; r < this.maxRows(); r++) {\r\n            if(!this.row(r).find(v => v === null)) notnulls.push(r);\r\n        }\r\n        return this.filterByIndex(...notnulls);\r\n        */\r\n        /* old variant*/\r\n        var fs = new Array(...this).map((v,i) => [i, (v) => v !== null]).flat(Infinity);\r\n        return this.filter(...fs);\r\n    }\r\n    /**\r\n     * Returns an array of values across the indexed row.\r\n     * @param {number} index Row index.\r\n     * @returns {Array} An array of the row values.\r\n     */\r\n    row(index) {\r\n        if(index > this.maxRows() - 1) return null;\r\n        return new Array(...this).map(v => v[index] || null);\r\n    }\r\n    appendRow(...values) {\r\n        for(var i = 0; i < values.length; i++) {\r\n            (this[i] || []).push(values[i])\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Removes the vector values but leave the matrix structure (in terms of vector types etc.) intact.\r\n     * @returns {this}\r\n     */\r\n    flush() {\r\n        for(var v of this) {\r\n            v.flush();\r\n        };\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the length of the vector with the largest number of elements.\r\n     * @returns {number}\r\n     */\r\n    maxRows() {\r\n        return Math.max(...new Array(...this).map(v => v.length));\r\n    }\r\n    minRows() {\r\n        return Math.min(...new Array(...this).map(v => v.length));\r\n    }\r\n    /**\r\n     * Randomly filters N of cases from the variable values.\r\n     * @param {number} size If the argument is less than 1, it is considered the percentage of cases to be selected from among the values. If greater than or equal to 1, the argument is treated as the absolute number of cases to be selected.\r\n     */\r\n    sample(size) {\r\n        var indexes = (size < 1 ? Math.getRandomIndexes(this.maxRows(), Math.round(size * this.maxRows())) : Math.getRandomIndexes(this.maxRows(), size > this.maxRows() ? this.maxRows() : Math.round(size))).sort();\r\n        return this.filter(indexes);\r\n    }\r\n    analyze(method) {\r\n        return new MatrixAnalysis(method, this);\r\n    }\r\n    serialize() {\r\n        var _m = {\r\n            name: this.name(),\r\n            vectors: []\r\n        };\r\n        for(var v of this) {\r\n            _m.vectors.push(v.serialize());\r\n        }\r\n        return _m;\r\n    }\r\n    static deserialize(data) {\r\n        if(typeof data != \"object\") {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch(e) {\r\n                console.error(\"Failed to parse the matrix data.\")\r\n                return null;\r\n            }\r\n        }\r\n        matrixName = data.name;\r\n        var M = new Matrix();\r\n        data.vectors.forEach(v => M.push(Vector.deserialize(v)));\r\n        return M;\r\n    }\r\n    static listMethods() {\r\n        return MatrixMethodsModels.map(m => m.name);\r\n    }\r\n}\r\n\r\nMatrix.prototype.isMatrix = true;\r\n\r\n// #endregion\r\n\r\nconst preprocessors = {\r\n    /**\r\n     * Removes all rows where at least one empty value is present.\r\n     */\r\n    removeEmptyAcrossRows: {\r\n        title: \"Cumi\",\r\n        fn: function(_){\r\n            var M = new Matrix(..._.args.vectors);\r\n            _.sample.raw = M.maxRows();\r\n            M = M.removeEmpty();\r\n            _.args.vectors = M;\r\n            _.sample.net = M.maxRows();\r\n        }\r\n    },\r\n    /**\r\n     * Removes empty cells from each vectors without removing rows from other vectors in the set.\r\n     */\r\n    removeEmptyAcrossColumns: {\r\n        title: \"ImLY\",\r\n        fn: function(_){\r\n            for(var i = 0; i < _.args.vectors; i++)\r\n            {\r\n                _.args.vectors[i] = _.args.vectors[i].removeEmpty();\r\n            }\r\n        }\r\n    },\r\n    removeEmptyXY: {\r\n        title: \"Cumi\",\r\n        fn: function(_){\r\n            var M = new Matrix(_.args.x, _.args.y)\r\n            _.sample.raw = M.maxRows();\r\n            M = M.removeEmpty();\r\n            _.args.x = M[0];\r\n            _.args.y = M[1];\r\n            _.sample.net = M.maxRows();\r\n        }\r\n    },\r\n    groupXYRemoveEmpty: {\r\n        title: \"OH5v\",\r\n        fn: function(_) {\r\n            if(_.args.factor) {\r\n                var _matrix = new Matrix(_.args.vectors[0], _.args.factor).pivot(0,1);\r\n                _.args.vectors = _matrix;\r\n                _.args.factor = null;\r\n            } else {\r\n                if(_.args.vectors.length < 2) throw new Error($(\"HHCW\"));\r\n                else {\r\n                    _.args.vectors = _.args.vectors;\r\n                    _.args.factor = null;\r\n                }\r\n            }\r\n            _.sample.raw = _.args.vectors.flat().length;\r\n            //_.args.vectors = _.args.vectors.removeEmpty();\r\n            for(let v = 0; v < _.args.vectors.length; v++) {\r\n                _.args.vectors[v] = _.args.vectors[v].removeEmpty();\r\n            }\r\n            _.sample.net = _.args.vectors.flat().length;\r\n        }\r\n    },\r\n    groupANOVARemoveEmpty: {\r\n        title: \"Jpe0\",\r\n        fn: function(_) {\r\n            if(_.args.factor) {\r\n                var _matrix = new Matrix(_.args.vectors[0], _.args.factor).pivot(0,1);\r\n                _.args.vectors = _matrix;\r\n                _.args.factor = null;\r\n            } else {\r\n                if(_.args.vectors.length < 2) throw new Error($(\"HHCW\"));\r\n                else {\r\n                    _.args.vectors = _.args.vectors;\r\n                    _.args.factor = null;\r\n                }\r\n            }\r\n            _.sample.raw = _.args.vectors.flat().length;\r\n            for(let v = 0; v < _.args.vectors.length; v++) {\r\n                _.args.vectors[v] = _.args.vectors[v].removeEmpty();\r\n            }\r\n            //_.args.vectors = _.args.vectors.removeEmpty();\r\n            _.sample.net = _.args.vectors.flat().length;\r\n        }\r\n    }\r\n}\r\n\r\nclass MatrixAnalysis {\r\n    constructor(model, parent = null) {\r\n        if(parent) this.parent = parent?.isMatrix ? parent : null;\r\n        if(typeof model == \"string\") {            \r\n            if(!MatrixMethodsModels.find(m => model == m.name)) throw new Error($(\"BoEs\", {name: model}));\r\n            else model = MatrixMethodsModels.find(m => model == m.name);\r\n        } \r\n        else if(typeof model == \"object\") model = model;\r\n        else throw new Error(\"Unknown MatrixAnalysis model parameter type.\");\r\n        Object.defineProperty(this, \"model\", {\r\n            readonly: true,\r\n            value: model\r\n        })\r\n        Object.defineProperty(this, \"args\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"sample\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            readonly: true,\r\n            value: this.model.name\r\n        });\r\n        Object.defineProperty(this, \"time\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"outputSchema\", {\r\n            readonly: true,\r\n            value: this.model.output ? new Output(this.model.output) : null\r\n        });\r\n        Object.defineProperty(this, \"unstable\", {\r\n            readonly: true,\r\n            value: !!this.model.unstable\r\n        });\r\n        /* Returns an object or an array of Argument instances based on the model args config. If the instance already inclides user defined arguments, it appends them as a 'value' property. */\r\n        Object.defineProperty(this, \"parameters\", {\r\n            readonly: true,\r\n            /**\r\n             * \r\n             * @param {boolean} asObject If true, returns an object, otherwise returns an array.\r\n             * @returns {Object | Array}\r\n             */\r\n            value: function(asObject) {\r\n                var _ = asObject ? {} : [];\r\n                for(let k of Object.keys(this.model.args)) {\r\n                    var a = new Argument(this.model.args[k].model, this.parent || null, this.model.args[k].config);\r\n                    if(this.args[k]) a.value = this.args[k];\r\n                    else a.value = a.default;\r\n                    if(!asObject) a.name = k;\r\n                    (asObject) ? _[k] = a : _.push(a);\r\n                };\r\n                return _;\r\n            }\r\n        })\r\n        for(let w of [\"title\",\"description\", \"preprocessor\"]) {\r\n            Object.defineProperty(this, w, {\r\n                readonly: true,\r\n                value: {\r\n                    key: this.model.wiki[w] || null,\r\n                    value: this.model.wiki[w] ? $(this.model.wiki[w]) : null\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * The 'with' methods allows specifying the MatrixAnalysis arguments, either as a named object with properties or as a set of parameter arguments.\r\n     * @returns {self}\r\n     */\r\n    with() {\r\n        if(!Argument) Argument = require(\"./argument\").Argument;\r\n        if(new Array(...arguments).length == 0) return this;\r\n        /** named config (object) */\r\n        else if(typeof arguments[0] == \"object\" && !Array.isArray(arguments[0]) ? arguments[0] ? Object.keys(arguments[0]).length > 0 : false : false) {\r\n            var parameters = arguments[0];\r\n            for(let key of Object.keys(this.model.args)) {\r\n                var arg = this.model.args[key];\r\n                if(!arg) throw new Error($(\"EFfS\", {name: key, method: $(this.model.wiki.title)}));\r\n                else {\r\n                    arg = new Argument(arg.model, this.parent, arg.config || {});\r\n                    this.args[key] = arg.validate(parameters[key]);\r\n                }\r\n            }\r\n            return this;\r\n        } else {\r\n            for(let ai = 0; ai < Object.keys(this.model.args).length; ai++) {\r\n                //if(ai > Object.keys(this.model.args)) break;\r\n                var arg = new Argument(this.model.args[Object.keys(this.model.args)[ai]].model, this.parent, this.model.args[Object.keys(this.model.args)[ai]].config || {});\r\n                this.args[Object.keys(this.model.args)[ai]] = arg.validate(new Array(...arguments)[ai]);\r\n            }\r\n            return this;\r\n        }        \r\n    }\r\n    /**\r\n     * Runs the \r\n     * @param {*} config No imployed yet.\r\n     * @returns {self}\r\n     */\r\n    prepare(){\r\n        if(!this.parent) throw new Error($(\"jrQP\"));\r\n        if(this.model.prepare) this.model.prepare(this);\r\n        return this;\r\n    }\r\n    /**\r\n     * Call the calculation function and returns either the VectorAnalysis instance with the result property storing the result or the result itself (see params). If either input preparation or validation has not been called before, it is automatically called.\r\n     * @param {boolean} returnSelf If true, the VectorAnalysis is returned, with the result property storing the calculation result. Otherwise the result is returned. Default true.\r\n     * @returns {self | any}\r\n     */\r\n    run() {\r\n        this.time.from = new Date();\r\n        if(!this.parent) throw new Error($(\"jrQP\"));\r\n        if([...arguments].length > 0) this.with(...arguments);\r\n        this.prepare();        \r\n        var args = Object.entries(this.args).map(e => e[1]);\r\n        this.result = this.model.fn(...args);\r\n        this.time.to = new Date();\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns duration of the \"run\" method (whatever it includes inside) in milliseconds.\r\n     */\r\n    duration() {\r\n        if(this.time.from && this.time.to) return this.time.to.getTime() - this.time.from.getTime();\r\n        else return null;\r\n    }\r\n}\r\n\r\n// #region Models\r\n// core functions\r\nconst matrixMethods = {\r\n    correlPearson: function() {\r\n       var x = arguments[0];\r\n       var y = arguments[1];\r\n       var arr = x.map(function(_,i){ return [_,y[i]]});\r\n       var n = [x.length, y.length].max();\r\n       var nSxy = n * arr.map(v => v[0] * v[1]).sum();\r\n       var SxSy =  x.sum() * y.sum();\r\n       var nSx2_Sx2 = n * (x.map(v => Math.pow(v, 2))).sum() - Math.pow(x.sum(), 2);\r\n       var nSy2_Sy2 = n * (y.map(v => Math.pow(v, 2))).sum() - Math.pow(y.sum(), 2);\r\n       var r = (nSxy - SxSy) / Math.pow(nSx2_Sx2 * nSy2_Sy2, 0.5);\r\n       var df = n -2;\r\n       var t_test = (r * Math.pow(n -2, 0.5)/Math.pow(1-Math.pow(r,2),0.5));\r\n       //var p = (1-dist.tdist(t_test,df))*2;\r\n       var p = dist.tdist(t_test,df);\r\n       return {\r\n           r: r,\r\n           p: p\r\n       };\r\n    },\r\n    correlSpearman: function() {\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        x = x.toAvgRank();\r\n        y = y.toAvgRank();\r\n        var n = x.length;\r\n        var d2 = x.map((_x, i) => Math.pow(_x - y[i],2)).sum();\r\n        var rs = 1 - ((6 * d2) / (n * (Math.pow(n, 2) - 1)));\r\n        var df = n - 2;\r\n\r\n        var t_test = rs / (Math.pow(1-Math.pow(rs,2),0.5))*Math.pow(n-2,0.5);\r\n        //var p = (1-dist.tdist(t_test,df)) * 2;\r\n\r\n        var p = dist.tdist(t_test,df);\r\n        return {\r\n            r: rs,\r\n            df: df,\r\n            p: p\r\n        }\r\n    },\r\n    correlKendall: function(){\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        let n = x.length;\r\n        let numPairs = n * (n - 1) / 2;\r\n        var numConcordant = 0;\r\n        var numDiscordant = 0;\r\n        let numTiesX = 0;\r\n        let numTiesY = 0;\r\n        let numTiesXY = 0;\r\n        for (let i = 0; i < n; i++) {\r\n            for (let j = i + 1; j < n; j++) {\r\n                let x1 = x[i];\r\n                let x2 = x[j];\r\n                let y1 = y[i];\r\n                let y2 = y[j];\r\n                let xDiff = x1 - x2;\r\n                let yDiff = y1 - y2;\r\n                if (xDiff > 0 && yDiff > 0 || xDiff < 0 && yDiff < 0) {\r\n                    numConcordant++;\r\n                } else if (xDiff !== 0 && yDiff !== 0) {\r\n                    numDiscordant++;\r\n                } else {\r\n                    numTiesXY++;\r\n                    if (xDiff === 0) {\r\n                        numTiesX++;\r\n                    }\r\n                    if (yDiff === 0) {\r\n                        numTiesY++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let cn2 = Math.combinations(n,2);\r\n        let d = Math.sqrt((cn2-numTiesX)*(cn2-numTiesY));\r\n        let tau = (numConcordant - numDiscordant)/d;\r\n        // z calculated only for ranks without ties - see Mann-Kendall test\r\n        // see https://github.com/thisancog/statistics.js/blob/master/source/correlation.js\r\n        // 1.05 - artificial and unacceptable correction\r\n        var z = 1.05 * 3*(numConcordant - numDiscordant)/Math.sqrt(n*(n-1)*(2*n+5)/2);\r\n        var p = dist.normsdist(Math.abs(z));\r\n        return {\r\n            tau: tau,\r\n            df: n - 2,\r\n            p: p\r\n        }\r\n    },\r\n    correlPartial: function(){\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        var z = arguments[2];\r\n        var T = new Matrix(x,y,z);\r\n        var n = T.maxRows();\r\n        var r12 = T.correlPearson(0,1).r;\r\n        var r13 = T.correlPearson(0,2).r;\r\n        var r23 = T.correlPearson(1,2).r;\r\n        var rp = (r13 - r12 * r23) / Math.sqrt((1 - r12 * r12) * (1 - r23 * r23))\r\n        var t = (rp * Math.sqrt((n-3)))/(Math.sqrt(1-Math.pow(rp,2)));\r\n        var p = dist.tdist(t, n-3);\r\n        return {\r\n            r: rp,\r\n            p: p\r\n        }\r\n    },\r\n    correlBiserial: function(){\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        return matrixMethods.correlPearson(new NumericVector(new Array(...x).map(v => v ? 1 : 0)).name(x.name),y);\r\n    },\r\n    /** https://en.wikipedia.org/wiki/Phi_coefficient */\r\n    correlPhi: function(x,y) {\r\n        var T = new Table(x,y).removeEmpty();\r\n        x = T.item(0).toNumeric().values();\r\n        y = T.item(1).toNumeric().values();\r\n        var x1y1 = x.filter((_x,i) => _x == 1 && y[i] == 1).length;\r\n        var x1y0 = x.filter((_x,i) => _x == 1 && y[i] == 0).length;\r\n        var x0y1 = x.filter((_x,i) => _x == 0 && y[i] == 1).length;\r\n        var x0y0 = x.filter((_x,i) => _x == 0 && y[i] == 0).length;\r\n        var x1 = x.filter(_x => _x == 1).length;\r\n        var x0 = x.filter(_x => _x == 0).length;\r\n        var y1 = y.filter(_y => _y == 1).length;\r\n        var y0 = y.filter(_y => _y == 0).length;\r\n        var phi = (x1y1*x0y0 - x1y0*x0y1)/Math.sqrt(x1*x0*y1*y0);\r\n        return {};\r\n    },\r\n    correlGamma: function() {\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        let n = x.length;\r\n        let n_c = 0;\r\n        let n_d = 0;   \r\n        for (let i = 0; i < n; i++) {\r\n          for (let j = i + 1; j < n; j++) {\r\n            if ((x[i] < x[j] && y[i] < y[j]) || (x[i] > x[j] && y[i] > y[j])) {\r\n              n_c++;\r\n            } else if ((x[i] < x[j] && y[i] > y[j]) || (x[i] > x[j] && y[i] < y[j])) {\r\n              n_d++;\r\n            }\r\n          }\r\n        }  \r\n        var r = (n_c - n_d) / (n_c + n_d);\r\n        var z = (r - 0) / Math.sqrt((4 * n_c * n_d) / (Math.pow(n, 2) * Math.pow(n - 1, 2)));\r\n        var p = dist.normdist(-z, 0, 1, true);\r\n        return {\r\n            r: r,\r\n            p: p\r\n        };\r\n    },\r\n    correlMatrix: function() {\r\n        var input = arguments[0];\r\n        var method = arguments[1] == 1 ? \"correlPearson\" : arguments[1] == 2 ? \"correlSpearman\" : arguments[1] == 3 ? \"correlKendall\" : arguments[1] == 4 ? \"correlGamma\" : \"correlPearson\";\r\n        var container = [];\r\n        for(var x = 0; x < input.length; x++)\r\n        {\r\n            for(var y = x + 1; y < input.length; y++) \r\n            {\r\n                var c = new Matrix(input[x], input[y]).analyze(method).run(0,1);\r\n                container.push({x: input[x].name() || x, y: input[y].name() || y, r: c.result.r || c.result.tau, p: c.result.p, n: c.sample.net});\r\n            }\r\n        }\r\n        container = container.sort((a,b) => Math.abs(a.r) < Math.abs(b.r) ? 1 : -1);\r\n        return container;\r\n        \r\n    },\r\n    ttest_independent: function(){\r\n        var x = arguments[0][0];\r\n        var y = arguments[0][1];\r\n        var nx = x.length;\r\n        var ny = y.length;\r\n        var df = nx + ny-2;\r\n        var sx2 = Math.pow(x.sum(),2);\r\n        var sy2 = Math.pow(y.sum(),2);\r\n        var mx = x.avg();\r\n        var my = y.avg();\r\n        var x_2 = (x.map(_ => Math.pow(_,2))).sum();\r\n        var y_2 = (y.map(_ => Math.pow(_,2))).sum();\r\n        var t = (mx-my) / Math.pow(((x_2-sx2/nx) + (y_2-sy2/ny))/df * (1/nx+1/ny), 0.5);\r\n        var p = dist.tdist(t, df) * 2;\r\n        return {\r\n            t: t,\r\n            p: p,\r\n            df: df\r\n        }\r\n    },\r\n    ttest_paired: function(){\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        var xy = x.map((_,i) => [_,y[i]]);\r\n        var n = xy.length;\r\n        var df = n * 2 - 2;\r\n        var x_y = xy.map(_ => _[0] - _[1]);\r\n        var t = (x_y.sum()/n)/Math.pow(((x_y.map(_ => Math.pow(_,2))).sum() - Math.pow(x_y.sum(),2)/n)/(n*(n-1)),0.5);    \r\n        var p = dist.tdist(t, df) * 2;\r\n        return {\r\n            t: t,\r\n            p: p,\r\n            df: df\r\n        }\r\n    },\r\n    anova_oneway: function() {\r\n        var arrays = new Array(...arguments[0]);\r\n        var ns = arrays.map(a => a.length);\r\n        var g_avg = arrays.map(a => a.avg());\r\n        var yi_total = (arrays.map((a, i) => a.sum())).sum();\r\n        var yi_avg = yi_total / ns.sum();\r\n        var pow_yi_min = arrays.map((a, i) => a.map(_ => Math.pow(_ - g_avg[i], 2)));\r\n        var pow_yi_min_total = (pow_yi_min.map(a => a.sum())).sum();\r\n        var yi_yn = g_avg.map((g, i) => Math.pow(g - yi_avg, 2) * ns[i]);\r\n        var yi_yn_total = yi_yn.sum();\r\n        var dfwg = (ns.sum() - ns.length);\r\n        var F = (yi_yn.sum() / (ns.length - 1)) / (pow_yi_min_total / dfwg);\r\n        var P2 = yi_yn_total / (yi_yn_total + pow_yi_min_total);\r\n        var p = dist.fdistrt(F, ns.length - 1, dfwg);\r\n        return {\r\n            F: F,\r\n            P2: P2,\r\n            p: p,\r\n            df: dfwg,\r\n            n: ns.sum(),\r\n            ANOVA: {\r\n                totalOfGroups: arrays.length,\r\n                betweenGroups: {\r\n                    sumOfSquares: yi_yn_total,\r\n                    df: ns.length - 1\r\n                },\r\n                withinGroups: {\r\n                    sumOfsquares: pow_yi_min_total,\r\n                    df: dfwg\r\n                },\r\n                total: {\r\n                    sumOfSquares: yi_yn_total + pow_yi_min_total,\r\n                    df: ns.length - 1 + dfwg\r\n                }\r\n            }\r\n        };\r\n    },\r\n    mannwhitney: function(){\r\n        var x = arguments[0][0];\r\n        var y = arguments[0][1];\r\n        var all = x.concat(y);\r\n        var ac = all.length;\r\n        var xa = x.map(function(v,i){\r\n            var vd = all.rankAvg(v, 0);\r\n            var va = all.rankAvg(v, 1);\r\n            return vd + (ac + 1 - vd - va)/2;\r\n        });\r\n        var ya = y.map(function(v,i){\r\n            var vd = all.rankAvg(v, 0);\r\n            var va = all.rankAvg(v, 1);\r\n            return vd + (ac + 1 - vd - va)/2;\r\n        });\r\n        var R1 = xa.sum();\r\n        var R2 = ya.sum();\r\n        var N1 = xa.length;\r\n        var N2 = ya.length;\r\n        var U1 = N1*N2+N1*(N1+1)/2 - R1;\r\n        var U2 = N1*N2+N2*(N2+1)/2 - R2;\r\n        var U = Math.min(U1,U2);\r\n        var z = (U-N1*N2/2)/Math.sqrt(N1*N2*(N1+N2+1)/12)\r\n        var p = dist.normsdist(z, true)*2;\r\n        return {\r\n            U: U,\r\n            Z: z,\r\n            p: p\r\n        }\r\n    },    \r\n    linreg: function(){\r\n        var x = arguments[0];\r\n        var y = arguments[1];\r\n        var model = arguments[2]\r\n        switch (model) {\r\n            case 1:\r\n                break;\r\n            case 2: \r\n                x = x.reload(x.map(e => Math.log(e)));\r\n                break;\r\n            case 3:\r\n                x = x.reload(x.map(e => 1/e));\r\n                break;\r\n            case 4:\r\n                y = y.reload(y.map(e => Math.log(e)));\r\n                break;\r\n            case 5:\r\n                x = x.reload(x.map(e => Math.log(e)));\r\n                y = y.reload(y.map(e => Math.log(e)));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        var n = x.length;\r\n        var x2 = x.map(_ => Math.pow(_,2)); // x2i\r\n        var xy = x.map((_,i) => _ * y[i]); // xiyi\r\n        var mx = x.avg();\r\n        var my = y.avg();\r\n        var mx2 = x2.avg();\r\n        var mxy = xy.avg();\r\n        var beta1 = (mxy-mx*my)/(mx2-Math.pow(mx,2));\r\n        var beta0 = my - beta1 * mx;\r\n        var yexp = x.map(_ => beta0 + beta1*_);\r\n        var sr = y.map((_,i) => Math.pow(yexp[i] - _, 2)).sum();\r\n        var st = y.map(_ => Math.pow(_ - my,2)).sum();\r\n        var r2 = (st-sr)/st;\r\n        var r = matrixMethods.correlPearson(x,y).r; //Math.sqrt(r2);\r\n        var F = (st-sr)/(sr/(n-2));\r\n        var p = dist.fdistrt(F,1,n-2);\r\n        return {\r\n            r2: r2,\r\n            r: r,\r\n            F: F,\r\n            p: p,\r\n            beta0: beta0,\r\n            beta1: beta1,\r\n            fn: function(x){ return beta0 + x * beta1},\r\n            //n: x.length\r\n        };\r\n    },\r\n    contingency: function(x,y,n) {\r\n        var xd = x.distinct();\r\n        var yd = y.distinct();\r\n        var xy = new Array(...x.map(function(_x,i){return {x: _x, y: y[i], n: n ? n[i] || 0 : 1}}));\r\n        var xyn = xy.map(function(_){return {x:_.x, y: _.y}}).distinct().map(function(_,i){\r\n            _.n = xy.filter(o => (o.x === _.x && o.y === _.y)).map(_ => _.n).sum();\r\n            return _;\r\n        });\r\n        var total = (xyn.map(_ => _.n)).sum();\r\n        var sx = xd.map(function(_){return {x: _ ,t: (xyn.filter(f => f.x === _).map(_ => _.n)).sum()}});\r\n        var sy = yd.map(function(_){return {y: _ ,t: (xyn.filter(f => f.y === _).map(_ => _.n)).sum()}});\r\n        xd = xd.map(function(_,i){return {k: _, t: sx[i].t}});\r\n        yd = yd.map(function(_,i){return {k: _, t: sy[i].t}});\r\n        var _xyn = xyn.map(function(_,i){\r\n            var _n = yd.find(_y => _y.k === _.y).t * xd.find(_x => _x.k === _.x).t / total;\r\n            return {x: _.x, y: _.y, n: _n};\r\n        });\r\n        var __xyn = _xyn.map(function(_){\r\n            return {x: _.x, y: _.y, n: Math.pow(_.n  -xyn.find(o => o.x === _.x && o.y === _.y).n,2)/_.n};\r\n        })\r\n        var G = (__xyn.map(_ => _.n)).sum(); /* G = phi square */\r\n        var df = (xd.length -1)*(yd.length -1); /* degrees of freedom */\r\n        var p = 1 - dist.chisqdist(G,df,true); /* significance value*/ \r\n        var C = Math.sqrt(G/(G+total)); /* C = Pearson's C */\r\n        var V = Math.sqrt(G/(total*2)); /* V = Cramer's V */\r\n        return {\r\n            phi: G,\r\n            p: p,\r\n            df: df,\r\n            C: C,\r\n            V: V,\r\n        }\r\n    },\r\n    kwanova: function(){\r\n        var all = [...arguments[0]].flat();\r\n        var n = all.length;\r\n        var ranks = [...arguments[0]].map(vector => vector.map(v => all.rankAvg(v, 1, 1))).map(v => Math.pow(v.sum(), 2)/v.length);\r\n        let H = 12/(n*(n+1)) * ranks.sum() - 3*(n+1);\r\n        var t = [...arguments[0]].map(vector => vector.map(v => all.rankAvg(v, 1, 1))).flat().frequency().filter(r => r.n > 1).map(e => e.n).frequency();\r\n        /* ties correction */\r\n        if(t.length > 0) H = H/(1 - t.map(_ => Number(_.n) * (Math.pow(Number(_.v),3) - Number(_.v))).sum()/(Math.pow(n,3)- n));\r\n        let df = arguments[0].length - 1;\r\n        let p = 1 - dist.chisqdist(H, df, true);\r\n        return {\r\n            H: H,\r\n            df: df,\r\n            p: p\r\n        }        \r\n    },\r\n    /* Wilcoxon Rank Sum Test for Independent Samples */\r\n    wilcoxon_indpendent: function(){\r\n        var all = arguments[0].flat();\r\n        var x = arguments[0][0].map(v => all.rankAvg(v, 1, 1));\r\n        var y= arguments[0][1].map(v => all.rankAvg(v, 1, 1));\r\n        var n1 = x.length;\r\n        var n2 = y.length;\r\n        let W = Math.min(x.sum(), y.sum());\r\n        var z = (W - n1*(n1+n2+1)/2)/ Math.sqrt(n1*n2*(n1+n2+1)/12);\r\n        var p = dist.normsdist(z,true)*2;\r\n        return {\r\n            W: W,\r\n            Z: z,\r\n            p: p\r\n        }\r\n    },\r\n    /* Wilcoxon's signed rank test for dependent samples */\r\n    wilcoxon_paired: function(){\r\n        var x = arguments[0];\r\n        var y= arguments[1];\r\n        var d = x.map((_,i) => _ - y[i]);\r\n        var absd = d.map((_,i) => Math.abs(_) == 0 ? null : Math.abs(_));    \r\n        var rabsd = absd.map((_,i, arr) => _ == null ? null : arr.rankAvg(_,1,0));\r\n        var pr = rabsd.map((_,i) => d[i] > 0 ? _ : null).filter(_ => !!_);\r\n        var nr = rabsd.map((_,i) => d[i] < 0 ? _ : null).filter(_ => !!_);\r\n        var T = Math.min(pr.sum(), nr.sum());\r\n        var n = pr.concat(nr).length;\r\n        var m = (n*(n+1))/4;//mean\r\n        var v = m*(2*n+1)/6;\r\n        var stdev = Math.sqrt(v);\r\n        var z = Math.abs(T-m)/stdev;\r\n        var p = 2*(1-dist.normsdist(z,true));\r\n        return {\r\n            Z:z,\r\n            p: p\r\n        }\r\n    },\r\n    friedman: function() {\r\n        var vectors = new Array(...arguments[0]);\r\n        var n = vectors[0].length;\r\n        var k = vectors.length;\r\n        var rows = [];\r\n        for(var r = 0; r < n; r++) {\r\n            rows.push(vectors.map((v,i) => v[r]).toAvgRank(1,1));\r\n        };\r\n        let transposition = Array.from(Array(k).keys()).map((x,i) => rows.map(r => r[i]));\r\n        var hasTies = transposition.map(v => v.distinct().length < v.length);\r\n        /* without ties*/         \r\n        if(!hasTies) {\r\n            var Q = 12/(n*k*(k+1))* transposition.map(v => Math.pow(v.sum(),2)).sum() - 3*n*(k+1);\r\n            // alternative calculation\r\n            //var Q = 12/((n*k*(k+1))) * transposition.map(v => v.sum()).map(s => Math.pow(s - ((n*(k+1))/2),2)).sum(); \r\n        } \r\n        /* with ties */\r\n        else  {\r\n            const C = 1/4*n*k*Math.pow(k+1,2);\r\n            var Q = (n*(k-1)*(transposition.map(v => Math.pow(v.sum(),2)/v.length).sum() - C)) / (transposition.flat().map(e => Math.pow(e,2)).sum() - C);\r\n        }\r\n        var df = k-1;\r\n        var p = dist.chisqdist(Q,df)*2;\r\n        return {\r\n            Q: Q,\r\n            df: df,\r\n            p: p\r\n        }\r\n    },\r\n    mtplinreg: function(){\r\n\r\n    },\r\n    logreg: function(){\r\n        //http://www.17bigdata.com/logistic-regression-in-7-steps-in-excel-2010-and-excel-2013/\r\n    }\r\n};\r\n\r\nconst MatrixMethodsModels = [\r\n    {   name: \"correlPearson\",\r\n        fn: matrixMethods.correlPearson,\r\n        wiki: {\r\n            title: \"pTvR\",\r\n            description: \"wPyG\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlPearson\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlSpearman\",\r\n        fn: matrixMethods.correlSpearman,\r\n        wiki: {\r\n            title: \"eJTT\",\r\n            description: \"jAGi\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlSpearman\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlKendall\",\r\n        fn: matrixMethods.correlKendall,\r\n        wiki: {\r\n            title: \"mgBC\",\r\n            description: \"VOmC\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        unstable: true,\r\n        output: \"correlKendall\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlPartial\",\r\n        fn: matrixMethods.correlPartial,\r\n        wiki: {\r\n            title: \"xfSf\",\r\n            description: \"UcfZ\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlPartial\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            },\r\n            z: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"z\",\r\n                    title: \"tpUR\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlBiserial\",\r\n        fn: matrixMethods.correlBiserial,\r\n        wiki: {\r\n            title: \"AagR\",\r\n            description: \"OMiA\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlPearson\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"booleanVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlGamma\",\r\n        fn: matrixMethods.correlGamma,\r\n        wiki: {\r\n            title: \"R5AC\",\r\n            description: \"zKSX\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlGamma\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"correlMatrix\",\r\n        fn: matrixMethods.correlMatrix,\r\n        wiki: {\r\n            title: \"DeMU\",\r\n            description: \"XtbY\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"correlMatrix\",\r\n        prepare: null,\r\n        args: {\r\n            vectors: {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"sQ9w\",\r\n                    required: true\r\n                }\r\n            },\r\n            method: {\r\n                model: \"correlationMatrixMethod\",\r\n                config: {\r\n                    name: \"method\",\r\n                    title: \"nDx1\",\r\n                    required: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"ttestind\",\r\n        fn: matrixMethods.ttest_independent,\r\n        wiki: {\r\n            title: \"YqRh\",\r\n            description: \"gILL\",\r\n            preeprocesor: preprocessors.groupXYRemoveEmpty\r\n        },\r\n        output: \"ttestind\",\r\n        prepare: preprocessors.groupXYRemoveEmpty.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"Rd9K\",\r\n                    required: true,\r\n                }\r\n            },        \r\n            \"factor\": {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"factor\",\r\n                    title: \"dTDt\"\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"ttestpair\",\r\n        fn: matrixMethods.ttest_paired,\r\n        wiki: {\r\n            title: \"mmXD\",\r\n            description: \"kPqo\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"ttestpair\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true,\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }           \r\n        }\r\n    },\r\n    {   name: \"anovaow\",\r\n        fn: matrixMethods.anova_oneway,\r\n        wiki: {\r\n            title: \"baJo\",\r\n            description: \"qqQo\",\r\n            preprocessor: preprocessors.groupANOVARemoveEmpty.title\r\n        },   \r\n        output: \"anovaow\",     \r\n        prepare: preprocessors.groupANOVARemoveEmpty.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"Rd9K\",\r\n                    required: true,\r\n                }\r\n            },        \r\n            \"factor\": {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"factor\",\r\n                    title: \"dTDt\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"linreg\",\r\n        fn: matrixMethods.linreg,\r\n        wiki: {\r\n            title: \"vlCA\",\r\n            description: \"dzFE\",\r\n            preprocessor: preprocessors.removeEmptyXY.title,\r\n            url: {\r\n                \"cs-CZ\": \"https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese\",\r\n                \"en-GB\": \"https://en.wikipedia.org/wiki/Linear_regression\"\r\n            }\r\n        },\r\n        output: \"linreg\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"jDlm\",\r\n                    required: true,\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"jFVv\",\r\n                    required: true\r\n                }\r\n            },        \r\n            model: {\r\n                model: \"regressionModel\",\r\n                config: {\r\n                    name: \"model\",\r\n                    title: \"OBml\",\r\n                    default: 1\r\n                }\r\n            }            \r\n        }\r\n    },\r\n    {   name: \"contingency\",\r\n        fn: matrixMethods.contingency,\r\n        wiki: {\r\n            title: \"gRix\",\r\n            description: \"fqwd\",\r\n            preprocessor: preprocessors.removeEmptyAcrossRows.title,\r\n            url: \"https://en.wikipedia.org/wiki/Contingency_table\"\r\n        },\r\n        prepare: function(_) {\r\n            _.sample.raw = _.parent.maxRows();\r\n            var vectors = Object.entries(_.args).map(a => a[1]).filter(a => a?.isVector);\r\n            var M = new Matrix(...vectors).removeEmpty();\r\n            _.sample.net = M.maxRows();\r\n            _.args.rows = M[0];\r\n            _.args.columns = M[1];\r\n            if(_.args.n) _.args.n = M[2];\r\n        },\r\n        output: \"contingency\",\r\n        args: {\r\n            rows: {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"rows\",\r\n                    title: \"gLRN\",\r\n                    required: true\r\n                }\r\n            },        \r\n            columns: {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"columns\",\r\n                    title: \"bpjC\",\r\n                    required: true\r\n                }\r\n            },        \r\n            n: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"n\",\r\n                    title: \"fqUi\",\r\n                    required: false\r\n                }\r\n            }               \r\n        }\r\n    },\r\n    {   name: \"wcxpair\",\r\n        fn: matrixMethods.wilcoxon_paired,\r\n        wiki: {\r\n            title: \"ChzY\",\r\n            description: \"pApR\",\r\n            preprocessor: preprocessors.removeEmptyXY.title\r\n        },\r\n        output: \"wcxpair\",\r\n        prepare: preprocessors.removeEmptyXY.fn,\r\n        args: {\r\n            x: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"x\",\r\n                    title: \"qFEM\",\r\n                    required: true,\r\n                }\r\n            },\r\n            y: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"y\",\r\n                    title: \"tpUu\",\r\n                    required: true\r\n                }\r\n            }           \r\n        }\r\n    },\r\n    {   name: \"wcxind\",\r\n        fn: matrixMethods.wilcoxon_indpendent,\r\n        wiki: {\r\n            title: \"Httc\",\r\n            description: \"sqwQ\",\r\n            preeprocesor: preprocessors.groupXYRemoveEmpty\r\n        },\r\n        output: \"wcxind\",\r\n        prepare: preprocessors.groupXYRemoveEmpty.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"Rd9K\",\r\n                    required: true,\r\n                }\r\n            },        \r\n            \"factor\": {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"factor\",\r\n                    title: \"dTDt\",\r\n                    required: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"mwu\",\r\n        fn: matrixMethods.mannwhitney,\r\n        wiki: {\r\n            title: \"rPQr\",\r\n            description: \"vzHj\",\r\n            preprocessor: preprocessors.groupXYRemoveEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test\",\r\n        },\r\n        output: \"mwu\",\r\n        prepare: preprocessors.groupXYRemoveEmpty.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"Rd9K\",\r\n                    required: true,\r\n                }\r\n            },        \r\n            \"factor\": {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    title: \"dTDt\",\r\n                    name: \"factor\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"friedman\",\r\n        fn: matrixMethods.friedman,\r\n        wiki: {\r\n            title: \"7m48\",\r\n            description: \"sUw5\",\r\n            preprocessor: preprocessors.removeEmptyAcrossRows.title\r\n        },   \r\n        output: \"friedman\",     \r\n        prepare: preprocessors.removeEmptyAcrossRows.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    required: true,\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"kwanova\",\r\n        fn: matrixMethods.kwanova,\r\n        wiki: {\r\n            title: \"IWXW\",\r\n            description: \"J5jV\",\r\n            preprocessor: preprocessors.groupANOVARemoveEmpty.title\r\n        },   \r\n        output: \"kwanova\",     \r\n        prepare: preprocessors.groupANOVARemoveEmpty.fn,\r\n        args: {\r\n            \"vectors\": {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"vectors\",\r\n                    title: \"Rd9K\",\r\n                    required: true,\r\n                }\r\n            },        \r\n            \"factor\": {\r\n                model: \"anyVector\",\r\n                config: {\r\n                    name: \"factor\",\r\n                    title: \"dTDt\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"mtplinreg\",\r\n        fn: matrixMethods.mtplinreg,\r\n        wiki: {\r\n            title: \"L9ff\",\r\n            description: \"MSug\",\r\n            preprocessor: preprocessors.removeEmptyXY.title,\r\n        },\r\n        output: \"mtplinreg\",\r\n        prepare: function(_){\r\n            var M = new Matrix(..._.args.independents, _.args.dependent);\r\n            _.sample.raw = M.maxRows();\r\n            M = M.removeEmpty();\r\n            _.sample.net = M.maxRows();\r\n            _.args.independents = M.slice(0, M.length - 1);\r\n            _.args.dependent = M[M.length - 1];\r\n        },\r\n        args: {\r\n            dependent: {\r\n                model: \"numericVector\",\r\n                config: {\r\n                    name: \"dependent\",\r\n                    title: \"BnOT\",\r\n                    required: true\r\n                }\r\n            },   \r\n            independents: {\r\n                model: \"numericVectors\",\r\n                config: {\r\n                    name: \"independents\",\r\n                    title: \"OzwJ\",\r\n                    required: true,\r\n                }\r\n            }         \r\n        }\r\n    }\r\n];\r\n\r\nMatrixMethodsModels.forEach(function(m) {\r\n    Matrix.prototype[m.name] = function() {\r\n        var M = new MatrixAnalysis(m, this);\r\n        return M.run(...arguments).result;\r\n    };\r\n});\r\n\r\nconst Models = {}\r\nfunction mapModels() {\r\n    MatrixMethodsModels.map(function(m){Models[m.name] = new MatrixAnalysis(m, null)});\r\n}\r\nmapModels();\r\n\r\n// #endregion\r\n\r\nmodule.exports = {\r\n    Matrix: Matrix,\r\n    MatrixAnalysis: MatrixAnalysis,\r\n};","var $ = require('./locale').call;\r\n\r\nclass Output {\r\n    constructor(name) {\r\n        var model = lib[name];\r\n        if(!model) throw new Error(\"Unknown output model name: \" + name);\r\n        this.name = name;\r\n        this.type = model.type;\r\n        if(model.title) {\r\n            this.title = {\r\n                key: model.title,\r\n                value: $(model.title)\r\n            }\r\n        }\r\n        if(model.type == \"object\") {\r\n            this.properties = createObjectProperties(model.properties);\r\n        }\r\n        else if(model.type == \"array\") {\r\n            this.properties = createObjectProperties(model.items.properties);\r\n        } else {\r\n            this.title = {\r\n                key: model.title,\r\n                value: $(model.title)\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new Output instance and populates it with analysis result data.\r\n     * @param {VectorAnalysis | MatrixAnalysis} analysis \r\n     * @returns {Output} Returns a new instance of the Output class.\r\n     */ \r\n    static fromAnalysis(analysis) {\r\n        return props(new Output(analysis.model.output), analysis.result);\r\n        function props(node, result) {\r\n            if(node.type == \"object\")\r\n            {\r\n                for(let k of Object.keys(node.properties)) {\r\n                    props(node.properties[k], result[k]);\r\n                }\r\n            }\r\n            else node.value = result;\r\n            return node;\r\n        }\r\n    }\r\n}\r\n\r\nfunction createObjectProperties(properties) {\r\n    var o = {};\r\n    for(key of Object.keys(properties)) {\r\n        var p = properties[key]\r\n        var prop = {\r\n            name: key,\r\n            type: p.type,\r\n            format: p.format\r\n        }\r\n        prop.title = {\r\n            key: p.title,\r\n            value: $(p.title)\r\n        }\r\n        if(p.description) \r\n        {\r\n            prop.description = {\r\n                key: p.description,\r\n                value: $(p.description)\r\n            }\r\n        }\r\n        o[key] = prop;\r\n        if(p.type == \"object\") {\r\n            o[key].properties = createObjectProperties(p.properties);\r\n        } else if(p.type == \"array\") {\r\n            o[key].items = createArrayItems(p.items)\r\n        }\r\n    }\r\n    return o;\r\n}\r\n\r\nfunction createArrayItems(items) {\r\n    return createObjectProperties(items.properties);\r\n}\r\n\r\nconst snippets = {\r\n    sig: {\r\n        \"title\": \"sDgR\", \r\n        \"type\": \"zeroToOneInc\",\r\n        \"format\": \"sig\"\r\n    },\r\n    ttest: {\r\n        \"title\": \"cBNP\", \r\n        \"type\": \"number\",\r\n    },\r\n    df: {\r\n        \"title\": \"OYQu\", \r\n        \"type\": \"uint\",\r\n    },\r\n    siglevel: {\r\n        \"title\": \"mjPq\", \r\n        \"type\": \"zeroToOneInc\",\r\n    },\r\n    n: {\r\n        \"title\": \"vlH2\",\r\n        \"type\": \"uint\"\r\n    }\r\n}\r\n\r\nconst lib = {\r\n    \"any\": {\r\n        type: \"any\",\r\n        title: \"oMas\"\r\n    },\r\n    \"number\": {\r\n        \"title\": \"pelN\", \r\n        \"type\": \"number\",\r\n    },\r\n    \"uint\": {\r\n        \"title\": \"IrhN\", \r\n        \"type\": \"number\",\r\n    },\r\n    \"percent\": {\r\n        \"title\": \"uyVK\", \r\n        \"type\": \"percent\",\r\n    },\r\n    \"histogram\": {\r\n        \"title\": \"PAwR\", \r\n        \"type\": \"array\",\r\n        \"items\":{\r\n            \"title\": \"Items\", \r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"from\": {\r\n                    \"title\": \"jbqY\", \r\n                    \"type\": \"number\",\r\n                },\r\n                \"to\": {\r\n                    \"title\": \"GlDV\", \r\n                    \"type\": \"number\",\r\n                },\r\n                \"n\": {\r\n                    \"title\": \"eHkc\", \r\n                    \"type\": \"integer\",\r\n                },\r\n                \"nc\": {\r\n                    \"title\": \"Dwuz\", \r\n                    \"type\": \"integer\",\r\n                },\r\n                \"p\": {\r\n                    \"title\": \"iDVx\", \r\n                    \"type\": \"percent\",\r\n                },\r\n                \"pc\": {\r\n                    \"title\": \"oIyG\", \r\n                    \"type\": \"percent\",\r\n                }\r\n            }\r\n        }        \r\n    },\r\n    \"frequency\": {\r\n        \"title\": \"dYJK\", \r\n        \"type\": \"array\",\r\n        \"items\":{\r\n            \"title\": \"Items\", \r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"v\": {\r\n                    \"title\": \"ZVbP\", \r\n                    \"type\": \"any\",\r\n                    \"pattern\": \"^.*$\"\r\n                },\r\n                \"n\": {\r\n                    \"title\": \"mXpR\", \r\n                    \"type\": \"integer\",\r\n                }\r\n            }\r\n        }\r\n    \r\n    },\r\n    \"ttest\": {\r\n        \"title\": \"VEAt\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"t\": snippets.ttest,\r\n            \"p\": snippets.sig,\r\n            \"n\": { \r\n                \"title\": \"bLoI\", \r\n                \"type\": \"integer\"\r\n            }\r\n        }\r\n    },\r\n    \"mci\": {\r\n        \"title\": \"yHjW\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"m\": {\r\n                \"title\": \"rR94\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"sig\": snippets.siglevel,\r\n            \"delta\": {\r\n                \"title\": \"NzBg\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"lb\": { \r\n                \"title\": \"GynK\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"ub\": {\r\n                \"title\": \"iIPc\", \r\n                \"type\": \"number\",\r\n            }\r\n        }\r\n    },\r\n    \"pci\": {\r\n        \"title\": \"ZhjW\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"p\": {\r\n                \"title\": \"nCHN\", \r\n                \"type\": \"percent\",\r\n            },\r\n            \"sig\": snippets.siglevel,\r\n            \"delta\": {\r\n                \"title\": \"NzBg\", \r\n                \"type\": \"percent\",\r\n            },\r\n            \"lb\": {\r\n                \"title\": \"GynK\", \r\n                \"type\": \"percent\",\r\n            },\r\n            \"ub\": {\r\n                \"title\": \"iIPc\", \r\n                \"type\": \"percent\",\r\n            }\r\n        }\r\n    },    \r\n    \"shapirowilk\": {\r\n        \"title\": \"byTa\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"W\": {\r\n                \"title\": \"nZvR\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"kstest\": {\r\n        \"title\": \"DLoe\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"T\": {\r\n                \"title\": \"jBSf\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlPearson\": {\r\n        \"title\": \"pTvR\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlSpearman\": { \r\n        \"title\": \"eJTT\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"title\": \"eJTT\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlKendall\": {\r\n        \"title\": \"mgBC\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"tau\": {\r\n                \"title\": \"QCkg\", \r\n                \"type\": \"number\",\r\n            },\r\n            /*\r\n            \"taub\": {\r\n                \"title\": \"NgVa\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"taua\": {\r\n                \"title\": \"mgBA\", \r\n                \"type\": \"number\",\r\n            },\r\n            */\r\n            \"df\": snippets.df,\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlPartial\": {\r\n        \"title\": \"xfSf\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlGamma\": {\r\n        \"title\": \"R5AC\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r\": {\r\n                \"title\": \"wZUG\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig\r\n        }\r\n    },\r\n    \"correlMatrix\": {\r\n        \"title\": \"DeMU\", \r\n        \"type\": \"array\",\r\n        \"items\":{\r\n            \"title\": \"Items\", \r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"x\": {\r\n                    \"title\": \"qFEM\", \r\n                    \"type\": \"any\",\r\n                    \"pattern\": \"^.*$\"\r\n                },\r\n                \"y\": {\r\n                    \"title\": \"tpUu\", \r\n                    \"type\": \"any\",\r\n                    \"pattern\": \"^.*$\"\r\n                },\r\n                \"r\": {\r\n                    \"title\": \"S3WK\", \r\n                    \"type\": \"number\",\r\n                    \"pattern\": \"^.*$\",\r\n                    \"format\": \"correl\"\r\n                },\r\n                \"p\": snippets.sig,\r\n                \"n\": snippets.n\r\n            }\r\n        }\r\n    \r\n    },\r\n    \"linreg\": {\r\n        \"title\": \"vlCA\",\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r2\": {\r\n                \"$id\": \"#root/r2\", \r\n                \"title\": \"VqBH\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"F\": {\r\n                \"$id\": \"#root/F\", \r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"beta0\": {\r\n                \"$id\": \"#root/beta0\", \r\n                \"title\": \"TDpu\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"beta1\": {\r\n                \"$id\": \"#root/beta1\", \r\n                \"title\": \"eFcW\", \r\n                \"type\": \"number\"\r\n            }\r\n        }\r\n    },\r\n    \"mwu\": {\r\n        \"title\": \"rPQr\",\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"U\": {\r\n                \"title\": \"TkNf\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"Z\": { \r\n                \"title\": \"Shpv\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n        }\r\n    },\r\n    \"anovaow\": {\r\n        \"title\": \"baJo\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"F\": {\r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"P2\": {\r\n                \"title\": \"HksP\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"n\": { \r\n                \"title\": \"bLoI\", \r\n                \"type\": \"uint\",\r\n            },\r\n            \"ANOVA\": {\r\n                \"title\": \"qCgT\", \r\n                \"type\": \"object\",\r\n                \"target\": \"addon\",\r\n                \"properties\": {\r\n                    \"totalOfGroups\": {\r\n                        \"title\": \"cXCr\", \r\n                        \"type\": \"integer\"\r\n                    },\r\n                    \"betweenGroups\": {\r\n                        \"title\": \"thNv\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfSquares\": {\r\n                                \"title\": \"SqTd\", \r\n                                \"type\": \"number\",\r\n                            },\r\n                            \"df\": {\r\n                                \"title\": \"OYQu\", \r\n                                \"type\": \"integer\",\r\n                            }\r\n                        }\r\n                    },\r\n                    \"withinGroups\": {\r\n                        \"title\": \"GiRP\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfSquares\": {\r\n                                \"title\": \"SqTd\", \r\n                                \"type\": \"number\",\r\n                            },\r\n                            \"df\": {\r\n                                \"title\": \"OYQu\", \r\n                                \"type\": \"integer\",\r\n                            }\r\n                        }\r\n                    },\r\n                    \"total\": {\r\n                        \"title\": \"P67p\", \r\n                        \"type\": \"object\",\r\n                        \"properties\": {\r\n                            \"sumOfSquares\": {\r\n                                \"title\": \"SqTd\", \r\n                                \"type\": \"number\",\r\n                            },\r\n                            \"df\": {\r\n                                \"title\": \"OYQu\", \r\n                                \"type\": \"integer\",\r\n                            }\r\n                        }\r\n                    }\r\n    \r\n                }\r\n            }\r\n    \r\n        }\r\n    },\r\n    \"ttestind\": {\r\n        \"title\": \"YqRh\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"t\": snippets.ttest,\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df\r\n        }\r\n    },\r\n    \"ttestpair\": {\r\n        \"title\": \"mmXD\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"t\": snippets.ttest,\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df\r\n        }\r\n    },\r\n    \"wcxpair\": {\r\n        \"title\": \"ChzY\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"Z\": { \r\n                \"title\": \"9KFq\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n        }\r\n    },\r\n    \"wcxind\": {\r\n        \"title\": \"ChzY\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"W\": { \r\n                \"title\": \"Zymm\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"Z\": { \r\n                \"title\": \"9KFq\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n        }\r\n    },\r\n    \"friedman\": {\r\n        \"title\": \"7m48\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"Q\": { \r\n                \"title\": \"t1BN\", \r\n                \"type\": \"number\"\r\n            },\r\n            df: snippets.df,\r\n            \"p\": snippets.sig,\r\n        }\r\n    },\r\n    \"contingency\": {\r\n        \"title\": \"gRix\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"phi\": {\r\n                \"title\": \"GfeP\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df,\r\n            \"C\": {\r\n                \"title\": \"BUaN\", \r\n                \"type\": \"number\",\r\n            },\r\n            \"V\": {\r\n                \"title\": \"VYQH\", \r\n                \"type\": \"number\",\r\n            }\r\n        }\r\n    },\r\n    \"kwanova\": {\r\n        \"title\": \"YqRh\", \r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"H\": {\r\n                title: \"rrWq\",\r\n                type: \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"df\": snippets.df\r\n        }\r\n    },\r\n    \"mtplinreg\": {\r\n        \"title\": \"vlCA\",\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n            \"r2\": {\r\n                \"$id\": \"#root/r2\", \r\n                \"title\": \"VqBH\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"r\": {\r\n                \"$id\": \"#root/r\", \r\n                \"title\": \"pTvR\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"F\": {\r\n                \"$id\": \"#root/F\", \r\n                \"title\": \"Jdfb\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"p\": snippets.sig,\r\n            \"beta0\": {\r\n                \"$id\": \"#root/beta0\", \r\n                \"title\": \"TDpu\", \r\n                \"type\": \"number\"\r\n            },\r\n            \"beta1\": {\r\n                \"$id\": \"#root/beta1\", \r\n                \"title\": \"eFcW\", \r\n                \"type\": \"number\"\r\n            }\r\n        }\r\n    },\r\n}\r\nmodule.exports = {Output: Output};","\"use strict\";\r\nlet $ = require(\"./locale\").call;\r\nconst {Array, Math, String, Function} = require(\"./extensions\");\r\nconst rndWordList= [\"silver\",\"twig\",\"train\",\"reading\",\"clouds\",\"bean\",\"frogs\",\"power\",\"canvas\",\"stop\",\"van\",\"drain\",\"doctor\",\"lamp\",\"mind\",\"existence\",\"seat\",\"sky\",\"cloud\",\"burn\",\"crayon\",\"brush\",\"hat\",\"snails\",\"snail\",\"move\",\"seashore\",\"honey\",\"powder\",\"cork\",\"toothpaste\",\"cub\",\"kitty\",\"skin\",\"self\",\"rice\",\"chin\",\"cushion\",\"death\",\"steel\",\"toes\",\"cabbage\",\"stamp\",\"bone\",\"cemetery\",\"appliance\",\"fairies\",\"unit\",\"committee\",\"fall\",\"debt\",\"cherry\",\"baby\",\"rings\",\"legs\",\"knee\",\"bike\",\"cook\",\"carpenter\",\"expansion\",\"toothbrush\",\"rain\",\"fork\",\"statement\",\"house\",\"things\",\"cars\",\"root\",\"books\",\"marble\",\"swim\",\"babies\",\"jellyfish\",\"question\",\"trains\",\"apparatus\",\"wish\",\"sand\",\"lettuce\",\"sense\",\"balls\",\"baby\",\"ghost\",\"power\",\"sofa\",\"learning\",\"bushes\",\"church\",\"smile\",\"distribution\",\"reason\",\"whip\",\"giants\",\"beginner\",\"crow\",\"invention\",\"letters\",\"horses\",\"game\",\"scissors\",\"bat\",\"cover\",\"journey\",\"whistle\",\"society\",\"competition\",\"flowers\",\"sweater\",\"shoe\",\"punishment\",\"creator\",\"brain\",\"ray\",\"island\",\"mailbox\",\"pump\",\"rub\",\"hands\",\"burn\",\"spoon\",\"beetle\",\"step\",\"plot\",\"activity\",\"airplane\",\"sea\",\"grip\",\"blow\",\"pump\",\"jeans\",\"slave\",\"boys\",\"appliance\",\"ball\",\"trees\",\"cherries\",\"ladybug\",\"appliance\",\"brick\",\"doctor\",\"branch\",\"crib\",\"elbow\",\"root\",\"sheep\",\"toothpaste\",\"behavior\",\"sail\",\"voice\",\"hydrant\",\"sky\",\"hands\",\"veil\",\"crib\",\"tray\",\"wind\",\"beggar\",\"authority\",\"wax\",\"flesh\",\"afterthought\",\"existence\",\"feet\",\"creator\",\"plough\",\"hook\",\"cub\",\"bottle\",\"sidewalk\",\"weather\",\"light\",\"fight\",\"wheel\",\"fog\",\"island\",\"knife\",\"pancake\",\"bikes\",\"farmer\",\"experience\",\"lizards\",\"cracker\",\"scale\",\"rabbits\",\"camera\",\"coach\",\"airplane\",\"wrench\",\"pencil\",\"minute\",\"paper\",\"pancake\",\"push\",\"treatment\",\"shop\",\"lock\",\"string\",\"hand\",\"dinner\",\"goat\",\"wine\",\"expert\",\"creator\",\"woman\",\"trick\",\"pet\",\"news\",\"bells\",\"wire\",\"song\",\"bushes\",\"distribution\",\"tank\",\"pan\",\"feast\",\"quince\",\"nerve\",\"hair\",\"wrench\",\"cats\",\"neck\",\"work\",\"sugar\",\"tramp\",\"ants\",\"house\",\"sidewalk\",\"afterthought\",\"orange\",\"finger\",\"earth\",\"decision\",\"edge\",\"chin\",\"shoe\",\"balloon\",\"desk\",\"chicken\",\"toad\",\"building\",\"yarn\",\"seashore\",\"star\",\"snow\",\"book\",\"song\",\"boys\",\"rainstorm\",\"spring\",\"secretary\",\"cork\",\"coach\",\"range\",\"dinosaurs\",\"produce\",\"bean\",\"downtown\",\"sleet\",\"egg\",\"arm\",\"home\",\"angle\",\"whip\",\"crayon\",\"iron\",\"parcel\",\"river\",\"potato\",\"shop\",\"leaf\",\"territory\",\"ear\",\"behavior\",\"cat\",\"monkey\",\"hair\",\"trains\",\"horses\",\"volcano\",\"waste\",\"dog\",\"juice\",\"peace\",\"end\",\"route\",\"whip\",\"blade\",\"giraffe\",\"grandfather\",\"celery\",\"grandmother\",\"spoon\",\"person\",\"yam\",\"screw\",\"top\",\"watch\",\"steam\",\"impulse\",\"map\",\"history\",\"pot\",\"frog\",\"bells\",\"quilt\",\"argument\",\"apparel\",\"wind\",\"cub\",\"wish\",\"sugar\",\"servant\",\"language\",\"sun\",\"cherries\",\"need\",\"order\",\"flower\",\"seat\",\"wheel\",\"army\",\"screw\",\"icicle\",\"coal\",\"hook\",\"act\",\"action\",\"cause\",\"pet\",\"school\",\"rest\",\"cows\",\"relation\",\"road\",\"talk\",\"burn\",\"brake\",\"crook\",\"sand\",\"journey\",\"crack\",\"spade\",\"song\",\"clouds\",\"quarter\",\"spade\",\"fifth\",\"flower\",\"structure\",\"finger\",\"pain\",\"corn\",\"cakes\",\"jeans\",\"wing\",\"shame\",\"field\",\"comb\",\"pump\",\"box\",\"stone\",\"industry\",\"swim\",\"sticks\",\"whip\",\"burn\",\"stove\",\"trouble\",\"scene\",\"library\",\"crown\",\"fork\",\"birth\",\"cast\",\"amusement\",\"mice\",\"cub\",\"houses\",\"loaf\",\"card\",\"rhythm\",\"downtown\",\"animal\",\"chairs\",\"respect\",\"cactus\",\"opinion\",\"thread\",\"aunt\",\"treatment\",\"shame\",\"tank\",\"spiders\",\"marble\",\"arm\",\"cemetery\",\"locket\",\"fact\",\"division\",\"holiday\",\"current\",\"humor\",\"thunder\",\"crack\",\"receipt\",\"sense\",\"moon\",\"kittens\",\"K\",\"vegetable\",\"smile\",\"cushion\",\"representative\",\"toy\",\"look\",\"crowd\",\"hands\",\"idea\",\"drug\",\"lace\",\"jeans\",\"net\",\"moon\",\"scarecrow\",\"learning\",\"dog\",\"debt\",\"knife\",\"hill\",\"sail\",\"pear\",\"organization\",\"meal\",\"knee\",\"disgust\",\"pet\",\"bag\",\"road\",\"garden\",\"smash\",\"money\",\"wealth\",\"crate\",\"end\",\"insect\",\"muscle\",\"exchange\",\"town\",\"stage\",\"pump\",\"size\",\"cat\",\"tray\",\"fog\",\"wall\",\"stage\",\"beetle\",\"start\",\"self\",\"side\",\"group\",\"porter\",\"theory\",\"bait\",\"afternoon\",\"leg\",\"wing\",\"earth\",\"breakfast\",\"account\",\"snails\",\"back\",\"dime\",\"bee\",\"cast\",\"town\",\"cent\",\"chicken\",\"stem\",\"garden\",\"slave\",\"meeting\",\"umbrella\",\"argument\",\"clouds\",\"partner\",\"ray\",\"stranger\",\"body\",\"trouble\",\"son\",\"produce\",\"scene\",\"mouth\",\"observation\",\"monkey\",\"friction\",\"desk\",\"hose\",\"powder\",\"pull\",\"sisters\",\"cobweb\",\"smell\",\"anger\",\"haircut\",\"wood\",\"lace\",\"garden\",\"slip\",\"liquid\",\"boat\",\"fly\",\"roof\",\"reason\",\"drawer\",\"tank\",\"farmer\",\"sink\",\"loaf\",\"nail\",\"head\",\"payment\",\"friction\",\"cause\",\"point\",\"shock\",\"breakfast\",\"spot\",\"rain\",\"aftermath\",\"discovery\",\"hen\",\"boys\",\"finger\",\"baseball\",\"body\",\"airplane\",\"wax\",\"rain\",\"hand\",\"behavior\",\"cannon\",\"brick\",\"guitar\",\"store\",\"trade\",\"invention\",\"bread\",\"shame\",\"guitar\",\"wood\",\"time\",\"room\",\"base\",\"arithmetic\",\"sand\",\"design\",\"rainstorm\",\"railway\",\"boot\",\"coal\",\"flesh\",\"airport\",\"string\",\"wing\",\"jail\",\"brother\",\"match\",\"quarter\",\"guide\",\"knowledge\",\"lead\",\"love\",\"popcorn\",\"answer\",\"amount\",\"representative\",\"list\",\"smash\",\"sun\",\"weight\",\"disease\",\"gold\",\"flag\",\"porter\",\"reading\",\"way\",\"stretch\",\"lettuce\",\"can\",\"fifth\",\"sweater\",\"chair\",\"face\",\"pain\",\"toothbrush\",\"land\",\"sort\",\"beggar\",\"morning\",\"tramp\",\"steel\",\"sack\",\"boot\",\"wool\",\"meeting\",\"summer\",\"skirt\",\"attraction\",\"chalk\",\"polish\",\"town\",\"meeting\",\"partner\",\"man\",\"cork\",\"lead\",\"girls\",\"request\",\"wind\",\"cracker\",\"poison\",\"north\",\"railway\",\"honey\",\"request\",\"riddle\",\"children\",\"rice\",\"limit\",\"sugar\",\"cover\",\"government\",\"car\",\"cows\",\"beast\",\"ray\",\"thing\",\"note\",\"writer\",\"breakfast\",\"songs\",\"income\",\"crowd\",\"fork\",\"scarf\",\"apples\",\"dinosaurs\",\"wire\",\"string\",\"zinc\",\"water\",\"needle\",\"number\",\"behavior\",\"friend\",\"bear\",\"umbrella\",\"fold\",\"wave\",\"sofa\",\"haircut\",\"tank\",\"window\",\"tongue\",\"apple\",\"muscle\",\"summer\",\"cakes\",\"trail\",\"laugh\",\"meal\",\"fish\",\"map\",\"egg\",\"watch\",\"story\",\"crayon\",\"nest\",\"dogs\",\"spark\",\"dog\",\"team\",\"rose\",\"clam\",\"beetle\",\"skin\",\"flame\",\"design\",\"voyage\",\"oatmeal\",\"lunchroom\",\"school\",\"engine\",\"room\",\"salt\",\"decision\",\"church\",\"snakes\",\"cable\",\"queen\",\"substance\",\"comb\",\"babies\",\"lead\",\"card\",\"pleasure\",\"creator\",\"wrench\",\"vessel\",\"unit\",\"cabbage\",\"afternoon\",\"linen\",\"songs\",\"ground\",\"monkey\",\"self\",\"beef\",\"crime\",\"thumb\",\"wilderness\",\"bread\",\"meeting\",\"lake\",\"faucet\",\"coast\",\"verse\",\"shelf\",\"cart\",\"men\",\"punishment\",\"debt\",\"arch\",\"lead\",\"cats\",\"servant\",\"burn\",\"scarecrow\",\"side\",\"butter\",\"comfort\",\"rate\",\"night\",\"offer\",\"fly\",\"battle\",\"wish\",\"respect\",\"trade\",\"sticks\",\"arithmetic\",\"anger\",\"relation\",\"van\",\"writer\",\"leg\",\"slip\",\"house\",\"appliance\",\"ray\",\"day\",\"lawyer\",\"camp\",\"hat\",\"station\",\"airplane\",\"color\",\"argument\",\"family\",\"thunder\",\"coast\",\"fairies\",\"street\",\"verse\",\"ants\",\"jeans\",\"jar\",\"bead\",\"development\",\"pancake\",\"clock\",\"honey\",\"hammer\",\"snakes\",\"run\",\"title\",\"sweater\",\"snail\",\"hose\",\"throat\",\"cushion\",\"list\",\"act\",\"wine\",\"pencil\",\"size\",\"wine\",\"shoe\",\"writing\",\"trains\",\"boot\",\"reaction\",\"father\",\"time\",\"office\",\"skate\",\"van\",\"maid\",\"bun\",\"queen\",\"distance\",\"fire\",\"pot\",\"smell\",\"interest\",\"summer\",\"morning\",\"kiss\",\"scarf\",\"point\",\"birthday\",\"idea\",\"babies\",\"copy\",\"blow\",\"space\",\"need\",\"produce\",\"pull\",\"bit\",\"control\",\"spy\",\"jewel\",\"statement\",\"horse\",\"change\",\"ice\",\"rail\",\"things\",\"force\",\"zinc\",\"yard\",\"title\",\"cook\",\"apparel\",\"lock\",\"representative\",\"copper\",\"stomach\",\"woman\",\"uncle\",\"test\",\"crowd\",\"opinion\",\"turn\",\"maid\",\"banana\",\"action\",\"beast\",\"mouth\",\"bucket\",\"lizards\",\"circle\",\"ear\",\"arithmetic\",\"frog\",\"foot\",\"growth\",\"legs\",\"belief\",\"mist\",\"pollution\",\"lock\",\"earth\",\"hair\",\"fruit\",\"rock\",\"rule\",\"quartz\",\"country\",\"lawyer\",\"division\",\"believe\",\"queen\",\"protest\",\"smell\",\"memory\",\"girl\",\"belief\",\"finger\",\"stranger\",\"trucks\",\"kick\",\"goat\",\"measure\",\"coach\",\"comb\",\"smell\",\"science\",\"word\",\"icicle\",\"beetle\",\"territory\",\"need\",\"nerve\",\"brain\",\"car\",\"chalk\",\"bike\",\"territory\",\"ink\",\"flavor\",\"sense\",\"adjustment\",\"number\",\"brother\",\"cloud\",\"wave\",\"class\",\"drop\",\"boys\",\"zipper\",\"whistle\",\"sweater\",\"hole\",\"party\",\"vest\",\"parcel\",\"punishment\",\"thought\",\"use\",\"finger\",\"cake\",\"slope\",\"ink\",\"K\",\"school\",\"bears\",\"trail\",\"flower\",\"bait\",\"lead\",\"girls\",\"shake\",\"sneeze\",\"quartz\",\"cream\",\"iron\",\"test\",\"territory\",\"substance\",\"boundary\",\"seashore\",\"jail\",\"run\",\"way\",\"engine\",\"goat\",\"company\",\"wing\",\"toothbrush\",\"whip\",\"cent\",\"rod\",\"lawyer\",\"stomach\",\"expert\",\"waste\",\"smoke\",\"soup\",\"shame\",\"band\",\"mailbox\",\"touch\",\"pollution\",\"twig\",\"blade\",\"brass\",\"governor\",\"uncle\",\"steam\",\"art\",\"sign\",\"door\",\"camp\",\"foot\",\"view\",\"list\",\"pan\",\"territory\",\"morning\",\"love\",\"wax\",\"mother\",\"cat\",\"circle\",\"chin\",\"hour\"];\r\nconst registry = new WeakMap();\r\n\r\nfunction setRegistryProperty(parent, key, value) {\r\n    var data = getRegistryProperty(parent);\r\n    data[key] = value;\r\n    registry.set(parent, data);\r\n}\r\n\r\nfunction getRegistryProperty(parent, key = null) {\r\n    return key ? registry.get(parent)[key] : registry.get(parent);\r\n}\r\n\r\nclass Vector extends Array {\r\n    constructor() {\r\n        super();\r\n        if([...arguments].length > 0) this.push(...arguments);\r\n        registry.set(this, {});\r\n    }\r\n    push(){\r\n        for(let i of [...arguments].flat(Infinity - 1)){\r\n            if(this.parse) super.push(this.parse(i));\r\n            else super.push(i);\r\n        }\r\n    }\r\n    /**\r\n     * Gets or sets the name of this vector. If the argument 'value' is empty, it returns the name of this vector (if set before). Otherwise the name of the vector is set and the vector itself is returned.\r\n     * @param {string} value Optional: name of the vector.\r\n     * @param {boolean} alwaysRetunSelf Default false. If set to true, will return the vector itself even if the name is blank.\r\n     * @returns Either name or the vector itself.\r\n     */\r\n    name(value, alwaysRetunSelf){\r\n        if(value) {\r\n            setRegistryProperty(this, \"name\", value);\r\n            return this;\r\n        } else {\r\n            if(alwaysRetunSelf) return this;\r\n            else return registry.get(this).name;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param  {...any} values An array or set of values delimited by comma.\r\n     * @returns {self}\r\n     */\r\n    reload(...values) {\r\n        return new this.constructor(...values).name(this.name());\r\n    }\r\n    /**\r\n     * \r\n     * @returns {this} This vector filtered from the null values.\r\n     */\r\n    removeEmpty() {\r\n        return new this.constructor(new Array(...this).filter(v => v !== null)).name(this.name(), true);\r\n    }\r\n    parent(value){\r\n        if(value) {\r\n            setRegistryProperty(this, \"parent\", value)\r\n            return this;\r\n        } else return registry.get(this).parent\r\n    }\r\n    set(key,value) {\r\n        setRegistryProperty(this, key,value);\r\n        return this;\r\n    }\r\n    get(key, alwaysReturnSelf = false){\r\n        return getRegistryProperty(this, key) || alwaysReturnSelf ? this : undefined;\r\n    }\r\n    /* Returns an object with this vector's values and attributes. */\r\n    serialize() {\r\n        var obj = {\r\n            values: this,\r\n            name: this.name(),\r\n            type: this.type()\r\n        };\r\n        return obj;\r\n    }\r\n    clone(flush = false) {\r\n        var _ = (flush ? new this.constructor() : new this.constructor(...this).name(this.name(), true));\r\n        _.name(this.name());\r\n        return _;\r\n    }\r\n    /**\r\n     * Removes the values from this vector.\r\n     */\r\n    flush() {\r\n        while (this.length > 0) {\r\n            this.pop();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n    * Instead of values, this method extracts indexes of values matching the filter (see @param) and return an array of indexes. \r\n    * @param {function} filter A function or a strong type filter type (string). Strong type filters: notempty, empty.\r\n    * @return {Array<integer>} Returns an array of indexes of values matching the given filter.\r\n    */\r\n    ifilter(filter = () => true) {\r\n\r\n        return new Array(...this).map(function(v, i){\r\n            if(filter(v)) return i;\r\n            else return -1;\r\n        }).filter(x => x > -1 );\r\n    }\r\n    \r\n    filterByIndex(...indexes) {\r\n        return new this.constructor(...this).filter((e,i) => [...indexes].indexOf(i) > -1).name(this.name(), true);\r\n    }\r\n    static deserialize(data) {\r\n        if(typeof data != \"object\") {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch(e) {\r\n                console.error(\"Failed to parse the vector data.\")\r\n                return null;\r\n            }\r\n        }\r\n        if([1,2,3].indexOf(data.type) < 0) throw new Error(\"Unknown vector type: \" + data.type);\r\n        else {\r\n            var vector = (data.type == 1 ? new NumericVector(...data.values) : data.type == 2 ? new StringVector(...data.values) : new BooleanVector(...data.values)).name(data.name);\r\n        }\r\n        return vector;\r\n    }\r\n    static listMethods() {\r\n        return models.map(m => m.name);\r\n    }\r\n    sample(size = 0) {\r\n        var clone = this.clone(true);\r\n        if(size <= 0) return clone;\r\n        else if(size < 1) size = this.length * size;\r\n        if(size > this.length) return clone;\r\n        else {\r\n            var indexes = Math.getRandomIndexes(this.length, size);\r\n            clone.push(...this.filter((v,i) => indexes.indexOf(i) > - 1));\r\n            return clone;\r\n        }\r\n    }\r\n    analyze(name) {\r\n        return new VectorAnalysis(name, this);\r\n    }\r\n    /**\r\n     * Converts the vector to a destinated type. Returns an error if failed. If type type arguments is equal to this vector's type value, returns itself.\r\n     * @param {integer} type The target type this vector should be converted to.\r\n     * @param {*} fn Optional: A function that converts the underlying data to the appropriate type.\r\n     * @returns {NumericVector | StringVector | BooleanVector} New converted vector or itself.\r\n     */\r\n    convert(type, fn) {\r\n        if(this.type() == type) return this;\r\n        else if(type == 1) {\r\n            if(!fn) fn = (v,i,a) => v;\r\n            return new NumericVector(...this.map(fn)).name(this.name());\r\n        }\r\n        else if(type == 2) {\r\n            if(!fn) fn = (v,i,a) => String(v);\r\n            return new StringVector(...this.map(fn)).name(this.name());\r\n        }\r\n        else if(type == 3) {\r\n            if(!fn) fn = (v,i,a) => v === null ? null : v ? true : false;\r\n            return new BooleanVector(...this.map(fn)).name(this.name());\r\n        } else throw new Error(`Unrecognized vector type: ${type}. Possible types: 1,2,3.`);\r\n    }\r\n    static register(model) {\r\n        models.push(model);\r\n        Vector.prototype[model.name] = function() {\r\n            var M = new VectorAnalysis(models[model.name], this);\r\n            return M.with(...arguments).run().result;\r\n        }\r\n        return this\r\n    }\r\n}\r\n\r\n/**\r\n* Whenever you need to make sure an instance is a vector or any of its extended children, call this property.\r\n*/\r\nVector.prototype.isVector = true;\r\n\r\nconst vectorParser = {\r\n    numeric: function(value) {\r\n        if(typeof value == \"string\") value = value.replace(/\\,/g, \".\").trim();\r\n        if(value === 0 || value === \"0\" || value === false) return 0;\r\n        else if(!value) return null;\r\n        else if(!isNaN(value)) return Number(value);\r\n        else throw new Error($(\"UyOj\", {value:value}));\r\n    },\r\n    string: function(value) {\r\n        if(value || value === false || value === 0) return String(value);\r\n        else return null;\r\n    },\r\n    boolean: function(value) {\r\n        if(value) return true;\r\n        else if(value === false || value === 0 || value === \"0\" || value === \"false\") return false;\r\n        else return null;\r\n    },\r\n    time: function(value) {\r\n        if(Date.isDate(value)) return value;\r\n        else if(Array.isArray(value)) {\r\n            var _ = new Date(...value);\r\n        }\r\n        if(isNaN(new Date(value).getTime())) throw new Error($(\"eZw1\", {value: value}));\r\n        else return new Date(value);\r\n    }\r\n}\r\n\r\n// #region VECTOR EXTENSIONS\r\n\r\nclass NumericVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"NumericVector\";\r\n        else return 1;\r\n    }\r\n    /**\r\n     * Generates a new numeric vector with 'total' randomly generated values ranging between 'min' and 'max' and with a 'nullprob' probability of null value occurrence.\r\n     * @param {object} config Eg. {min: -50, max: 200, total: 1000, nullprob: 0.1}\r\n     * @example var n = NumericVector.generate();\r\n     * @example var n = NumericVector.generate({total: 1000});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0, max: 200});\r\n     * @example var n = NumericVector.generate({total: 100, min: 0, nullprob: 0.5});\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        var min = isNaN(config.min) ? - Number.MAX_SAFE_INTEGER : Number(config.min) < - Number.MAX_SAFE_INTEGER ? - Number.MAX_SAFE_INTEGER : Number(config.min);\r\n        var max = isNaN(config.max) ? Number.MAX_SAFE_INTEGER : Number(config.max) > Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : Number(config.max);\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        if(max < min){\r\n            var _min = config.min;\r\n            var _max = config.max\r\n            min = _max;\r\n            max = _min\r\n        };\r\n        var decimal = Number(config.decimal) > 0 ? Math.floor(config.decimal) : 0;\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var _new = new NumericVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndNumber(min,max,decimal));\r\n            } else _new.push(Math.rndNumber(min,max,decimal));\r\n        }\r\n        return _new;\r\n    };\r\n}\r\nNumericVector.prototype.parse = vectorParser.numeric;\r\n\r\nclass StringVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"StringVector\";\r\n        else return 2;\r\n    }\r\n    /**\r\n     * Generates a string vector with 'total' of random text values selected from the 'list' of values. The list argument can be either an array of values or an integer. If the latter is provided, N values are randomly selected from a built-in list of nouns (max 1000 otems).\r\n     * @param {object} config Eg. {total: 500, list: [\"A\",\"B\",\"C\"]} or {total: 500, list: 5}\r\n     * @example var strings = StringVector.generate({list: [\"A\",\"B\", \"C\"], total: 100000, nullprob: 0.5})\r\n     * @example var strings = StringVector.generate({list: 4, total: 100000, nullprob: 0.2})\r\n     * @example var strings = StringVector.generate({list: 5, nullprob: 0.175})\r\n     * @example var strings = StringVector.generate({list: 5})\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        let list;\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        if(!isNaN(config.list)) {\r\n            list = Math.rndSelect(rndWordList, Number(config.list), false);\r\n        } else list = config.list;\r\n        var _new = new StringVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndSelectOne(list))\r\n            } else _new.push(Math.rndSelectOne(list));\r\n        }\r\n        return _new;\r\n    };\r\n}\r\nStringVector.prototype.parse = vectorParser.string;\r\n\r\nclass BooleanVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"BooleanVector\";\r\n        else return 3;\r\n    }\r\n    /**\r\n     * Generates a boolean vector with 'total' of random boolean (true/false) values.\r\n     * @param {object} config Eg. {total: 500} or {total: 500, nullprob: 0.25}\r\n     * @example var b = BooleanVector.generate({total: 10000, nullprob: 0.5});\r\n     * @example var b = BooleanVector.generate({total: 10000});\r\n     * @example var b = BooleanVector.generate({});\r\n     * @example var b = BooleanVector.generate();\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        let list = [true, false];\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        var _new = new BooleanVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndSelectOne(list))\r\n            } else _new.push(Math.rndSelectOne(list))\r\n        }\r\n        return _new;\r\n    };\r\n}\r\nBooleanVector.prototype.parse = vectorParser.boolean;\r\n\r\nclass TimeVector extends Vector {\r\n    constructor(){\r\n        super(...arguments);\r\n    }\r\n    /**\r\n     * Returns the type of this vector, either as an enumeration (integer) or as a class name.\r\n     * @param {boolean} verbose If the argument is true, it returns the full class name of the vector (eg NominalVector). Otherwise, it returns an enumeration (eg 3).\r\n     * @returns {number | string} Returns the type of this vector.\r\n     */\r\n    type(verbose) {\r\n        if(verbose) return \"TimeVector\";\r\n        else return 4;\r\n    }\r\n    /**\r\n     * Generates a new time vector with 'total' randomly generated values ranging between 'min' and 'max' and with a 'nullprob' probability of null value occurrence.\r\n     * @param {object} config Eg. {min: -50, max: 200, total: 1000, nullprob: 0.1}\r\n     * @example var n = NumericVector.generate();\r\n     * @example var n = NumericVector.generate({total: 1000});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0});\r\n     * @example var n = NumericVector.generate({total: 1000, min: 0, max: 200});\r\n     * @example var n = NumericVector.generate({total: 100, min: 0, nullprob: 0.5});\r\n     * Returns a new instance of the vector with random values.\r\n     */\r\n    static generate(config = {}) {\r\n        var min = isNaN(config.min) ? - Number.MAX_SAFE_INTEGER : Number(config.min) < - Number.MAX_SAFE_INTEGER ? - Number.MAX_SAFE_INTEGER : Number(config.min);\r\n        var max = isNaN(config.max) ? Number.MAX_SAFE_INTEGER : Number(config.max) > Number.MAX_SAFE_INTEGER ? Number.MAX_SAFE_INTEGER : Number(config.max);\r\n        var nullprob = Number(config.nullprob) > 0 ? Number(config.nullprob) > 1 ? 1 : Number(config.nullprob) : 0;\r\n        if(max < min){\r\n            var _min = config.min;\r\n            var _max = config.max\r\n            min = _max;\r\n            max = _min\r\n        };\r\n        var decimal = Number(config.decimal) > 0 ? Math.floor(config.decimal) : 0;\r\n        var total = Number(config.total) > 0 ? Number(config.total) : 100;\r\n        var _new = new NumericVector();\r\n        for(var i = 0; i < total; i++) {\r\n            if(nullprob > 0) {\r\n                if(Math.random() <= nullprob) {\r\n                    _new.push(null);\r\n                } else _new.push(Math.rndNumber(min,max,decimal));\r\n            } else _new.push(Math.rndNumber(min,max,decimal));\r\n        }\r\n        return _new;\r\n    };\r\n    /**\r\n     * \r\n     * @returns Array<Number> Returns an array of years.\r\n     */\r\n    toYear() {\r\n        return this.map(i => i.getYear());\r\n    }\r\n    toMonth() {\r\n        return this.map(i => i.getMonth())\r\n    }\r\n    explode(level = Infinity) {\r\n\r\n    }\r\n}\r\nTimeVector.prototype.parse = vectorParser.time;\r\n\r\n/**\r\n * @obsolete\r\n * @returns \r\n */\r\nArray.prototype.numerify = function(){\r\n    return new NumericVector(...this);\r\n}\r\n\r\nArray.prototype.stringify = function(){\r\n    return new StringVector(...this);\r\n}\r\n\r\nArray.prototype.boolify = function(){\r\n    return new BooleanVector(...this);\r\n}\r\n\r\nArray.prototype.timefy = function(){\r\n    return new TimeVector(...this);\r\n}\r\n\r\nArray.prototype.vectorify = function() {\r\n    if(this.find(v => v !== true && v !==false && v !== null))\r\n    {\r\n        try {\r\n            return new NumericVector(...this)\r\n        } catch (e) {\r\n            return new StringVector(...this);\r\n        }\r\n    } else return new BooleanVector(...this);\r\n}\r\n\r\n// #endregion\r\n\r\nconst preprocessors = {\r\n    removeEmpty: {\r\n        title: \"8nQf\",\r\n        fn: function(_){\r\n            _.sample.raw = _.parent.length;\r\n            _.parent = _.parent.removeEmpty();\r\n            _.sample.net = _.parent.length;\r\n        }\r\n    }\r\n}\r\n\r\nconst models = [\r\n    {   name: \"sum\",\r\n        fn: Array.prototype.sum,\r\n        wiki: {\r\n            title: \"gvdg\",\r\n            description: \"iMbD\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Addition\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\"\r\n    },    \r\n    {   name: \"count\",\r\n        fn: Array.prototype.count,\r\n        wiki: {\r\n            title: \"tdrm\",\r\n            description: \"ULJX\"\r\n        },\r\n        type: [1,2,3],\r\n        output: \"uint\",\r\n    },\r\n    {   name: \"avg\",\r\n        fn: Array.prototype.avg,\r\n        wiki: {\r\n            title: \"rR94\",\r\n            description: \"UYJN\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Arithmetic_mean\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n    },\r\n    {   name: \"stdev\",\r\n        fn: Array.prototype.stdev,\r\n        wiki: {\r\n            title: \"oUcc\",\r\n            description: \"ZgSc\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Standard_deviation\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n        args: {\r\n            isSample: {\r\n                model: \"boolean\",\r\n                config: {\r\n                    name: \"isSample\",\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\",\r\n                    required: false,\r\n                    default: false\r\n                }\r\n            }\r\n        },\r\n    },\r\n    {   name: \"variance\",\r\n        fn: Array.prototype.variance,\r\n        wiki: {\r\n            title: \"TvQv\",\r\n            description: \"sfCh\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Variance\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n        args: {\r\n            isSample: {\r\n                model: \"boolean\",\r\n                config: {\r\n                    name: \"isSample\",\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\",\r\n                    required: false,\r\n                    default: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"histogram\",\r\n        fn: Array.prototype.histogram,\r\n        wiki: {\r\n            title: \"PAwR\",\r\n            description: \"AISp\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Histogram\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"histogram\",\r\n        args: {\r\n            max: {\r\n                model: \"positiveInteger\",\r\n                config: {\r\n                    name: \"max\",\r\n                    title: \"WnZK\",\r\n                    description: \"mcOp\",\r\n                    required: false,\r\n                    default: undefined\r\n                }\r\n            },\r\n            fix: {\r\n                model: \"positiveDecimal\",\r\n                config: {\r\n                    name: \"fix\",\r\n                    title: \"Mnfn\",\r\n                    description: \"yOuB\",\r\n                    required: false,\r\n                    default: undefined\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"min\",\r\n        fn: Array.prototype.min,\r\n        wiki: {\r\n            title: \"FkaD\",\r\n            description: \"yBlA\",\r\n            preprocessor: preprocessors.removeEmpty.title\r\n        },\r\n        output: \"any\",\r\n        type: [1,2,3],\r\n        prepare: preprocessors.removeEmpty.fn\r\n    },\r\n    {   name: \"max\",\r\n        fn: Array.prototype.max,\r\n        wiki: {\r\n            title: \"nKuF\",\r\n            description: \"gkep\",\r\n            preprocessor: preprocessors.removeEmpty.title\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1,2,3],\r\n        output: \"any\",\r\n    },\r\n    {   name: \"range\",\r\n        fn: Array.prototype.range,\r\n        wiki: {\r\n            title: \"mXxJ\",\r\n            description: \"dnzB\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Range_(statistics)\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\"        \r\n    },\r\n    {   name: \"varc\",\r\n        fn: Array.prototype.varc,\r\n        wiki: {\r\n            title: \"uwpU\",\r\n            description: \"fUpj\",\r\n            prepare: preprocessors.removeEmpty.fn,\r\n            url: \"https://en.wikipedia.org/wiki/Coefficient_of_variation\"\r\n        },\r\n        type: [1],\r\n        output: \"percent\",\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        args: {\r\n            isSample: {\r\n                model: \"boolean\",\r\n                config: {\r\n                    name: \"isSample\",\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\",\r\n                    required: false,\r\n                    default: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"percentile\",\r\n        fn: Array.prototype.percentile,\r\n        wiki: {\r\n            title: \"fPra\",\r\n            description: \"yNbM\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Percentile\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n        args: {\r\n            k: {\r\n                model: \"zeroToOneInc\",\r\n                config: {\r\n                    name: \"k\",\r\n                    title: \"dBDt\",\r\n                    description: \"GQpQ\",\r\n                    required: true\r\n                }\r\n            }\r\n        },\r\n    },\r\n    {   name: \"frequency\",\r\n        fn: Array.prototype.frequency,\r\n        wiki: {\r\n            title: \"dYJK\",\r\n            description: \"Tzyp\"\r\n        },\r\n        type: [1,2,3],\r\n        output: \"frequency\",\r\n        args: {\r\n            order: {\r\n                model: \"frequencyOrder\",\r\n                config: {\r\n                    name: \"order\",\r\n                    title: \"gZCx\",\r\n                    description: \"MgID\",\r\n                    required: false,\r\n                    default: 1\r\n                }\r\n            }\r\n        },\r\n        url: \"https://en.wikipedia.org/wiki/Frequency_(statistics)\"\r\n    },\r\n    {   name: \"geomean\",\r\n        fn: Array.prototype.geomean,\r\n        wiki: {\r\n            title: \"eFdj\",\r\n            description: \"PDzr\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Geometric_mean\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n    },\r\n    {   name: \"harmean\",\r\n        fn: Array.prototype.harmean,\r\n        wiki: {\r\n            title: \"iuTi\",\r\n            description: \"nhJv\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Harmonic_mean\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n        \r\n    },\r\n    {   name: \"median\",\r\n        fn: Array.prototype.median,\r\n        wiki: {\r\n            title: \"Qyba\",\r\n            description: \"YIir\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Median\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n    },\r\n    {   name: \"mode\",\r\n        fn: Array.prototype.mode,\r\n        wiki: {\r\n            title: \"StQx\",\r\n            description: \"IBfx\",\r\n            url: \"https://en.wikipedia.org/wiki/Mode_(statistics)\"\r\n        },\r\n        type: [1,2,3],\r\n        output: \"any\"\r\n    },\r\n    {   name: \"sem\",\r\n        fn: Array.prototype.SEM,\r\n        wiki: {\r\n            title: \"dLmV\",\r\n            description: \"ZBnI\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Standard_error#Standard_error_of_the_sample_mean\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n    },\r\n    {   name: \"skewness\",\r\n        fn: Array.prototype.skewness,\r\n        wiki: {\r\n            title: \"KZgI\",\r\n            description: \"nJbe\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Skewness\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n        args: {\r\n            isSample: {\r\n                model: \"boolean\",\r\n                config: {\r\n                    name: \"isSample\",\r\n                    title: \"eJTq\",\r\n                    description: \"FfpU\",\r\n                    required: false,\r\n                    default: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"kurtosis\",\r\n        fn: Array.prototype.kurtosis,\r\n        wiki: {\r\n            title: \"oPPx\",\r\n            description: \"UOBG\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Kurtosis\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"number\",\r\n    },\r\n    {   name: \"ttest\",\r\n        fn: Array.prototype.ttest,\r\n        wiki: {\r\n            title: \"VEAt\",\r\n            description: \"rbjM\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"ttest\",\r\n        args: {\r\n            populationMean: {\r\n                model: \"number\",\r\n                config: {\r\n                    name: \"populationMean\",\r\n                    title: \"GRoZ\",\r\n                    description: \"xtfz\",\r\n                    required: true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {   name: \"mci\",\r\n        fn: Array.prototype.mci,\r\n        wiki: {\r\n            title: \"yHjW\",\r\n            description: \"DDpa\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Confidence_interval\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"mci\",\r\n        args: {\r\n            alpha: {\r\n                model: \"zeroToOneInc\",\r\n                config: {\r\n                    name: \"alpha\",\r\n                    title: \"lFlm\",\r\n                    description: \"SMbe\",\r\n                    required: false,\r\n                    default: 0.95\r\n                }\r\n            }\r\n        },\r\n    },\r\n    {   name: \"pci\",\r\n        fn: Array.prototype.pci,\r\n        wiki: {\r\n            title: \"ZhjW\",\r\n            description: \"KLpa\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Confidence_interval\"\r\n        },\r\n        type: [1,2,3],\r\n        output: \"pci\",\r\n        args: {\r\n            value: {\r\n                model: \"any\",\r\n                config: {\r\n                    name: \"value\",\r\n                    title: \"obxp\",\r\n                    description: \"QOvf\",\r\n                    required: true\r\n                }\r\n            },\r\n            alpha: {\r\n                model: \"zeroToOneInc\",\r\n                config: {\r\n                    name: \"alpha\",\r\n                    title: \"lFlm\",\r\n                    description: \"SMbe\",\r\n                    required: false,\r\n                    default: 0.95\r\n                }\r\n            }\r\n        },\r\n    },    \r\n    {   name: \"swtest\",\r\n        fn: Array.prototype.shapirowilk,\r\n        wiki: {\r\n            title: \"byTa\",\r\n            description: \"LHkd\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Shapiro%E2%80%93Wilk_test\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        unstable: true,\r\n        type: [1],\r\n        output: \"shapirowilk\",\r\n    },\r\n    {   name: \"kstest\",\r\n        fn: Array.prototype.kolmogorovSmirnovTest,\r\n        wiki: {\r\n            title: \"DLoe\",\r\n            description: \"yQZd\",\r\n            preprocessor: preprocessors.removeEmpty.title,\r\n            url: \"https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test#One-sample_Kolmogorov%E2%80%93Smirnov_statistic\"\r\n        },\r\n        prepare: preprocessors.removeEmpty.fn,\r\n        type: [1],\r\n        output: \"kstest\",\r\n        unstable: true   \r\n    }\r\n]\r\n\r\nlet {Argument} = (require(\"./argument\"));\r\nlet {Output} = require(\"./output\");\r\n\r\nclass VectorAnalysis {\r\n    constructor(model, parent = null) {\r\n        if(parent) this.parent = parent?.isVector ? parent : null;\r\n        if(typeof model == \"string\") {            \r\n            if(!models.find(m => model == m.name)) throw new Error($(\"j0tB\", {name: model}));\r\n            else model = models.find(m => model == m.name);\r\n        } \r\n        else if(typeof model == \"object\") model = model;\r\n        else throw new Error(\"Unknown VectorAnalysis model parameter type.\");\r\n        Object.defineProperty(this, \"model\", {\r\n            readonly: true,\r\n            value: model\r\n        })\r\n        Object.defineProperty(this, \"args\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"sample\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            readonly: true,\r\n            value: this.model.name\r\n        });\r\n        Object.defineProperty(this, \"time\", {\r\n            readonly: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"outputSchema\", {\r\n            readonly: true,\r\n            value: this.model.output ? new Output(this.model.output) : null\r\n        });\r\n        Object.defineProperty(this, \"unstable\", {\r\n            readonly: true,\r\n            value: !!this.model.unstable\r\n        });\r\n        /* Returns an object or an array of Argument instances based on the model args config. If the instance already inclides user defined arguments, it appends them as a 'value' property. */\r\n        Object.defineProperty(this, \"parameters\", {\r\n            readonly: true,\r\n            value: function(asObject) {\r\n                var _ = asObject ? {} : [];\r\n                for(let k of Object.keys(this.model.args)) {\r\n                    var a = new Argument(this.model.args[k].model, this.parent || null, this.model.args[k].config);\r\n                    if(this.args[k]) a.value = this.args[k];\r\n                    else a.value = a.default;\r\n                    if(!asObject) a.name = k;\r\n                    (asObject) ? _[k] = a : _.push(a);\r\n                };\r\n                return _;\r\n            }\r\n        });\r\n        for(let w of [\"title\",\"description\",\"preprocessor\"]) {\r\n            Object.defineProperty(this, w, {\r\n                readonly: true,\r\n                value: {\r\n                    key: this.model.wiki[w] || null,\r\n                    value: this.model.wiki[w] ? $(this.model.wiki[w]) : null\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * The 'with' methods allows specifying the MatrixAnalysis arguments, either as a named object with properties or as a set of parameter arguments.\r\n     * @returns {self}\r\n     */\r\n    with() {\r\n        if(!Argument) Argument = require(\"./argument\").Argument;\r\n        if(this.model.args ? Object.keys(this.model.args).length == 0: true) {\r\n            return this;\r\n        }\r\n        /** named config (object) */\r\n        else if(typeof arguments[0] == \"object\" && !Array.isArray(arguments[0]) ? arguments[0] ? Object.keys(arguments[0]).length > 0 : false : false) {\r\n            var parameters = arguments[0];\r\n            for(let key of Object.keys(this.model.args)) {\r\n                var arg = this.model.args[key];\r\n                if(!arg) throw new Error($(\"EFfS\", {name: key, method: $(this.model.wiki.title)}));\r\n                else {\r\n                    arg = new Argument(arg.model, this.parent, arg.config || {});\r\n                    this.args[key] = arg.validate(parameters[key]);\r\n                }\r\n            }\r\n            return this;\r\n        } else {\r\n            for(let ai = 0; ai < Object.keys(this.model.args).length; ai++) {\r\n                //if(ai > Object.keys(this.model.args)) break;\r\n                var arg = new Argument(this.model.args[Object.keys(this.model.args)[ai]].model, this.parent, this.model.args[Object.keys(this.model.args)[ai]].config || {});                \r\n                this.args[Object.keys(this.model.args)[ai]] = arg.validate([...arguments][ai]);\r\n            }\r\n            return this;\r\n        }        \r\n    }\r\n    /**\r\n     * Runs the \r\n     * @param {*} config No imployed yet.\r\n     * @returns {self}\r\n     */\r\n    prepare(){\r\n        if(!this.parent) throw new Error($(\"PtZB\"));\r\n        if(this.model.prepare) this.model.prepare(this);\r\n        return this;\r\n    }\r\n    /**\r\n     * Call the calculation function and returns either the VectorAnalysis instance with the result property storing the result or the result itself (see params). If either input preparation or validation has not been called before, it is automatically called.\r\n     * @param {boolean} returnSelf If true, the VectorAnalysis is returned, with the result property storing the calculation result. Otherwise the result is returned. Default true.\r\n     * @returns {self | any}\r\n     */\r\n    run() {\r\n        this.time.from = new Date();\r\n        if(!this.parent) throw new Error($(\"PtZB\"));\r\n        if([...arguments].length > 0) this.with(...arguments);\r\n        this.prepare();        \r\n        var args = Object.entries(this.args).map(e => e[1]);\r\n        this.result = this.model.fn.call(new Array(...this.parent), ...args);\r\n        this.time.to = new Date();\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns duration of the \"run\" method (whatever it includes inside) in milliseconds.\r\n     */\r\n    duration() {\r\n        if(this.time.from && this.time.to) return this.time.to.getTime() - this.time.from.getTime();\r\n        else return null;\r\n    }\r\n}\r\n\r\nmodels.forEach(function(m) {\r\n    Vector.prototype[m.name] = function() {\r\n        var M = new VectorAnalysis(m, this);\r\n        return M.with(...arguments).run().result;\r\n    };\r\n});\r\n\r\nmodule.exports = {\r\n    Vector: Vector,\r\n    NumericVector: NumericVector,\r\n    StringVector: StringVector,\r\n    BooleanVector: BooleanVector,\r\n    VectorAnalysis: VectorAnalysis,\r\n}","module.exports = {\n\t\"0000\": \"prázdný text\",\n\t\"0001\": \"neznámá hodnota lokálního kódu: ${value}\",\n\t\"gvdg\": \"součet\",\n\t\"iMbD\": \"Stanoví součet všech neprázdných číselných hodnot vektoru.\",\n\t\"tdrm\": \"počet\",\n\t\"ULJX\": \"Stanoví počet všech členů vektorů, včetně prázdných hodnot.\",\n\t\"eFdj\": \"geometrický průměr\",\n\t\"PDzr\": \"Geometrický průměr je charakteristika, která se počítá jako n-tá odmocnina součinu n čísel v sadě. Používá se pro výpočet tempa růstu, protože zohledňuje změny v procentuálním růstu hodnot v průběhu času. Dále se používá v geometrii pro výpočet průměrné délky strany n-úhelníku a v biologii pro výpočet průměrné velikosti buněk nebo organismů v populaci.\",\n\t\"iuTi\": \"harmonický průměr\",\n\t\"nhJv\": \"Harmonický průměr je charakteristika, která se počítá jako podíl počtu čísel v sadě a součtu jejich převrácených hodnot. Harmonický průměr se používá v situacích, kdy je důležité zohlednit, jak se rychlost nebo výkon mění v průběhu času nebo v různých situacích. Například se používá k výpočtu průměrné rychlosti, průměrného výkonu nebo průměrného odporu v elektronických obvodech. Také se používá v oblasti finance pro výpočet průměrného výnosu z investic v různých časových obdobích.\",\n\t\"KZgI\": \"šikmost\",\n\t\"nJbe\": \"Stanoví koeficient šikmosti, tedy asymetrii rozdělení kolem střední hodnoty vektoru.\",\n\t\"oPPx\": \"špičatost\",\n\t\"UOBG\": \"Stanoví hodnotu excesu množiny dat. Ve statistice špičatost (kurtosis) označuje míru, jak moc se hodnoty liší od průměrné hodnoty. Špičatost se obvykle počítá pro křivku rozdělení dat, která je grafickým zobrazením rozložení hodnot v dané sbírce dat.\\nExistují dva základní typy špičatosti: platykurtóza a leptokurtóza. Platykurtóza se vyskytuje, když hodnoty vektoru jsou rozloženy víceméně rovnoměrně kolem průměrné hodnoty. Toto rozložení se projevuje jako křivka rozdělení tvaru písmene U, která má plochý vrchol. Naopak leptokurtóza se vyskytuje, když jsou hodnoty rozloženy s výraznou odchylkou od průměrné hodnoty. Toto rozložení se projevuje jako křivka rozdělení tvaru 'písmene špičatého kopce' nebo 'písmene špičatého údolí'.\\nŠpičatost se používá k určení, zda je rozložení hodnot v sbírce dat víceméně rovnoměrné, nebo zda existují nějaké výrazné odchylky od průměrné hodnoty. Špičatost se často používá spolu s dalšími metrikami, jako je medián, šikmost a kvantily, které pomohou lépe porozumět rozložení dat a určit, zda existují nějaké výrazné odchylky od průměrné hodnoty.\",\n\t\"fPra\": \"kvantil\",\n\t\"yNbM\": \"Pomocí kvantilu můžeme zkoumat rozdělení numerické řady, a to tak, že řadu nejprve seřadíme od nejmenšího po největšího člena (číslo), a následně vybereme první N % členů (toto N je parametrem), kdy poslední člen ve výběru představuje daný percentil, konkrétní číslo. Pokud je počet členů ve výběru sudý, počítá se percentil jako průměr z dvou sousedících hodnot, pokud je lichý, percentilem je právě poslední hodnota.\",\n\t\"dBDt\": \"hodnota kvantilu\",\n\t\"GQpQ\": \"Hodnota kvantilu z uzavřeného intervalu mezi 0 a 1 včetně. Př. 0 = minimální hodnota, 0.25 = první kvartil, 0.5 = medián, 1 = maximum apod.\",\n\t\"Qyba\": \"medián\",\n\t\"YIir\": \"Stanoví medián neboli prostřední hodnotu z neprázdných hodnot vektoru. Jedná se o 50% kvantil.\",\n\t\"StQx\": \"modus\",\n\t\"IBfx\": \"Stanoví nejčastější hodnotu ve vektoru (pokud je nejčastější prázdná hodnota, stanoví prázdnou hodnotu). Pokud je nejčastějších hodnot více (např. četnost hodnot X  a Y je shodná), určí tu hodnotu, kterou ve vektoru nalezne jako první.\",\n\t\"rR94\": \"aritmetický průměr\",\n\t\"UYJN\": \"Stanoví aritmetický průměr (tedy podíl součtu a počtu hodnot vektoru) ze všech neprázdných hodnot (tedy včetně nul).\",\n\t\"oUcc\": \"směrodatná odchylka\",\n\t\"ZgSc\": \"Stanoví směrodatnou odchylku neprázdných hodnot. Směrodatná odchylka je statistický ukazatel, který udává, jak moc se hodnoty v daném souboru dat od sebe liší. Čím je směrodatná odchylka větší, tím více se hodnoty v daném souboru dat od sebe liší.\",\n\t\"eJTq\": \"výběrový soubor\",\n\t\"FfpU\": \"Určuje, zdali se jedná o výběrový soubor. Nabývá hodnot pravda (jedná se o výběrový sobour) nebo nepravda (jedná se o základní soubor)\",\n\t\"FkaD\": \"minimum\",\n\t\"yBlA\": \"Stanoví nejnižší hodnotu z neprázdných hodnot.\",\n\t\"nKuF\": \"maximum\",\n\t\"gkep\": \"Stanoví nejvyšší hodnotu z neprázdných hodnot.\",\n\t\"TvQv\": \"rozptyl\",\n\t\"sfCh\": \"Stanoví hodnotu rozptylu tohoto vektoru.\",\n\t\"PAwR\": \"histogram\",\n\t\"AISp\": \"Stanoví matici histogramu daného vektoru. Metodu lze volit s upřesněním parametrů nebo i bez nich. Pokud není upřesněn parametr 'maximální počet intervalů' (maxIntervals), je jeho hodnota automaticky vypočítána jako variační rozpětí/odmocnina z počtu prvků. Pokud je uveden parametr 'pevná velikost intervalu' (fixedInterval), je brána tato hodnota jako rozhodující pro počet intervalů. Obě dvě hodnoty nejsou slučitelné (ačkoliv nevrací chybu), při zadání obou dvou je jako prioritní brán parametr maxIntervals.\",\n\t\"WnZK\": \"maximální počet intervalů\",\n\t\"mcOp\": \"Určí maximální počet intervalů, který může metoda vygenerovat. Argument je vhodné zvolit tehdy, kdy máme příliš mnoho případů ve vektoru a standardní způsob výpočtu velikosti intervalu vede k příliš vysokému množství kategorií.\",\n\t\"Mnfn\": \"pevná velikost intervalu\",\n\t\"yOuB\": \"Určí velikost intervalu, podle které pak metoda klasifikuje případy. Argument je vhodné zvolit tehdy, kdy máme příliš mnoho případů ve vektoru a standardní způsob výpočtu velikosti intervalu vede k příliš vysokému množství kategorií.\",\n\t\"mXxJ\": \"variační rozpětí\",\n\t\"dnzB\": \"Stanoví hodnotu variačního rozpětí.\",\n\t\"uwpU\": \"variační koeficient\",\n\t\"fUpj\": \"Variační koeficient (také nazývaný relativní rozptyl) je statistický ukazatel, který měří míru variability nebo rozptýlení dat vzhledem k jejich střední hodnotě. Je to bezrozměrná míra variability, která umožňuje porovnávat rozptyl různých souborů dat bez ohledu na jednotky, ve kterých jsou data vyjádřena. Variační koeficient se počítá jako poměr směrodatné odchylky (sigma) a střední hodnoty (x) v sadě dat, násobený 100 pro vyjádření v procentech. okud je variační koeficient nízký, znamená to, že data jsou poměrně homogenní nebo málo rozptýlená vzhledem k průměru. Pokud je naopak vysoký, znamená to, že data jsou velmi různorodá nebo se výrazně liší od průměru. Variační koeficient se používá především k porovnávání variability mezi různými soubory dat. Například se často používá v biologii, medicíně, ekonomii, psychologii a sociologii pro měření variability různých populací nebo skupin.\",\n\t\"dYJK\": \"tabulka četností\",\n\t\"Tzyp\": \"Stanoví tabulku četností jednotlivých variant a jejich výskyt.\",\n\t\"gZCx\": \"způsob řazení dat tabulky\",\n\t\"MgID\": \"Specifikuje, podle jakého klíče se mají data ve výstupní tabulce seřadit. Je možno vybrat jeden ze čtyř způsobů (max-min, min-max, A-Z, Z-A), přičemž defaultní řazení je podle četnosti od největší po nejmenší.\",\n\t\"AUbD\": \"dle četnosti sestupně (max-min)\",\n\t\"WSJH\": \"dle četnosti vzestupně (min-max)\",\n\t\"dkxz\": \"dle hodnoty vzestupně (A-Z)\",\n\t\"vJCU\": \"dle hodnoty sestupně (Z-A)\",\n\t\"dLmV\": \"střední chyba průměru\",\n\t\"ZBnI\": \"Stanoví hodnotu směrodatné chyby odhadu průměru. Směrodatná chyba průměru (anglicky 'standard error of the mean', odtud zkratka SEM) je statistická míra variability výběrového průměru odhadovaného parametru v celé populaci. Jedná se o odhad standardní odchylky průměru výběrového souboru. Střední chyba průměru se vypočítá jako poměr odhadované standardní odchylky výběrového průměru k odmocnině z velikosti výběru. Čím větší je velikost výběru, tím menší je střední chyba průměru, což znamená, že odhad výběrového průměru je přesnější a blíže se shoduje s průměrem celé populace. Střední chyba průměru je užitečná pro odhadování intervalů spolehlivosti výběrového průměru, což umožňuje určit, jak přesně odhaduje průměr populace.\",\n\t\"VEAt\": \"jednovýběrový t-test\",\n\t\"rbjM\": \"Stanoví statistický protokol pro jednovýběrový t-test při zadání populačního průměru.\",\n\t\"GRoZ\": \"populační průměr\",\n\t\"xtfz\": \"Předplokládaná hodnota populačního průměru.\",\n\t\"yHjW\": \"interval spolehlivosti pro střední hodnotu\",\n\t\"DDpa\": \"Stanoví statistický protokol odhadu intervalu spolehlivosti pro střední hodnotu při dané úrovni spolehlivosti. Pokud je počet případů menší než 30 (a výběr pochází z normálního rozdělení), je použito Studentovo T-rozdělení. V dalších případech je použito standardizované normální rozdělení.\",\n\t\"lFlm\": \"hladina významnosti\",\n\t\"SMbe\": \"Hodnota hladiny významnosti, na které se testuje. Pokud je počet případů menší než 30 (a výběr pochází z normálního rozdělení), je použito Studentovo T-rozdělení. V dalších případech je použito standardizované normální rozdělení.\",\n\t\"ZhjW\": \"interval spolehlivosti podílu\",\n\t\"KLpa\": \"Stanoví statistický protokol odhadu intervalu spolehlivosti podílu výběrového souboru při určité úrovni spolehlivosti.\",\n\t\"obxp\": \"hledaná hodnota\",\n\t\"QOvf\": \"Hodnota, jejíž podíl v rámci vektoru má být vypočten. Může se jednat o libovolnou hodnotu, měla by ovšem splňovat kritéria faktoru (např. u nominálního vektoru text apod.).\",\n\t\"byTa\": \"Shapirův-Wilkův W test\",\n\t\"LHkd\": \"Stanoví statistický protokol Shapiro-Wilkova W testu normality rozdělení hodnot vektoru. Shapiro-Wilk test je statistický test, který se používá k testování hypotézy, že data pocházejí z normálního rozdělení. Tento test je často používán k ověření normality dat v rámci statistické analýzy. Test Shapiro-Wilk se zakládá na porovnání hodnoty kvartilů dat s hodnotami kvartilů normálního rozdělení. Když jsou hodnoty kvartilů dat podobné hodnotám kvartilů normálního rozdělení, je pravděpodobné, že data pocházejí z normálního rozdělení. V opačném případě je pravděpodobné, že data nejsou normální. Při použití testu Shapiro-Wilk je třeba si uvědomit, že tento test má nízkou citlivost pro velké vzorky, tj. pro velké vzorky může být test méně spolehlivý při detekci ne-normality. Proto se pro velké vzorky často používají jiné testy normality, jako například test Anderson-Darling nebo test Kolmogorov-Smirnov.\",\n\t\"AgIP\": \"Pro výpočet hodnoty W Shapiro-Wilkova testu je potřeba více případů (minimálně 3).\",\n\t\"zxmM\": \"Rozpětí hodnot je příliš malé: ${range}\",\n\t\"TSCM\": \"Rozpětí hodnot je příliš velké: ${range}\",\n\t\"yhzq\": \"Příliš mnoho hodnot ve vektoru (přes 5000).\",\n\t\"DLoe\": \"Kolmogorov-Smirnovův test\",\n\t\"yQZd\": \"Stanoví statistický protokol Komogorov-Smirnovova testu normality rozdělení hodnot vektoru. Aktuálně nepočítá hladinu významnosti testu. Kolmogorov-Smirnov test (často také zkracovaný jako K-S test) je statistický test, který se používá k testování hypotézy, že data pocházejí z určitého rozdělení. Tento test porovnává rozdělení dat s teoretickým rozdělením, které se předpokládá, že data vycházejí, a vyhodnocuje, zda jsou datové hodnoty s teoretickým rozdělením dostatečně blízko, aby se mohla hypotéza o tom, že data pocházejí z daného rozdělení, považovat za pravdivou.Test Kolmogorov-Smirnov se často používá k ověření normality dat, ale může být také použit k ověření, zda data pocházejí z jiného teoretického rozdělení, jako je například exponenciální nebo binomické rozdělení. Test Kolmogorov-Smirnov je obecně považován za jeden z nejpřesnějších testů normality, ale má omezenou citlivost pro malé vzorky, tj. pro malé vzorky může být méně spolehlivý při detekci ne-normality. Pro malé vzorky se proto často používají jiné testy normality, jako například test Shapiro-Wilk nebo test Anderson-Darling.\",\n\t\"sDgR\": \"p-hodnota\",\n\t\"cBNP\": \"hodnota testového kritéria daného t-testu\",\n\t\"OYQu\": \"stupně volnosti\",\n\t\"pelN\": \"číslo\",\n\t\"FxzE\": \"jakýkoliv typ hodnoty\",\n\t\"DQnl\": \"celé číslo\",\n\t\"IrhN\": \"celé číslo větší nebo rovné nule\",\n\t\"OQnL\": \"desetinné číslo mezi 1 a 0 (včetně)\",\n\t\"RFGF\": \"text\",\n\t\"XPGc\": \"binární\",\n\t\"jbqY\": \"spodní mez intervalu\",\n\t\"GlDV\": \"horní mez intervalu\",\n\t\"eHkc\": \"absolutní četnost \",\n\t\"Dwuz\": \"kumulativní absolutní četnost\",\n\t\"iDVx\": \"relativní četnost (v %)\",\n\t\"oIyG\": \"kumulativní relativní četnost (v %)\",\n\t\"ZVbP\": \"hodnota\",\n\t\"mXpR\": \"četnost\",\n\t\"bLoI\": \"počet případů\",\n\t\"mjPq\": \"hladina významnosti\",\n\t\"NzBg\": \"přípustná chyba\",\n\t\"GynK\": \"dolní mez intervalu spolehlivosti\",\n\t\"iIPc\": \"horní mez intervalu spolehlivosti\",\n\t\"nCHN\": \"podíl hodnoty v %\",\n\t\"nZvR\": \"hodnota testového kritéria W\",\n\t\"jBSf\": \"hodnota testového kritéria K\",\n\t\"UyOj\": \"Tento typ vektoru akceptuje pouze numerické a prázdné hodnoty. Vrácená chybná hodnota: ${value}\",\n\t\"HhLt\": \"Hodnota '${value}' je mimo přípustný rozsah enumerátoru '${name}' (${title}); možné hodnoty jsou ${keys}\",\n\t\"ibNu\": \"Metoda '${method}' není určena pro ${type} vektor.\",\n\t\"FepU\": \"Očekávala se hodnota typu Array, místo toho byla zjištěna hodnota ${value}\",\n\t\"FIQW\": \"Očekávala se hodnota typu NumericMatrix, místo toho byla zjištěna hodnota ${value}\",\n\t\"OrZc\": \"Ověří, zdali je hodnota typu numerické matice (tedy matice obsahující pouze numerické vektory). V opačném případě vyvolá chybu.\",\n\t\"Jphg\": \"Hodnota argumentu '${name}' (${title}) musí být číslo. Vrácená hodnota: ${value}\",\n\t\"vKlu\": \"Hodnota argumentu '${name}' (${title}) musí být mezi 0 a 1 včetně. Vrácená hodnota ${value}\",\n\t\"jrQP\": \"Analýzu nelze provést bez specifikace matice.\",\n\t\"RLob\": \"Argument musí být typu vektor, místo toho přijata hodnota ${value}\",\n\t\"Kvpv\": \"Argument musí být numerický vektor.\",\n\t\"KvHv\": \"Argument musí být binární vektor, platný identifikátor binárního vektoru nebo řada (Array) převoditelná na binární vektor.\",\n\t\"NfvF\": \"Ověří, zdali je hodnota číslo. V opačném případě vyvolá chybu.\",\n\t\"GweD\": \"Ověří, zdali je hodnota číslo mezi 0 a 1 (včetně hraničních hodnot). V opačném případě vyvolá chybu.\",\n\t\"GHFj\": \"Ověří, zdali je hodnota binární povahy. V opačném případě hodnotu automaticky převede na typ boolean a nevyvolá tudíž nikdy chybu.\",\n\t\"GJry\": \"Ověří, zdali je hodnota typu Vector. V opačném případě se někdy pokusí hodnotu převést na danou instanci, záleží na volající metodě.\",\n\t\"gGTf\": \"Ověří, zdali je hodnota typu NumericVector. V opačném případě se někdy pokusí hodnotu převést na danou instanci, záleží na volající metodě.\",\n\t\"HOuY\": \"Hodnota argumentu '${name}' (${title}) nemůže být prázdná nebo nespecifikovaná.\",\n\t\"pxGY\": \"Ověří, zdali není hodnota prázdná (vyjma 0 a nepravda). V opačném případě vrátí chybu.\",\n\t\"nQvK\": \"Vektor typu ${type} nelze v dané sadě vektorů použít.\",\n\t\"eJTP\": \"Hodnotou parametru ${title} (${name}) může být pouze sada vektorů nebo jejich identifikátorů (i v případě, že by se mělo pouze o jediný prvek v sadě).\",\n\t\"kdjd\": \"Minimální počet vektorů v sadě pro parametr '${title}' (${name}) je ${value}, zadáno ${param}.\",\n\t\"qkPg\": \"Maximální počet vektorů v sadě pro parametr '${title}' (${name}) je ${value}, zadáno ${param}.\",\n\t\"wRbe\": \"funkce\",\n\t\"rlTY\": \"metoda\",\n\t\"LOYN\": \"numerický\",\n\t\"zoiB\": \"nominální\",\n\t\"OkoC\": \"binární\",\n\t\"oPEt\": \"Způsob volání metody\",\n\t\"VVSN\": \"Automatický filtr hodnot\",\n\t\"GDkm\": \"Pouze číselné hodnoty (včetně nul).\",\n\t\"NizL\": \"Integrace dle třídy\",\n\t\"AfXp\": \"typ vektoru\",\n\t\"picU\": \"dostupnost\",\n\t\"KxQM\": \"Struktura vrácené hodnoty\",\n\t\"nzmJ\": \"Příklady syntaxe\",\n\t\"FRpk\": \"Argumenty\",\n\t\"QUJS\": \"id\",\n\t\"jBGO\": \"popis\",\n\t\"dmmV\": \"typ hodnoty\",\n\t\"tGqA\": \"validátor\",\n\t\"VPYX\": \"povinný\",\n\t\"pDgb\": \"defaultní hodnota\",\n\t\"WLsu\": \"Zjistit více\",\n\t\"llQx\": \"celé číslo\",\n\t\"oMas\": \"libovolný typ hodnoty\",\n\t\"kLhB\": \"objekt\",\n\t\"qdkt\": \"řada\",\n\t\"P94q\": \"Metody statistické analýzy vektorů\",\n\t\"rL7a\": \"Základní třídou aplikace je Vector, tedy řada (array) prvků. Vector je dědičnou třídou třídy Array a dědí s ní tak všechny její původní metody, přičemž o desítky dalších ji rozšiřuje - tyto rozšiřující metody jsou popsány níže. Kromě toho má třída Vector mnoho dalších vlastních metod, jako jsou funkce generování obsahu, třídící/řadící metody, metody k zápisu a čtení metadat. Tato část dokumentace bude zpracovávána postupně. Třída Vector je uživatlei přístupná skrze tři dědičné třídy, které validují typ hodnot, kterou se mohou stát jejich členy (NumericVector, StringVector a BooleanVector), přičemž dostupnost metod u každého typu třídy se liší (např. u StringVector instance nemůžem z logického důvodu použít metodu průměru). \",\n\t\"pTvR\": \"Pearsonův korelační koeficient\",\n\t\"wPyG\": \"Stanoví statistický protokol Pearsonova korelačního koeficientu. Pearsonova korelace je statistická metoda, která se používá k měření vztahu mezi dvěma veličinami. Jejím cílem je zjistit, zda existuje lineární vztah mezi těmito veličinami a jaký je jeho intenzita.\\nPearsonova korelace se vypočítá pomocí vzorce, který se nazývá Pearsonův koeficient korelace. Tento koeficient se pohybuje v rozmezí od -1 do 1 a udává, jak silně je mezi veličinami vztah. Pokud je koeficient blízký -1, znamená to, že mezi veličinami je silný negativní vztah, což znamená, že když se hodnota jedné veličiny zvyšuje, hodnota druhé veličiny klesá. Naopak pokud je koeficient blízký 1, znamená to, že mezi veličinami je silný pozitivní vztah, což znamená, že když se hodnota jedné veličiny zvyšuje, hodnota druhé veličiny také roste. Pokud je koeficient blízký 0, znamená to, že mezi veličinami není žádný vztah nebo je vztah velmi slabý.\\nPearsonova korelace se používá především k porovnávání dvou kvantitativních veličin, tj. veličin, které jsou měřitelné na škále s přesnými hodnotami (například věk, výška nebo hmotnost). Může se použít k určení, zda existuje vztah mezi těmito veličinami a jaký je jeho charakter. Například může být Pearsonova korelace použita k porovnání věku a hmotnosti a zjistit, zda existuje vztah mezi těmito veličinami a jaký je jeho charakter. Může se také použít k porovnání výsledků dvou různých testů a zjistit, zda existuje vztah mezi výsledky těchto testů. Zdroj: https://chat.openai.com/chat\",\n\t\"qFEM\": \"první proměnná\",\n\t\"tpUu\": \"druhá proměnná\",\n\t\"tpUR\": \"třetí (kontrolní) proměnná\",\n\t\"eJTT\": \"Spearmanův korelační koeficient\",\n\t\"jAGi\": \"Stanoví statistický protokol Spearmanova koeficientu pořadové korelace. Na rozdíl od Pearsonova korelačního koeficientu vychází hodnota testu z pořadí hodnot ve vstupních proměnných.\",\n\t\"mgBC\": \"Kendallova korelace\",\n\t\"VOmC\": \"Stanoví statistický protokol Kendallova korelačního koeficientu Tau-B. Pokud byste tutéž operaci počítali v SPSS, patrně dostanete mírně odlišný výsledek. Podle všeho je to vlivem odlišné citlivosti na desetinná místa u obou systémů. Na interpretaci výsledku by to nicméně zásadní vliv mít nemělo.\",\n\t\"xfSf\": \"parciální korelace\",\n\t\"UcfZ\": \"Parciální korelační koeficient umožňuje zjistit, jaký je vztah mezi dvěma proměnnými, přičemž zohledňuje možný vliv třetí, kontrolní proměnné. Zjednodušeně řečeno je tento test iterací Pearsonova korelačního koeficientu nad kombinacemi třech vstupních proměnných.\",\n\t\"AagR\": \"bodově biseriální korelace\",\n\t\"OMiA\": \"Bodově biseriální korelační koeficient se používá k vyhodnocení vztahu mezi dvěma proměnnými, kde první proměnná je binárního typu (boolean, biseriální) a druhá proměnná je spojitá. Výpočetně je metoda totožná s výpočet Pearsonova korelačního koeficient, s tím rozdílem, že binární hodnota je před výpočtem transformována (hodnota pravda/true = 1, hodnota nepravda/false = 0). Interpretace koeficientu je totožná s interpretací výše uvedeného koeficientu.\",\n\t\"YqRh\": \"Dvouvýběrový t-test\",\n\t\"gILL\": \"Stanoví statistický protokol Studentova t-testu pro dva nezávislé výběry, které jsou definovány vlastní proměnnou (tedy dvěma numerickými vektory). Argumenty tvoří buď dva numerické vektory, nebo jeden numerický a jen faktorový vektor (obvykle text, ale může být i numerický či binární). Pokud je použit jako faktor vektor, který má více než dvě unikátní hodnoty, jsou pro test uvažovány pouze první dvě unikátní nalezené hodnoty (ostatní se ignorují) - v takovém případě je informace o velikosti čistého vzorku nepodstatná, nicméně hladina významnosti, do které velikost vzorku vstupuje, je již založena na čistých případech.\",\n\t\"mmXD\": \"T-test (párový)\",\n\t\"kPqo\": \"Stanoví statistický protokol párového t-testu pro dva závislé výběry. Test se používá pro srovnání dvou závislých výběrů, u kterých je předpoklad normálního rozdělení. Analogickou metodou pro ordinální proměnné (či proměnné, které nemají předpoklad normality) je Wilcoxonův znaménkový test pro dva závislé výběry.\",\n\t\"yWUM\": \"numerický vektor\",\n\t\"rAyq\": \"Bez filtrování.\",\n\t\"IIlO\": \"protokol výstupu metody\",\n\t\"DfLu\": \"matice\",\n\t\"aaVG\": \"Ověří, zdali je hodnota platným členem enumerace. V opačném případě vyvolá chybu.\",\n\t\"dFiw\": \"Ověří, zdali se jedná o celé kladné číslo větší než nula. V opačném případě vyvolá chybu.\",\n\t\"iY0c\": \"Enumerátory\",\n\t\"9oHx\": \"hodnota\",\n\t\"bB5f\": \"popis\",\n\t\"NgVa\": \"koeficient tau-b\",\n\t\"mgBA\": \"koeficient tau-a\",\n\t\"boQk\": \"binární vektor\",\n\t\"OCKc\": \"Ověří, zdali je hodnota typu binárního vektoru. V opačném případě vyvolá chybu.\",\n\t\"CPwN\": \"Odstraní z vektorů prázdné hodnoty, aniž by odstranění řádku v jednom vektoru ovlivnilo jiný vektor.\",\n\t\"Blaz\": \"Vstupem může být libovolná hodnota, validátor nevrací chybu.\",\n\t\"baJo\": \"Jednofaktorová analýza rozptylu (ANOVA)\",\n\t\"qqQo\": \"Stanoví statistický protokol analýzy rozptylu jednoduchého třídění (One-way ANOVA). Metoda má dva argumenty. První tvoří řada numerických vektorů, kde minimálně jeden vektor je povinný. Druhý argument je nepovinný a představuje shlukovací faktor, tedy textovou proměnnou, která v řádcích určuje příslučnost numerického faktoru ke skupině. Pokud je zadán druhý parametr, z první skupiny vektorů je zohledňován pouze první. V případě, že faktor neuvádíme, je vhodné vybrat minimálně dva vektory pro první argument, v opačném případě je použití metody bezpřednětné (není co srovnávat).\",\n\t\"iJaa\": \"vektor/y\",\n\t\"iJEe\": \"skupinový faktor\",\n\t\"rPQr\": \"Mann-Whitneyho test\",\n\t\"vzHj\": \"Stanoví statistický protokol Mann-Whitneyho U testu. Jedná se o neparametrický test nulové hypotézy, která srovnává náhodně vybrané hodnoty X a Y ze dvou populací, přičemž pravděpodobnost, že X bude větší než Y, se rovná pravděpodobnosti, že Y bude větší než X. Metoda je analogií k dvouvýběrovému t-testu, u kterého se však předpokládá normální rozdělení.\",\n\t\"vlCA\": \"lineární regrese\",\n\t\"dzFE\": \"Lineární regrese je statistická metoda používaná k nalezení vztahu mezi dvěma proměnnými. Tyto proměnné jsou obvykle označeny jako závislá proměnná a nezávislá proměnná. Cílem lineární regrese je najít nejlepší lineární aproximaci závislé proměnné v závislosti na nezávislé proměnné. Lineární regrese se používá k predikci hodnoty závislé proměnné pro danou hodnotu nezávislé proměnné, když mezi nimi existuje lineární vztah. Tento vztah je reprezentován pomocí rovnice lineární regrese, která popisuje, jak se hodnoty závislé proměnné mění v závislosti na hodnotách nezávislé proměnné. Lineární regrese je často používána v různých oblastech, jako je ekonomie, sociologie, biologie, psychologie, inženýrství a dalších.\\n\\nMetoda umožňuje upřesnit, pro jakou transformaci modelu (např. lineární, logaritmovanou) hledáme koeficient determinace.\",\n\t\"jDlm\": \"nezávislá (vysvětlující) proměnná (X)\",\n\t\"jFVv\": \"závislá (vysvětlovaná) proměnná (Y)\",\n\t\"OBml\": \"regresní model\",\n\t\"Cpsw\": \"lineární\",\n\t\"UtZD\": \"logaritmický\",\n\t\"SCOx\": \"hyperbolický\",\n\t\"QaJi\": \"exponenciální\",\n\t\"HUMA\": \"kvadratický\",\n\t\"TkNf\": \"U test\",\n\t\"Shpv\": \"Z test\",\n\t\"VqBH\": \"koeficient determinace\",\n\t\"Jdfb\": \"F test\",\n\t\"TDpu\": \"konstanta funkce\",\n\t\"eFcW\": \"koeficient funkce\",\n\t\"HksP\": \"Poměr determinace P2 (ANOVA)\",\n\t\"qCgT\": \"statistiky ANOVA\",\n\t\"cXCr\": \"celkem skupin\",\n\t\"thNv\": \"meziskupinové efekty\",\n\t\"SqTd\": \"suma čtverců\",\n\t\"GiRP\": \"vnitroskupinové efekty\",\n\t\"P67p\": \"celkem\",\n\t\"gRix\": \"kontingence\",\n\t\"fqwd\": \"Stanoví statistický protokol kontingence. Parametry metody jsou a) řádková proměnná, b) sloupcová proměnná a volitelně c) četnost skupiny a/b (pokud je prázdná, bere se, že četnost průniku je 1). Výstupem metody jspi kromě chí^2 testu testu také koeficienty Cramérovo V a Pearsonovo C, které doplňují popis vztahů mezi proměnnými.\",\n\t\"gLRN\": \"řádková proměnná\",\n\t\"bpjC\": \"sloupcová proměnná\",\n\t\"fqUi\": \"proměnná četnosti\",\n\t\"GfeP\": \"chí^2 test\",\n\t\"VYQH\": \"Cramérovo V\",\n\t\"BUaN\": \"Pearsonovo C\",\n\t\"bpCq\": \"Ověří, zdali se jedná o číselnou hodnotu větší než nula. V opačném případě vyvolá chybu.\",\n\t\"ChzY\": \"Wilcoxonův znaménkový test pro dva závislé výběry\",\n\t\"pApR\": \"Wilcoxonův znaménkový test je neparametrický statistický test používaný k určení, zda dva příbuzné nebo spárované vzorky mají stejný medián nebo ne. Používá se, když data nejsou normálně rozdělena nebo je porušen předpoklad stejných rozptylů. Tento test je vhodný pro malé velikosti vzorků.\",\n\t\"9KFq\": \"Z test\",\n\t\"dSWt\": \"Parametr ${name} (${title}) pro metodu ${method} je povinný.\",\n\t\"EFfS\": \"Argument '${name}' nelze pro metodu ${method} použít, neboť není definován v konfiguraci metody.\",\n\t\"oFZO\": \"Argumentem/argumenty musí být alespoň jeden numerický vektor.\",\n\t\"e0uy\": \"Argument musí být typu Array.\",\n\t\"xV0p\": \"Argument nemůže být prázdná instance třídy array.\",\n\t\"cNG4\": \"Argument musí být numerický vektor nebo jeho platný identifikátor.\",\n\t\"BoEs\": \"Maticový model metody '${name}' nebyl nalezen\",\n\t\"OH5v\": \"Pokud argumenty specifikují faktorovou proměnnou (druhý argument), rozloží se první argument (buďto numerický vektor nebo první vektor v matici, pokud je prvním argumentem matice) dle hodnot faktoru do nové matice. Pokud jsou argumenty bez faktoru (tedy druhý argument je prázdný), vezme první dva vektory z prvního argumentu 'vectors' (matice) a následně odstraní řádky s prázdnými hodnotami.V případě, že není zadán argument 'factor' a argument 'vectors' zároveň obsahuje pouze jediný vektor nebo je sám numerickým vektorem, vyhodí chybu (bez faktoru jsou třeba alespoň dva numerické vektory v prvním argumentu).\",\n\t\"HHCW\": \"Minimální počet vektorů pro argument 'vectors' jsou 2 (pokud není specifikovan argument ''factor' - pak stačí pouze jeden).\",\n\t\"WGo9\": \"jakýkoliv vektor\",\n\t\"mPC4\": \"Ověří, zdali je argument typu vektor, nebo zdali se jedná o validní identifkátor vektoru v matice, nebo - pokud je argument typu array - se pokusí řadu pomocí funkce 'vectorify' převést na vektor. Pokud se ani jedna z variant nezdaří, vyhodí chybu.\",\n\t\"suji\": \"Ověří, zdali je argument typově numerický vektor, nebo zdali se jedná o validní identifkátor numerického vektoru v matici, nebo - pokud je argument typu array - se pokusí řadu pomocí funkce 'numerify' převést na numerický vektor. Pokud se ani jedna z variant nezdaří, vyhodí chybu.\",\n\t\"AQoT\": \"numerický vektor(y)\",\n\t\"gtdH\": \"numerický vektor\",\n\t\"nohy\": \"Ověří, zdali je argument buďto numerický vektor, jeho identifikátor nebo řada převoditelná na numerický vektor, anebo zdali se jedná o řadu numerických vektorů (resp. hodnot, které jsou buďto vektory, identifikátry nebo hodnoty převoditelné na numerické vektory - v libovolné kombinace). Pokud se ani jedna z variant nezdaří, vyhodí chybu.\",\n\t\"wggy\": \"numerický vektor\",\n\t\"8TtV\": \"numerický vektor nebo matice numerických vektorů\",\n\t\"Ld1F\": \"Maticové metody představují statistické metody, které je možné provádět nad danou maticí. Obecně je lze volat dvě způsoby: buďto přímo (např. {Matrix}.correlPearson(0,1), nebo pomocí obecné metody 'analyze', např. {Matrix}.analyze('correlPearson').run(0,1). Rozdíl mezi první a druhým způsobem spočívá v tom, že u první metody dotneme čistý výsledek (u daného příkladu objekt s vlastnostmi r a p), v druhém případě dostaneme zpět celou třídy MatrixAnalysis, obsahující kromě výsledku i metadata (jako jsou informacee o vzorku, trvání výpočtu ad.) a také vstupní model, specifikaci argumentů atd. Pokud tedy potřebujete v průběhu výpočtu uchovávat metadata, je vhodné volat metody přes funkci 'analyze', kde parametr tvoří název metody.\",\n\t\"ISCX\": \"Každá metoda má specifikované argumenty a jejich validátory. Validátory metod ověřují, zdali jsou uživatelem poskytnuté parametry v souladu s očekávanými vstupy výpočetních funkcí a v řadě případů jsou i schopné kompatibilní typy (třeba Array x Vector) překonvertovat. Validátory často fungují v několika krocích, tzn. pokud se jim nezdaří validovat vstupní hodnotu jením způsobem, mají v zásobě třeba ještě dvě další strategie konverze. Hodnota validátorů spočívá v tom, že výpočetní metoda dostane skutečně takové parametry, na základě kterých výslednou statistiku spočítá správně. \",\n\t\"1Tcp\": \"Řada metod má specifikovaný tzv. preprocessor, což je funkce, která vstupní data výpočetních funkcí upraví na potřebný formát. Nejčastěji se jedná o to, že ze vstupních vektorů vyřadí řádky s prázdnámi hodnotami. V některých metodách ale provádí hlubší změny, např. transformaci matice dle určitého klíče (např. ANOVA). Preprocessory mají ještě jednu funkci, a to že do dat ukládají statistiky vstupního (raw) a počítaného (net) souboru.\",\n\t\"XY70\": \"Dokumentace statistických metod matic\",\n\t\"bkfk\": \"Argumenty jako vlastnosti objektu\",\n\t\"BE4u\": \"Metoda má dva parametry: vectors (první a povinný) a factor (druhý, nepovinný). V uvedeném příkladu je jako argument specifikován jediný objekt, který specifikuje hodnoty jednotlivých parametrů funkce. V této metodě je možné uvést parametr vectors i jako jediný vektor.\",\n\t\"vO3D\": \"Argumenty jako řada\",\n\t\"D9Ro\": \"Argumenty jsou standardním způsobem řazeny za sebe. Je zde zásadní dodržovat pořadí argumentů a krom toho, první argument by měl být ideálně ve formátu array, např. [vector1, vector2].\",\n\t\"ppR3\": \"Implementace argumentu 'factor'\",\n\t\"SQSt\": \"Jako druhý parametr je specifikován faktor, tedy proměnná, dle které se přetransformuje argument vector (případně první vektor, pakliže je zadáno více numerických vektorů).\",\n\t\"dKFL\": \"Ověří, zdali je zadaná hodnota klíčem enumerace (seznamu možných hodnot). Pokud ne, vyhodí chybu.\",\n\t\"u5oV\": \"enumerace\",\n\t\"Cumi\": \"Vstupní argumenty převede na vektory, ze kterých vytvoří matici. Z této matice následně odebere všechny řádky, které alespoň v jedné buňce obsahují prázdnou hodnotu. Vektory z této dceřiné matice poté přepíše původní argumenty, tzn. že vektory vstupují do metody již očištěné.\",\n\t\"Jpe0\": \"Pokud argumenty specifikují faktorovou proměnnou (druhý argument), rozloží se první argument (buďto numerický vektor nebo první vektor v matici, pokud je prvním argumentem matice) dle hodnot faktoru do nové matice. Pokud jsou argumenty bez faktoru (tedy druhý argument je prázdný), vezme všechny numerické vektory z prvního argumentu 'vectors' (matice) a následně odstraní řádky s prázdnými hodnotami. V případě, že není zadán argument 'factor' a argument 'vectors' zároveň obsahuje pouze jediný vektor nebo je sám numerickým vektorem, vyvolá chybu (bez faktoru jsou třeba alespoň dva numerické vektory v prvním argumentu). V dceřinné matici jsou následně vektory očištěny od prázdných hodnot (buněk), avšak nezávisle na sobě, tzn. že vstupní vektory metody nemusí mít stejný počet členů, jako je to běžné u jiných metod (korelací, párovách testů apod.). Tato skutečnost může být v rozporu se statistikou velikosti vzorku (vlastnost sample u tříd VectorAnalysis i MatrixAnalysis), je proto vhodné zohledňovat spíše hodnotu n, případně df u výstupu.\",\n\t\"JwDb\": \"Ověří, zdali je argument buďto binární (boolean) vektor, jeho identifikátor nebo řada převoditelná na binární vektor. V opačném případě vyhodí chybu,\",\n\t\"7m48\": \"Friedmanova ANOVA\",\n\t\"sUw5\": \"Friedmanova analýza rozptylu je neparametrický statistický test, který nachází své úplatnění při porovnávání rozdílů u dvou a více závislých výběrů.\",\n\t\"t1BN\": \"Friedmanův Q test\",\n\t\"8nQf\": \"Vyřazuje všechny prázdné hodnoty (buňky) vektoru.\",\n\t\"kbla\": \"binární hodnota\",\n\t\"7lbs\": \"Hodnota musí být číslo.\",\n\t\"BaeM\": \"Hodnota argumentu '${name}' (${title}) musí větší nebo rovna 1. Zadána hodnota ${value}.\",\n\t\"VxSV\": \"Hodnota argumentu '${name}' (${title}) musí být celé číslo. Zadána hodnota ${value}.\",\n\t\"ffka\": \"kladné číslo\",\n\t\"baSh\": \"Hodnota argumentu '${name}' (${title}) musí být vyšší nebo rovna nule. Zadána hodnota ${value}.\",\n\t\"j0tB\": \"Vektorový model metody '${name}' nebyl nalezen\",\n\t\"PtZB\": \"Analýzu nelze provést bez specifikace instance vektoru.\",\n\t\"2zlT\": \"Bez upřesnění intervalu\",\n\t\"X8Ft\": \"Metoda je volána bez parametrů, tzn. že velikost intervalu je automaticky spočítána jako (maximum-minimum)/odmocnina(počet prvků).\",\n\t\"lh3Z\": \"Se specifikací počtu intervalů\",\n\t\"mHb0\": \"Argument 'max' upřesní, na kolik kategorií (intervalů) má být histogram rozdělen. Argument 'max' je možné upřesnit buďto jako první parametr, nebo - pokud je argumentem objekt - jako vlatnost 'max'.\",\n\t\"3Pll\": \"Se specifikací velikosti intervalu\",\n\t\"AZXR\": \"Argument 'fix' nastaví pevnou velikost intervalu. Argument je možné upřesnit buďto jako druhý parametr (v tom případě musí být první argument null), nebo - pokud je argumentem objekt - jako vlatnost 'fix'. Argument 'max' má před argumentem 'fix' prioritu.\",\n\t\"l43h\": \"Schéma výsledku\",\n\t\"jrdS\": \"Před-výpočetní úprava dat\",\n\t\"Rd9K\": \"vstupní vektor/y\",\n\t\"dTDt\": \"shlukovací proměnná\",\n\t\"aEqW\": \"Bez specifikace četností\",\n\t\"YVF4\": \"Metoda nahrazuje chybějící argument n (četnosti) automaticky vygenerovaných vektorem, jehož každá hodnota je rovna 1. Stručně řešeno, vstupní tabulka má podobu hrubých, neagregovaných dat.\",\n\t\"h6D3\": \"Se specifikací četností\",\n\t\"l3pM\": \"Poslední argument tvoří agregované četnosti, tzn. že vstupní tabulka je již agregovaná.\",\n\t\"arer\": \"Dokumentace statistických metod vektorů\",\n\t\"U8io\": \"Vektorové funkce jsou statistické metody, které jsou prováděny nad instancemi vektorů. Jednoduchým příkladem je funkce 'sum', která sečte všechny neprázdné hodnoty v (numerickém vektoru). Vektorových metod je k dispozici celkem kolem 30, přičemž některé jsou prosté (jako např. 'sum')., jiné jsou buďto výpočetně komplexnější (testy normality), mají komplexní výstup (např. histogram) nebo vyžadují ke svému výpočtu upřesnit parametry (argumenty). Metody lze vyvolávat dvěma způsoby, buďto přímo voláním metody z instance vektoru - např vector.sum() - nebo voláním přes obecnou metodu **analyze**, např. *vector.analyze('sum').run()*. Více přístupů lze zvolit i v zadávání argumentů. Ty lze buď zadávat dle pořadí uvedeném v dokumentaci jako členy argumentů - např. parties.pci('ODS', 0.95) - nebo pomocí jediného objektu, který pomocí svých vlastnosti přesně definuje hodnoty argumenty - např. parties.pci({value: 'ODS', alpha: 0.95}). Volání metod přes obecnou funkci **analyze** je efektivní v několika ohledech, mj. proto, že umožňuje sekvenční provádění analýzy (např. před výpočtem validovat argumenty pomocí metody *with*) a také kvůli zápisu metadat do instance třídy VectorAnalysis, konkrétně vstupní a výstupní velikost vzorku (objekt *sample* a vlastnosti *raw* a *net*) a časové parametry (object *time* a vlastnosti *from* a *to*, ze kterých metoda *duration* přístupná z instance analytické třídy počítá celkovou dobu zpracování výsledků.\",\n\t\"uyVK\": \"procento\",\n\t\"R5AC\": \"Koeficient gama\",\n\t\"zKSX\": \"Goodman-Kruskalova gama je obdobou ordinálního korelačního koeficientu, tedy testu, který měří závislost mezi dvěma pořadovými proměnnými. I z toho důvodu může nabývat stejných hodnot jako ostatní korelační koeficienty (např. Pearsonův či Spearmanův) a stejně se i interpretuje. Tento test se před ostatními pořadově orientovanými korelačními metodami doporučuje tehdy, pokud mají data mnoho shodných pořadí (tzv. ties).\",\n\t\"wZUG\": \"Goodman-Kruskalova gama\",\n\t\"vdkW\": \"Tato metoda je ve vývojové fázi a může vracet neplatné výsledky či vyvolávat chybu.\",\n\t\"IWXW\": \"Kruskal-Wallisova ANOVA\",\n\t\"J5jV\": \"Stanoví statistický protokol Kruskal-Wallisovy analýzy rozptylu. Jedná se analogii analýzy rozptylu s jednoduchým tříděním, která zohledňuje pořadí hodnot v proměnných.\",\n\t\"rrWq\": \"hodnota H testu\",\n\t\"ImLY\": \"Ze všech vstupních vektorů odstraní postupně všechny prázdné buňky, aniž by odstranění v jednom vektoru ovlivnilo ostatní vektory. Výstupem je očištěná matice, jejíž vektory nemusí mít stejnou délku (počet členů).\",\n\t\"L9ff\": \"vícenásobná linární regrese\",\n\t\"MSug\": \"Stanoví statistický protokol pro vícenásobnou lineární regresi. Metodu se využívá pro odhad hodnoty závislé (vyvětlované) proměnné při změně hodnot nezávislých (vysvětlujících) proměnných.\",\n\t\"BnOT\": \"závislá (vysvětlovaná) proměnná\",\n\t\"OzwJ\": \"nezávislé (vysvětlující) proměnné\",\n\t\"Httc\": \"Wilcoxonův test\",\n\t\"sqwQ\": \"Wilcoxonův test je neparametrický test, který porovnává součet pořadí u dvou nezávislých vzorků. Je neparametrickou obdobou Studentova t-testu pro dva nazávislé výběry.\",\n\t\"Zymm\": \"hodnota Wilcoxonova testu\",\n\t\"QCkg\": \"Kendallův koeficient tau\",\n\t\"eZw1\": \"Tento typ vektoru akceptuje pouze časové hodnoty, hodnoty převoditlné na čas (datum) nebo prázdné hodnoty. Vrácená chybná hodnota: ${value}\",\n\t\"DeMU\": \"Korelační matice\",\n\t\"XtbY\": \"Stanoví korelační matici vstupních (numerických) proměnných. Výstupem je tabulka statistik korelačních koeficientů mezi kombinacemi jednotlivých proměnných, seřazených od nejvyšší absolutní hodnoty po nejnižší. Lze upřesnit, jakou metodou mají být jednotlivé analýzy zpracovány.\",\n\t\"sQ9w\": \"vstupní vektory\",\n\t\"nDx1\": \"metoda výpočtu\",\n\t\"S3WK\": \"korelační koeficient\",\n\t\"vlH2\": \"počet případů\",\n\t\"GR2Y\": \"Pearsonovo r\",\n\t\"5BMC\": \"Spearmanovo r\",\n\t\"MqE5\": \"Kendallovo Tau\",\n\t\"xKzh\": \"Koeficient gama\"\n}","module.exports = {\n\t\"0000\": \"empty text\",\n\t\"0001\": \"unknown locale key: ${value}\",\n\t\"gvdg\": \"sum\",\n\t\"iMbD\": \"Returns the sum of all non-empty numeric values of a vector.\",\n\t\"tdrm\": \"count\",\n\t\"ULJX\": \"Returns the count of all members of a vector, including empty values.\",\n\t\"eFdj\": \"geometric mean\",\n\t\"PDzr\": \"The geometric mean is a statistical indicator that is used to calculate the average value of some number or quantity. Unlike the arithmetic mean, which is calculated as the sum of all values in a set divided by the number of those values, the geometric mean is calculated as the nth root of the product of n numbers in the set. The geometric mean is often used to calculate growth or cumulative return in investments because it accounts for changes in the percentage growth of values over time. It is also used in geometry to calculate the average side length of an n-gon and in biology to calculate the average size of cells or organisms in a population.\",\n\t\"iuTi\": \"harmonic mean\",\n\t\"nhJv\": \"The harmonic mean is a statistical indicator that is used to calculate the average value of some number or quantity. Unlike the arithmetic mean and the geometric mean, which are based on the addition or multiplication of values, the harmonic mean is calculated as the quotient of the number of numbers in the set and the sum of their reciprocals. The harmonic mean is used in situations where it is important to account for how speed or power changes over time or in different situations. For example, it is used to calculate average speed, average power or average resistance in electronic circuits. It is also used in finance to calculate the average return on investments over different time periods.\",\n\t\"KZgI\": \"skewness\",\n\t\"nJbe\": \"Returns the skewness of the distribution, i.e. the asymmetry of the distribution around the mean value of the vector.\",\n\t\"oPPx\": \"kurtosis\",\n\t\"UOBG\": \"Returns the excess value of the data set. In statistics, kurtosis refers to the measure of how much the values in a collection of data differ from the mean value. Skewness is usually calculated for a data distribution curve, which is a graphical representation of the distribution of values in a given collection of data.\\nThere are two basic types of kurtosis: platykurtosis and leptokurtosis. Platykurtosis occurs when the values of a vector are distributed more or less uniformly around the mean value. This distribution appears as a U-shaped distribution curve that has a flat top. Conversely, leptokurtosis occurs when the values in a data collection are distributed with a significant deviation from the mean value. This distribution manifests itself as a 'peaked hill letter' or 'pointed valley letter' shaped distribution curve.\\nSkewedness is used to determine whether the distribution of values in a collection of data is more or less uniform, or whether there are any significant deviations from the mean value. Skewness is often used along with other metrics such as median, skewness, and quantiles to help you better understand the distribution of data and determine if there are any significant deviations from the mean value.\",\n\t\"fPra\": \"quantile\",\n\t\"yNbM\": \"Using the quantile, we can examine the distribution of a numerical series, by first sorting the series from the smallest to the largest member (number), and then selecting the first N % of members (this N is a parameter), where the last member in the selection represents the given percentile, a specific number . If the number of members in the sample is even, the quantile is calculated as the average of two adjacent values, if it is even, the quantile is just the last value.\",\n\t\"dBDt\": \"quantile value\",\n\t\"GQpQ\": \"A percentile value from a closed interval between 0 and 1 inclusive. Eg. 0 = minimum value, 0.25 = first quartile, 0.5 = median, 1 = maximum, etc.\",\n\t\"Qyba\": \"median\",\n\t\"YIir\": \"Returns the median, or middle value, of the non-empty values of a vector. This is the 50% percentile.\",\n\t\"StQx\": \"mode\",\n\t\"IBfx\": \"Returns the most frequent value in the vector (if the most frequent value is empty, returns the empty value). If there are more of the most frequent values (e.g. the frequency of X and Y values is the same), it returns the first value found in the vector.\",\n\t\"rR94\": \"arithmetic mean\",\n\t\"UYJN\": \"Returns the arithmetic mean (i.e. the quotient of the sum and the number of vector values) of all non-empty values (i.e. including zeros).\",\n\t\"oUcc\": \"standard deviation\",\n\t\"ZgSc\": \"Returns the standard deviation of non-empty values. The standard deviation is a statistical indicator that indicates how much the values in a given data set differ from each other. The standard deviation is expressed as a number that indicates how much the average value deviates from the true value in a given data set. The standard deviation is useful when comparing the amount of dispersion of data in different sets or in different groups within a single data set. The larger the standard deviation, the more the values in a given data set differ from each other.\",\n\t\"eJTq\": \"is sample\",\n\t\"FfpU\": \"Specifies whether the vector represent a sample. True if it is a sample, otherwise false (default false).\",\n\t\"FkaD\": \"minimum\",\n\t\"yBlA\": \"Returns the least non-empty value. For text, returns the first value from the alphabetical order.\",\n\t\"nKuF\": \"maximum\",\n\t\"gkep\": \"Returns the highest non-empty value. In the case of text, it returns the last value from the alphabetical order.\",\n\t\"TvQv\": \"variance\",\n\t\"sfCh\": \"Returns the variance value of this vector. The variance value is equal to the square of the standard deviation.\",\n\t\"PAwR\": \"histogram\",\n\t\"AISp\": \"Returns the histogram matrix of the given vector. The method can be chosen with or without parameter specification. If the parameter 'maximum number of intervals' (maxIntervals) is not specified, its value is automatically calculated as the variation range/root of the number of elements. If the parameter 'fixed interval size' (fixedInterval) is specified, this value is taken as decisive for the number of intervals. The two values are not compatible (although they do not return an error), when specifying both, the maxIntervals parameter is taken as a priority.\",\n\t\"WnZK\": \"maximum intervals\",\n\t\"mcOp\": \"Specifies the maximum number of intervals the method can generate. The argument is appropriate to choose when we have too many cases in the vector and the standard way of calculating the size of the interval leads to too many categories.\",\n\t\"Mnfn\": \"fixed interval\",\n\t\"yOuB\": \"Specifies the size of the interval, according to which the method then classifies the cases. The argument is appropriate to choose when we have too many cases in the vector and the standard way of calculating the size of the interval leads to too many categories.\",\n\t\"mXxJ\": \"range\",\n\t\"dnzB\": \"Returns the difference between the largest and smallest non-empty values.\",\n\t\"uwpU\": \"coefficient of variation\",\n\t\"fUpj\": \"The coefficient of variation (also called relative variance) is a statistical indicator that measures the degree of variability or dispersion of data relative to its mean value. It is a dimensionless measure of variability that allows the variance of different data sets to be compared regardless of the units in which the data are expressed. The coefficient of variation is calculated as the ratio of the standard deviation (sigma) to the mean (x) in the data set, multiplied by 100 to express it as a percentage. where the coefficient of variation is low, it means that the data are relatively homogeneous or not widely dispersed relative to the mean. If, on the other hand, it is high, it means that the data is very diverse or significantly different from the average. The coefficient of variation is mainly used to compare the variability between different data sets. For example, it is often used in biology, medicine, economics, psychology, and sociology to measure the variability of different populations or groups.\",\n\t\"dYJK\": \"frequency table\",\n\t\"Tzyp\": \"Returns a frequency table object with the breakdown of elements and their frequency.\",\n\t\"gZCx\": \"table order mode\",\n\t\"MgID\": \"Specifies the key to sort the data in the output table. It is possible to choose one of four methods (max-min, min-max, A-Z, Z-A), while the default sorting is according to frequency from largest to smallest.\",\n\t\"AUbD\": \"by frequency descending\",\n\t\"WSJH\": \"by frequency ascending\",\n\t\"dkxz\": \"by value ascending\",\n\t\"vJCU\": \"by value descending\",\n\t\"dLmV\": \"standard error of the mean\",\n\t\"ZBnI\": \"Returns the value of the standard error of the estimate of the mean. The standard error of the mean is a statistical measure of the variability of the sample mean of the estimated parameter in the entire population. This is an estimate of the standard deviation of the sample mean. The mean error of the mean is calculated as the ratio of the estimated standard deviation of the sample mean to the square root of the sample size. The larger the sample size, the smaller the mean error of the mean, meaning that the estimate of the sample mean is more accurate and more closely aligned with the entire population mean. The mean error of the mean is useful for estimating confidence intervals of the sample mean, which allows us to determine how accurately it estimates the population mean.\",\n\t\"VEAt\": \"one-sample t-test\",\n\t\"rbjM\": \"Returns the statistical log for a one-sample t-test given the population mean.\",\n\t\"GRoZ\": \"population mean\",\n\t\"xtfz\": \"The value of the population (comparative) arithmetic mean against which the testing is performed.\",\n\t\"yHjW\": \"confidence interval of the mean\",\n\t\"DDpa\": \"Returns the statistical log of the confidence interval estimate of the sample mean at a specified significance level. If the number of cases is less than 30, the Student's T-distribution is used, otherwise the standardized normal distribution is used.\",\n\t\"lFlm\": \"level of significance\",\n\t\"SMbe\": \"The value of the significance level at which the interval is tested. If the number of cases is less than 30, the Student's T-distribution is used, otherwise the standardized normal distribution is used.\",\n\t\"ZhjW\": \"confidence interval of the proportion\",\n\t\"KLpa\": \"Returns the statistical log of the confidence interval estimate of the sample proportion at a specified significance level.\",\n\t\"obxp\": \"the lookup value\",\n\t\"QOvf\": \"The value whose proportion within the vector is to be calculated. It can be any value, but it should meet the criteria of the factor (e.g. text, etc. for a nominal vector).\",\n\t\"byTa\": \"Shapiro-Wilk W test\",\n\t\"LHkd\": \"Returns the statistical log of the Shapiro-Wilk W test of normality of the distribution of vector values. The Shapiro-Wilk test is a statistical test used to test the hypothesis that the data come from a normal distribution. This test is often used to verify the normality of data in statistical analysis. The Shapiro-Wilk test is based on comparing the value of the quartiles of the data with the values of the quartiles of a normal distribution. When the quartile values of the data are similar to the quartile values of the normal distribution, it is likely that the data comes from a normal distribution. Otherwise, it is likely that the data is not normal. When using the Shapiro-Wilk test, it should be noted that this test has low sensitivity for large samples, i.e. for large samples the test may be less reliable in detecting non-normality. Therefore, other tests of normality, such as the Anderson-Darling test or the Kolmogorov-Smirnov test, are often used for large samples.\",\n\t\"AgIP\": \"More examples (minimum 3) are needed to calculate the W value of the Shapiro-Wilk test.\",\n\t\"zxmM\": \"Range of values too small: ${range}\",\n\t\"TSCM\": \"Range of values too large: ${range}\",\n\t\"yhzq\": \"Too many values in the vector (over 5000).\",\n\t\"DLoe\": \"Kolmogorov-Smirnov test\",\n\t\"yQZd\": \"Returns the statistical log of the Komogorov-Smirnov normality test of the distribution of vector values. It does not currently calculate the significance level of the test. The Kolmogorov-Smirnov test (often abbreviated as the K-S test) is a statistical test used to test the hypothesis that data come from a particular distribution. This test compares the data distribution to the theoretical distribution that the data is assumed to come from and evaluates whether the data values are close enough to the theoretical distribution that the hypothesis that the data come from the given distribution can be considered true.Kolmogorov test -Smirnov is often used to test the normality of data, but it can also be used to test if the data comes from another theoretical distribution, such as the exponential or binomial distribution. The Kolmogorov-Smirnov test is generally considered to be one of the most accurate tests of normality, but it has limited sensitivity for small samples, i.e. it may be less reliable in detecting non-normality for small samples. Therefore, other tests of normality, such as the Shapiro-Wilk test or the Anderson-Darling test, are often used for small samples.\",\n\t\"sDgR\": \"p-value\",\n\t\"cBNP\": \"T-value\",\n\t\"OYQu\": \"degrees of freedom\",\n\t\"pelN\": \"number\",\n\t\"FxzE\": \"any value type\",\n\t\"DQnl\": \"whole number (integer)\",\n\t\"IrhN\": \"whole positive number (inc. zero)\",\n\t\"OQnL\": \"decimal number between 1 and 0 (including)\",\n\t\"RFGF\": \"string\",\n\t\"XPGc\": \"binary\",\n\t\"jbqY\": \"the lower limit of the interval\",\n\t\"GlDV\": \"the upper limit of the interval\",\n\t\"eHkc\": \"frequency (abs.)\",\n\t\"Dwuz\": \"cumulative frequency (abs.)\",\n\t\"iDVx\": \"frequency (%)\",\n\t\"oIyG\": \"cumulative frequency (%)\",\n\t\"ZVbP\": \"value\",\n\t\"mXpR\": \"frequency table\",\n\t\"bLoI\": \"total of cases\",\n\t\"mjPq\": \"level of significance\",\n\t\"NzBg\": \"confidence interval (+-)\",\n\t\"GynK\": \"lower limit of the interval\",\n\t\"iIPc\": \"upper limit of the interval\",\n\t\"nCHN\": \"value share in %\",\n\t\"nZvR\": \"W-test value\",\n\t\"jBSf\": \"Kolmogorov-Smirnov test value\",\n\t\"UyOj\": \"This vector type only accepts numeric and empty values. Returned error value: ${value}\",\n\t\"HhLt\": \"The value '${value}' is out of range for enumerator '${name}' (${title}); possible values are ${keys}\",\n\t\"ibNu\": \"Method '${method}' is not intended for ${type} vector.\",\n\t\"FepU\": \"Expected value of type Array, recieved ${value} instead\",\n\t\"FIQW\": \"A value of type NumericMatrix was expected, ${value} was found instead\",\n\t\"OrZc\": \"Checks if the value is of NumericMatrix type (that is, a matrix containing only numeric vectors). Otherwise, an error is thrown.\",\n\t\"Jphg\": \"Argument ''${name}' (${title}) must be a number. Thrown value: ${value}\",\n\t\"vKlu\": \"Argument ''${name}' (${title}) value must be a number between 0 and 1 (including). Thrown value: ${value}\",\n\t\"jrQP\": \"Analysis cannot be processed without a matrix specified.\",\n\t\"RLob\": \"Argument must be a vector; recieved ${value}\",\n\t\"Kvpv\": \"Argument must be a numeric vector\",\n\t\"KvHv\": \"The argument must be a binary vector, a valid binary vector identifier, or an Array convertible to a binary vector.\",\n\t\"NfvF\": \"Checks if the value is a number. Otherwise, it will throw an error.\",\n\t\"GweD\": \"Checks if the value is a number between 0 and 1 (including boundary values). Otherwise, it will throw an error.\",\n\t\"GHFj\": \"Checks if the value is binary in nature. Otherwise, it automatically converts the value to the boolean type and therefore never returns an error.\",\n\t\"GJry\": \"Checks if the value is of type Vector. Otherwise, it sometimes tries to cast the value to the given instance, depending on the calling method.\",\n\t\"gGTf\": \"Checks if the value is of type NumericVector. Otherwise, it sometimes tries to cast the value to the given instance, depending on the calling method.\",\n\t\"HOuY\": \"Argument ''${name}' (${title}) cannot be empty or undefined.\",\n\t\"pxGY\": \"Checks if the value is not empty (except 0 and false). Otherwise, it returns an error.\",\n\t\"nQvK\": \"A vector of type ${type} cannot be used in the given set of vectors.\",\n\t\"eJTP\": \"The value of the ${title} (${name}) parameter can only be a set of vectors or their identifiers (even if only a single element in the set is required).\",\n\t\"kdjd\": \"The minimum number of vectors in the set for parameter '${title}' (${name}) is ${value}, specified by ${param}.\",\n\t\"qkPg\": \"The maximum number of vectors in the set for parameter '${title}' (${name}) is ${value}, specified by ${param}.\",\n\t\"wRbe\": \"function\",\n\t\"rlTY\": \"method\",\n\t\"LOYN\": \"numeric\",\n\t\"zoiB\": \"string\",\n\t\"OkoC\": \"boolean\",\n\t\"oPEt\": \"Method calling syntax\",\n\t\"VVSN\": \"In-built default value filter\",\n\t\"GDkm\": \"Only numeric values including zeros.\",\n\t\"NizL\": \"Integration by Vector type\",\n\t\"AfXp\": \"vector type\",\n\t\"picU\": \"availability\",\n\t\"KxQM\": \"Output structure\",\n\t\"nzmJ\": \"Syntax examples\",\n\t\"FRpk\": \"Arguments\",\n\t\"QUJS\": \"id\",\n\t\"jBGO\": \"description\",\n\t\"dmmV\": \"value type\",\n\t\"tGqA\": \"validator\",\n\t\"VPYX\": \"required\",\n\t\"pDgb\": \"default value\",\n\t\"WLsu\": \"Read more\",\n\t\"llQx\": \"whole number (integer)\",\n\t\"oMas\": \"any type\",\n\t\"kLhB\": \"object\",\n\t\"qdkt\": \"array\",\n\t\"P94q\": \"Vector statistical analysis methods\",\n\t\"rL7a\": \"The basic class of the application is Vector, i.e. an array of elements. Vector is a class that inherits from Array and thus inherits with it all of its original methods, while extending it with dozens more - these extension methods are described below. In addition, the Vector class has many other methods of its own, such as content generation functions, sort/order methods, methods to write and read metadata etc. This part of the documentation will be processed gradually. The Vector class is accessible to the user through three inherited classes that validate the type of values that can become their members (NumericVector, StringVector and BooleanVector), while the availability of methods for each type of class is different (e.g. for a StringVector instance I cannot use the method diameter).\",\n\t\"pTvR\": \"Pearson correlation coefficient\",\n\t\"wPyG\": \"Returns the statistical log of the Pearson correlation coefficient.\\nThe Pearson correlation is a statistical method used to measure the relationship between two quantities. Its goal is to find out if there is a linear relationship between these quantities and what its intensity is.\\nPearson's correlation is calculated using a formula called Pearson's correlation coefficient. This coefficient ranges from -1 to 1 and indicates how strong the relationship is between the quantities. If the coefficient is close to -1, it means that there is a strong negative relationship between the quantities, which means that when the value of one quantity increases, the value of the other quantity decreases. On the contrary, if the coefficient is close to 1, it means that there is a strong positive relationship between the quantities, which means that when the value of one quantity increases, the value of the other quantity also increases. If the coefficient is close to 0, it means that there is no relationship between the quantities or the relationship is very weak.\\nPearson's correlation is mainly used to compare two quantitative quantities, i.e. quantities that can be measured on a scale with exact values (for example, age, height or weight). It can be used to determine whether there is a relationship between these quantities and what its character is. For example, Pearson's correlation can be used to compare age and weight and see if there is a relationship between these quantities and what its nature is. It can also be used to compare the results of two different tests and see if there is a relationship between the results of those tests. Source: https://chat.openai.com/chat\",\n\t\"qFEM\": \"first variable\",\n\t\"tpUu\": \"second variable\",\n\t\"tpUR\": \"third (control) variable\",\n\t\"eJTT\": \"Spearman's correlation coefficient\",\n\t\"jAGi\": \"Returns the statistical log of the Spearman rank correlation coefficient. Unlike the Pearson correlation, the Spearman method is based on a comparison of the order of magnitude of the values of the input variables.\",\n\t\"mgBC\": \"Kendall's correlation\",\n\t\"VOmC\": \"Returns the statistical log of Kendall's Tau-B correlation coefficient. If you were to calculate the same operation in SPSS, you would probably get a slightly different result. Apparently, this is due to the different sensitivity to decimal places in the two systems. However, it should not have a major influence on the interpretation of the result.\",\n\t\"xfSf\": \"partial correlation\",\n\t\"UcfZ\": \"Partial correlation is a statistical method that allows you to find out what the relationship is between two variables while taking into account the influence of a third variable. This is useful if you want to see if there is a direct relationship between two variables without being affected by the influence of other variables. For example, if you want to find out if there is a relationship between level of training and success at work, it may be useful to consider the effect of age or gender as well. In that case, you could use partial correlation to find the relationship between level of training and success at work while controlling for the effects of age and gender. The partial correlation is calculated using a formula that is derived from the Pearson correlation coefficient. It is important to note that partial correlation does not imply causation, i.e. that one variable does not cause the other, but only shows that there is some association between them. Source: https://chat.openai.com/chat.\",\n\t\"AagR\": \"biserial correlation\",\n\t\"OMiA\": \"Biserial correlation is a statistical method that is used to evaluate the relationship between two binary variables (ie variables that can have only two possible values, such as 'yes' or 'no'). Binary variables are often used in the social sciences, for example when examining the relationship between education and employment or between smoking and health. Biserial correlation is calculated using a formula that is derived from the Pearson correlation coefficient. It is important to note that biserial correlation does not imply causation, i.e. that one variable does not cause the other, but only shows that there is some association between them.\",\n\t\"YqRh\": \"T-test (independent)\",\n\t\"gILL\": \"Returns the statistical log of the Student's t-test for two independent samples that are defined by an eigenvariable (that is, two numeric vectors). Arguments are either two numeric vectors, or one numeric and only a factor vector (usually text, but can also be numeric or binary). If a vector that has more than two unique values is used as a factor, only the first two unique values found are considered for the test (the others are ignored) - in this case, the information about the size of the pure sample is irrelevant, however, the level of significance to which the sample size enters, it is already based on pure cases.\",\n\t\"mmXD\": \"T-test (paired)\",\n\t\"kPqo\": \"Returns the statistical log of a paired t-test for two dependent samples. Empty values are cut out in the row cross-section, i.e. that if at least one value is missing in one row, the entire row is cut from the analysis.\",\n\t\"yWUM\": \"numeric vector\",\n\t\"rAyq\": \"Selects all data from the original matrix (ie no filtering).\",\n\t\"IIlO\": \"method output log\",\n\t\"DfLu\": \"matrix\",\n\t\"aaVG\": \"Checks if the value is a valid enumeration member. Otherwise, it will throw an error.\",\n\t\"dFiw\": \"Checks if it is a positive integer greater than zero. Otherwise, it will throw an error.\",\n\t\"iY0c\": \"Enumerators\",\n\t\"9oHx\": \"value\",\n\t\"bB5f\": \"description\",\n\t\"NgVa\": \"Tau-b\",\n\t\"mgBA\": \"Tau-a\",\n\t\"boQk\": \"binary (boolean) vector\",\n\t\"OCKc\": \"Checks if the value is of type binary (boolean) vector. Otherwise, it will throw an error.\",\n\t\"CPwN\": \"Removes empty values from vectors without deleting a row in one vector affecting another vector.\",\n\t\"Blaz\": \"The input can be any value, the validator does not return an error.\",\n\t\"baJo\": \"ANOVA (one-way)\",\n\t\"qqQo\": \"Returns the One-way ANOVA statistical log. The method has two arguments. The first consists of a series of numerical vectors, where at least one vector is mandatory. The second argument is optional and represents the grouping factor, i.e. a text variable that determines whether the numerical factor belongs to the group in the rows. If the second parameter is specified, only the first of the first group of vectors is taken into account.\",\n\t\"iJaa\": \"vector(s)\",\n\t\"iJEe\": \"grouping factor\",\n\t\"rPQr\": \"Mann-Whitney test\",\n\t\"vzHj\": \"Returns the statistical log of the Mann-Whitney U test. It is a non-parametric null hypothesis test that compares randomly selected values of X and Y from two populations, with the probability that X is greater than Y equal to the probability that Y is greater than X.\",\n\t\"vlCA\": \"linear regression\",\n\t\"dzFE\": \"Linear regression is a statistical method used to find the relationship between two continuous variables. These variables are usually labeled as the dependent variable and the independent variable. The goal of linear regression is to find the best linear approximation of the dependent variable as a function of the independent variable. Linear regression is used to predict the value of the dependent variable for a given value of the independent variable when there is a linear relationship between them. This relationship is represented using a linear regression equation that describes how the values of the dependent variable change depending on the values of the independent variable. Linear regression is often used in various fields such as economics, sociology, biology, psychology, engineering and others.\\n\\nThe method allows us to specify for which transformation of the model (eg linear, logarithmic) we are looking for the coefficient of determination.\",\n\t\"jDlm\": \"independent variable (x)\",\n\t\"jFVv\": \"dependent variable (y)\",\n\t\"OBml\": \"regression model\",\n\t\"Cpsw\": \"linear\",\n\t\"UtZD\": \"log\",\n\t\"SCOx\": \"hyperbole\",\n\t\"QaJi\": \"exponential\",\n\t\"HUMA\": \"quadratic\",\n\t\"TkNf\": \"U test\",\n\t\"Shpv\": \"Z test\",\n\t\"VqBH\": \"coefficient of determination\",\n\t\"Jdfb\": \"F test\",\n\t\"TDpu\": \"constant\",\n\t\"eFcW\": \"coefficient\",\n\t\"HksP\": \"dependence coefficient\",\n\t\"qCgT\": \"ANOVA statistics\",\n\t\"cXCr\": \"total of groups\",\n\t\"thNv\": \"intergroup effects\",\n\t\"SqTd\": \"sum of squares\",\n\t\"GiRP\": \"intragroup effects\",\n\t\"P67p\": \"total\",\n\t\"gRix\": \"contingency\",\n\t\"fqwd\": \"Returns the contingency statistics log. The parameters of the method are a) row variable, b) column variable, and optionally c) frequency of group a/b (if empty, intersection frequency is taken to be 1). The output of the method is both contingency statistics (chi^2), Cramer's V, Pearson's C, etc.\",\n\t\"gLRN\": \"row variable\",\n\t\"bpjC\": \"column variable\",\n\t\"fqUi\": \"frequency variable\",\n\t\"GfeP\": \"phi^2 test\",\n\t\"VYQH\": \"Cramér V\",\n\t\"BUaN\": \"Pearson C\",\n\t\"bpCq\": \"Checks if it is a numeric value greater than zero. Otherwise, it will throw an error.\",\n\t\"ChzY\": \"Wilcoxon Signed-Ranks Test for Paired Samples\",\n\t\"pApR\": \"The Wilcoxon signed-ranks test is a non-parametric statistical test used to determine whether two related or paired samples have the same median or not. It is used when the data is not normally distributed or the assumption of equal variances is violated. This test is suitable for small sample sizes.\",\n\t\"9KFq\": \"Z test\",\n\t\"dSWt\": \"The ${name} (${title}) parameter for the ${method} method is required.\",\n\t\"EFfS\": \"The argument '${name}' cannot be used for method ${method} because it is not defined in the method configuration.\",\n\t\"oFZO\": \"The argument(s) must be at least one numeric vector.\",\n\t\"e0uy\": \"The argument must be an array.\",\n\t\"xV0p\": \"The argument cannot be an empty array.\",\n\t\"cNG4\": \"The argument must be a numeric vector or its valid identifier.\",\n\t\"BoEs\": \"Matrix method model '${name}' was not found.\",\n\t\"OH5v\": \"If the arguments specify a factor variable (the second argument), the first argument (either a numeric vector or the first vector in the matrix, if it is the first argument of the matrix) is decomposed according to the values of the factor into a new matrix. If the arguments are without a factor (i.e. the second argument is empty), it takes the first two vectors from the first argument 'vectors' (matrix) and then deletes the rows with empty values. In case the argument 'factor' and the argument 'vectors' are not specified contains only a single vector or is itself a numeric vector, throws an error (at least two numeric vectors are required in the first argument without a factor).\",\n\t\"HHCW\": \"The minimum number of vectors for the 'vectors' argument is 2 (if the 'factor' argument is not specified - then only one is sufficient).\",\n\t\"WGo9\": \"any vector\",\n\t\"mPC4\": \"Verifies if the argument is of type vector, or if it is a valid identifier of a vector in a matrix, or - if the argument is of type array - it tries to convert the array to a vector using the 'vectorify' function. If neither variant fails, it throws an error.\",\n\t\"suji\": \"It checks whether the argument is of type numeric vector, or whether it is a valid identifier of a numeric vector in a matrix, or - if the argument is of type array - tries to convert the array to a numeric vector using the 'numerify' function. If neither variant fails, it throws an error.\",\n\t\"AQoT\": \"numeric vector(s)\",\n\t\"gtdH\": \"numeric vector\",\n\t\"nohy\": \"Checks whether the argument is either a numeric vector, its identifier, or a series convertible to a numeric vector, or whether it is a series of numeric vectors (or values that are either vectors, identifiers, or values convertible to numeric vectors - in any combination). If even one of the variants fails, it throws an error.\",\n\t\"wggy\": \"numeric vector\",\n\t\"8TtV\": \"numeric vector or a matrix (array) of numeric vectors\",\n\t\"Ld1F\": \"Matrix methods represent statistical methods that can be performed on a given matrix. In general, they can be called in two ways: either directly (e.g. {Matrix}.correlPearson(0,1)) or using the generic 'analyze' method, e.g. {Matrix}.analyze('correlPearson').run(0,1) . The difference between the first and the second method is that in the first method we touch the pure result (in the given example an object with properties r and p), in the second case we get back the entire MatrixAnalysis class, containing in addition to the result also metadata (such as sample information, duration calculation, etc.) as well as the input model, specification of arguments, etc. Therefore, if you need to store metadata during the calculation, it is advisable to call the methods via the 'analysis' function, where the parameter is the name of the method.\",\n\t\"ISCX\": \"Each method has specified arguments and their validators. Method validators verify whether the parameters provided by the user are in accordance with the expected inputs of the calculation functions, and in many cases they are also able to convert compatible types (such as Array x Vector). Validators often work in several steps, ie. if they fail to validate the input value in one way, they have perhaps two other conversion strategies in store. The value of validators lies in the fact that the calculation method receives really such parameters on the basis of which it calculates the resulting statistics correctly.\",\n\t\"1Tcp\": \"A number of methods have a specified so-called preprocessor, which is a function that adjusts the input data of calculation functions to the required format. Most often, it is that it discards rows with empty values from the input vectors. In some methods, however, it makes deeper changes, e.g. matrix transformation according to a certain key (e.g. ANOVA). Preprocessors have one more function, namely that they save statistics of the input (raw) and calculated (net) file in the data.\",\n\t\"XY70\": \"Matrix statistical methods documentation\",\n\t\"bkfk\": \"Arguments as object properties\",\n\t\"BE4u\": \"The method has two parameters: vectors (first and mandatory) and factor (second, optional). In the given example, a single object is specified as an argument, which specifies the values of the individual parameters of the function. In this method, it is possible to specify the vectors parameter even as a single vector.\",\n\t\"vO3D\": \"Arguments as an array\",\n\t\"D9Ro\": \"Arguments are ordered in the standard way. It is essential to follow the order of the arguments here, and in addition, the first argument should ideally be in array format, e.g. [vector1, vector2].\",\n\t\"ppR3\": \"Factor' parameter implementation\",\n\t\"SQSt\": \"As the second parameter, a factor is specified, i.e. a variable according to which the vector argument is transformed (or the first vector, if several numerical vectors are entered).\",\n\t\"dKFL\": \"Checks if the specified value is the key of an enumeration (list of possible values). If not, it throws an error.\",\n\t\"u5oV\": \"enumerator\",\n\t\"Cumi\": \"Removes from the input vectors (matrix) all rows in which there is at least one empty value.\",\n\t\"Jpe0\": \"If the arguments specify a factor variable (the second argument), the first argument (either a numeric vector or the first vector in the matrix, if the first argument is a matrix) is decomposed according to the factor values into a new matrix. If the arguments are without a factor (ie the second argument is empty), it takes all the numeric vectors from the first argument 'vectors' (matrix) and then removes the rows with empty values. If the 'factor' argument is not specified and the 'vectors' argument contains only a single vector or is itself a numeric vector, an error will be thrown (without the factor, at least two numeric vectors are required in the first argument).\",\n\t\"JwDb\": \"Checks if the argument is either a binary (boolean) vector, its identifier, or an array convertible to a binary vector. Otherwise, it throws an error,\",\n\t\"7m48\": \"Friedman's ANOVA\",\n\t\"sUw5\": \"The Friedman test is a non-parametric statistical test developed by Milton Friedman. Similar to the parametric repeated measures ANOVA, it is used to detect differences in treatments across multiple test attempts. The procedure involves ranking each row (or block) together, then considering the values of ranks by columns. Applicable to complete block designs, it is thus a special case of the Durbin test.\",\n\t\"t1BN\": \"Friedman's Q test\",\n\t\"8nQf\": \"Removes all empty values (blank cells) from the vector.\",\n\t\"kbla\": \"boolean value\",\n\t\"7lbs\": \"The value must be a number.\",\n\t\"BaeM\": \"Argument '${name}' (${title}) value must be greater or equal to 1. Thrown value: ${value}.\",\n\t\"VxSV\": \"Argument '${name}' (${title}) value must be an integer. Thrown value: ${value}.\",\n\t\"ffka\": \"positive decimal\",\n\t\"baSh\": \"Argument '${name}' (${title}) value must be greater or equal to one. Thrown value: ${value}.\",\n\t\"j0tB\": \"Vector method model '${name}' was not found.\",\n\t\"PtZB\": \"Analysis cannot be processed without a vector specification.\",\n\t\"2zlT\": \"No interval configuration\",\n\t\"X8Ft\": \"The method is called without parameters, i.e. that the size of the interval is automatically calculated as (maximum-minimum)/root(number of elements).\",\n\t\"lh3Z\": \"Total of intervals specified\",\n\t\"mHb0\": \"The 'max' argument specifies how many categories (intervals) the histogram should be divided into. The 'max' argument can be specified either as the first parameter or - if the argument is an object - as the 'max' property.\",\n\t\"3Pll\": \"Interval size specified\",\n\t\"AZXR\": \"The 'fix' argument sets a fixed interval size. The argument can be specified either as a second parameter (in which case the first argument must be null), or - if the argument is an object - as a 'fix' attribute. The 'max' argument takes precedence over the 'fix' argument.\",\n\t\"l43h\": \"Output schema\",\n\t\"jrdS\": \"Pre-calculation data modification\",\n\t\"Rd9K\": \"input vector/s\",\n\t\"dTDt\": \"grouping variable\",\n\t\"aEqW\": \"Without specifying frequencies\",\n\t\"YVF4\": \"The method replaces the missing argument with an automatically generated n (frequency) vector, each value of which is equal to 1. Briefly, the input table takes the form of raw, unaggregated data.\",\n\t\"h6D3\": \"With specifying frequencies\",\n\t\"l3pM\": \"The last argument consists of aggregated frequencies, i.e. that the input table is already aggregated.\",\n\t\"arer\": \"Vector statistical methods documentation\",\n\t\"U8io\": \"Vector functions are statistical methods that are performed on vector instances. A simple example is the 'sum' function, which sums all the non-empty values in (a numeric vector). There are a total of around 30 vector methods available, while some are simple (such as 'sum'), others are either computationally more complex (normality tests), have a complex output (e.g. a histogram) or require parameters to be specified for their calculation (arguments ). Methods can be invoked in two ways, either by calling the method directly from the vector instance - eg vector.sum() - or by calling via the general **analysis** method, eg *vector.analyze('sum').run()*. Multiple approaches can also be chosen in entering arguments. These can either be entered according to the order specified in the documentation as members of the arguments - e.g. parties.pci('ODS', 0.95) - or using a single object that precisely defines the argument values using its properties - e.g. parties.pci({value: ' ODS', alpha: 0.95}). Calling methods via the general function **analysis** is effective in several ways, among other things, because it allows the sequential execution of the analysis (e.g. before the calculation, validate the arguments using the *with* method) and also because of writing metadata to the instance of the VectorAnalysis class, specifically the input and output sample size (object *sample* and properties *raw* and *net*) and time parameters (object *time* and properties *from* and *to*, from which the method *duration* accessible from the instance of the analysis class calculates the total result processing time.\",\n\t\"uyVK\": \"percent\",\n\t\"R5AC\": \"Gamma coefficient\",\n\t\"zKSX\": \"The Goodman-Kruskal gamma is similar to the ordinal correlation coefficient, i.e. a test that measures the dependence between two ordinal variables. For that reason, it can take on the same values as other correlation coefficients (e.g. Pearson's or Spearman's) and is interpreted in the same way. This test is recommended over other rank-oriented correlation methods when your data has many ties.\",\n\t\"wZUG\": \"The Goodman-Kruskal gamma\",\n\t\"vdkW\": \"This method is under development and may return invalid results or cause an error.\",\n\t\"IWXW\": \"Kruskal-Wallis ANOVA\",\n\t\"J5jV\": \"Return the Kruskal-Wallis ANOVA statistical log. This is an analogy to One-way ANOVA. It takes into account the order of the values in the variables.\",\n\t\"rrWq\": \"H test value\",\n\t\"ImLY\": \"Removes all empty cells from all input vectors one by one without affecting other vectors. The output is a purified matrix whose vectors do not have to have the same length (number of members).\",\n\t\"L9ff\": \"multiple linear regression\",\n\t\"MSug\": \"Returns a statistical log for multiple linear regression. The method is used to estimate the value of the dependent variable when the values of the independent (explanatory) variables change.\",\n\t\"BnOT\": \"dependent variable\",\n\t\"OzwJ\": \"independent variables\",\n\t\"Httc\": \"Wilcoxon test\",\n\t\"sqwQ\": \"The Wilcoxon test is a non-parametric test that compares the rank sum of two independent samples. It is a non-parametric analogue of Student's t-test for two independent samples.\",\n\t\"Zymm\": \"Wilcoxon test value\",\n\t\"QCkg\": \"Kendall's tau cofficient\",\n\t\"eZw1\": \"This vector type only accepts DateTime values, values convertible to DateTime value and empty values. Returned error value: ${value}\",\n\t\"DeMU\": \"Correlation matrix\",\n\t\"XtbY\": \"Returns the correlation matrix of the input (numeric) variables. It is possible to specify the method by which individual analyzes are to be processed.\",\n\t\"sQ9w\": \"input vectors\",\n\t\"nDx1\": \"calculation method\",\n\t\"S3WK\": \"correlation coefficient\",\n\t\"vlH2\": \"total of cases\",\n\t\"GR2Y\": \"Pearson's r\",\n\t\"5BMC\": \"Spearman's r\",\n\t\"MqE5\": \"Kendall's tau\",\n\t\"xKzh\": \"Gamma coefficient\"\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(10);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","Vector","Locale","Matrix","dist","matrix","arguments","vector","vectorify","NumericVector","StringVector","BooleanVector","VectorAnalysis","MatrixAnalysis","Argument","Output","locale","utils","distribution","$","lib","any","title","mdType","tag","control","type","validate","value","parent","model","number","validator","isNaN","Error","name","Number","boolean","positiveInteger","min","step","Math","round","positiveDecimal","zeroToOneInc","max","anyVector","description","isVector","isMultiple","multiple","parseVector","numericVector","v","booleanVector","numericVectors","m","arr","item","Array","isArray","isMatrix","M","forEach","push","parseMatrix","regressionModel","isEnum","enums","key","default","validateEnum","correlationMatrixMethod","frequencyOrder","e","map","indexOf","keys","join","constructor","overloads","Object","required","isRequired","undefined","normdist","x","mean","std","cumulative","erf","sqrt","exp","log","PI","pow","t","ty","tmp","res","cof","j","length","isneg","d","dd","ibeta","b","bt","gammaln","betacf","ibetainv","p","lna","lnb","pp","u","al","h","w","afac","a1","b1","abs","fdist","df1","df2","xx","y","ser","gammapinv","lna1","gln","lowRegGamma","an","aln","ap","sum","del","c","ITMAX","NaN","m2","aa","fpmin","qab","qap","qam","gammafn","z","yi","q","fact","n","xden","xnum","Infinity","sin","binomdist","successes","trials","probability","result","binomialCoefficient","k","factorial","betinc","X","A","B","C9","A0","B0","A1","B1","M9","A2","binominv","alpha","chisqdist","df","chisqinv","fdistrt","finv","normsdist","normsinv","r","c1","c2","c3","c4","c5","c6","d1","d2","d3","d4","tdist","betaln","betafn","tinv","dof","wilcoxondist","Prob","nsav","t1","random","sortByCol","prototype","toCSV","delimiter","String","replace","hasOnlyVectorChildren","filter","reduce","count","avg","mci","stdev","pci","alfa","proportion","_","distinct","obj","index","self","findIndex","JSON","stringify","asc","sort","desc","reverse","range","sample","variance","histogram","maxIntervals","fixedInterval","l","mn","mx","interval","_i","f","nc","pc","from","to","varc","frequency","order","_v","mode","percentile","pos","base","floor","rest","median","geomean","product","harmean","call","SEM","skewness","s","kurtosis","xm","ttest","getRankIndexes","sorted","Set","rank","Map","get","rankAvg","dir","sub","array","fi","li","lastIndexOf","toAvgRank","toRankAvg","intersection","covariance","ym","shapirowilk","poly","cc","nord","ret_val","i1","ssassx","summ2","ssumm2","gamma","a2","sa","xi","sx","w1","fac","asa","an25","ssa","sax","rsn","ssx","xsx","nn2","r__1","sign","asin","W","kolmogorovSmirnovTest","sampleCdf","maxDistance","T","toRanks","arrs","ranks","re1","val1","r_sum","cnt","re2","r_mean","fill","what","repetition","combinations","numerator","denominator","getRandomIndexes","total_of_elements","samplesize","indexes","delta","sig","lb","ub","rndNumber","decimal","multiplier","rndSelect","total","allowDuplicates","_sample","rndSelectOne","Function","indent","raw","toString","match","formatted","split","trim","__default","_default","Intl","DateTimeFormat","resolvedOptions","setData","language","data","overwriteExisting","getDefault","setDefault","console","warn","config","setup","code","_text","entries","_replace","listLanguages","text","matrixName","matrify","super","smap","fn","_m","pivot","target","factor","selectedKeys","selection","select","clone","flush","identifier","find","identifiers","slice","arg","appendRow","row","groups","maxRows","g","filterByIndex","removeEmpty","fs","flat","values","minRows","size","analyze","method","serialize","vectors","static","parse","error","deserialize","MatrixMethodsModels","preprocessors","removeEmptyAcrossRows","args","net","removeEmptyAcrossColumns","removeEmptyXY","groupXYRemoveEmpty","_matrix","groupANOVARemoveEmpty","defineProperty","readonly","output","unstable","asObject","wiki","with","parameters","ai","prepare","run","time","Date","duration","getTime","matrixMethods","correlPearson","nSxy","SxSy","nSx2_Sx2","nSy2_Sy2","t_test","correlSpearman","_x","rs","correlKendall","numConcordant","numDiscordant","numTiesX","numTiesY","xDiff","yDiff","cn2","tau","correlPartial","r12","r13","r23","rp","correlBiserial","correlPhi","Table","toNumeric","x1","x0","y1","_y","y0","correlGamma","n_c","n_d","correlMatrix","input","container","ttest_independent","nx","ny","sx2","sy2","my","x_2","y_2","ttest_paired","xy","x_y","anova_oneway","arrays","ns","g_avg","yi_total","yi_avg","pow_yi_min","pow_yi_min_total","yi_yn","yi_yn_total","dfwg","F","P2","ANOVA","totalOfGroups","betweenGroups","sumOfSquares","withinGroups","sumOfsquares","mannwhitney","all","concat","ac","xa","vd","va","ya","R1","R2","N1","N2","U1","U2","U","Z","linreg","reload","x2","mx2","mxy","beta1","beta0","yexp","sr","st","r2","contingency","xd","yd","xyn","o","sy","G","_n","phi","C","V","kwanova","H","wilcoxon_indpendent","n1","n2","wilcoxon_paired","absd","rabsd","pr","nr","friedman","rows","transposition","hasTies","Q","mtplinreg","logreg","preprocessor","preeprocesor","url","columns","independents","dependent","Models","properties","createObjectProperties","items","analysis","props","node","prop","format","snippets","siglevel","rndWordList","registry","WeakMap","setRegistryProperty","getRegistryProperty","set","alwaysRetunSelf","alwaysReturnSelf","pop","ifilter","models","convert","verbose","MAX_SAFE_INTEGER","nullprob","_min","_new","list","TimeVector","toYear","getYear","toMonth","getMonth","explode","level","isDate","numerify","boolify","timefy","isSample","fix","populationMean","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}